#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: teresa-turtle
#+author: William Henney
#+email: whenney@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport

* NGC 6210

** Notes for discussion section

*** Physical parameters of the nebula and star

+ [ ] He II Zanstra temperature - can we get this?
  + It looks like it might be optically thick to He+ ionizing photons
  + Tylenda:1984a have 4686/6563 = 2.5/284
  + Also need V magnitude of star
    + Supposedly V = 11.7 from SIMBAD
  + Continuum flux:
    + Flam = 3.7e9 10^(-0.4 V) = 1.8e14
+ Stellar radial velocity
  + V = -35.6 km/s from SIMBAD - citation is
+ Distance
  + Frew:2016a is the distance that people tend to use
    + Expansion distance is 2.1 \pm 0.5 kpc
      + Based on Hajian:1995a and Mellema:2004a
      + Hajian:1995a used VLA maps to derive distance of 1.57 \pm 0.4 but they didn't do any correction for matter/pattern speed
      + They used a proper motion of 3.1 \pm 0.4 mas/yr, which is along what they call the "minor" axis.  This is close to axis B
        + We find PM of 0.33 \pm 0.05 and 0.31 \pm 0.04 in units of 100 mas per 10.45 years
        + So we have 3.1 \pm 0.3, which is remarkably similar
      + The line-of-sight velocity used is 23 \pm 5 km/s
        + This is an average of literature value for the splitting 
        + whereas we have +18/-25 along axis B
        + For the splitting we measure \pm 22 km/s, but we attribute that to the A shell, not the B one
      + Combining the two, using R = 1.3, one finds
        + U / au/yr = [PM / mas/yr] [D / kpc]
        + Where 1 au/yr = 4.74 km/s
        + So, if we put ℛ V = U, then
          + 4.74 PM D = ℛ V
          + D = ℛ V / 4.74 PM
          + D = 1.3 (23 +/- 5) / 4.74 (3.1 +/- 0.4)
          + D = 2.03 +/- 0.51, which is just what Frew say
      + Other data from Frew:
        + (a, b) = (14, 14) arcsec
          + This is the elliptical shell measurements,
          + I originally though that these are radii of the Intermediate Shell
            + Which seems consistent with their Fig 1, where for NGC 2022 they are clearly measuring the shell, not the rim
            + So the surface brightness is averaged over the whole shell, even though it is dominated by the inner parts
          + /But/ it turns out below that it must be the diameter, which means it is the rim (peanut shells), not the shell proper
        + Intermediate optical thickness
          + This is because 0.1 > [N II]/Ha < 1.0, which are their cut-off values for definitely optically thin or thick
        + E(B-V) = 0.05 ± 0.07, so almost no extinction
        + S_0(Ha) = -1.12 \pm 0.08
          + This is log10 Ha surface brightness in erg cm−2 s−1 sr−1, supposedly
          + Although their eq (13) seems to be in error (shouldn't have a factor of 4)
        + log r / pc = -1.15
          + Check for consistency
          + log10(14 2000 au / pc) = log10(0.1357) => -0.867 *wrong*
          + Dividing by two fixes it log10(7 2000 au / pc) = -1.17 - close enough
        + We are pretty close to the mean trend for the S(r) tracks
        + If we were to use the IS radius instead
          + then we would increase r by two, to -0.869
          + and decrease S by 4, to -1.722
          + This would still be close to the average S(r) tracks
          + The mean slope is -3.6 instead of -2, but the dispersion about the trend is so large that you can't see this difference



*** Beto conversation [2020-06-05 Fri]

**** Nebulae with FLIERS
+ This is a cohesive class according to Garcia-Diaz:2012a
  + NGC 2392 - Eskimo
    + 197.8+17.3
    + Gaia D = 2.00 +/- 0.20
    + Inner shell expansion is very fast!
      + +/- 120 km/s along major axis (seen pole on)
      + Twisted peanut morphology
      + 1/3 to 2/3 the radius of outer shell
      + Timescale < 1000 yrs
    + Outer shell (equivalent to Turtle intermediate shell) is expanding much slower:
      + 16 km/s
      + r = 23 arcsec = 0.156 pc
      + kinematic timescale: 9500 years
    + X-rays from wind
      + Kastner:2012a
    + Cometary knots, equatorial ring in outer shell, close to plane of sky
    + FLIERS
      + Jet at PA=70, +/- 180 km/s
      + Caps at PA=10, +/- 55 km/s
  + Type IIa - slightly N-enriched (0.25 < N/O < 0.5)
    + He/H = 0.88, 12 + log O/H = 8.5, N/O = 0.4
    + |z| = 0.47 kpc, |dV| = 62.6
  + Excitation class: 10
  + CSPN
    + O(H)6f + ?
    + log T, log g, log L = 4.68, 4.0, 4.11
    + Herald:2011a - Teff = 45000, Vw = 300 km/s, Mdot = (1 - 2)e-8 Msun/yr
    + Binary: Miszalski:2019c, Guerrero:2019a
  + NGC 7009 - Saturn
    + 037.7-34.5
    + Gaia D = 1.15 +/- 0.16
    + Like the Eskimo but seen from the side
    + Type IIa
    + Excitation class: 7
    + CSPN
      + Sp. Type: O(H)
      + log T, log g, log L = 4.94, 4.90, 3.97
        + Gd2013, MK1992
      + Guerrero:2013
        + Mdot = 2.9e-9
    + H_2 emission in knots in NGC 7009 and 6543
  + NGC 6543 - Cat's Eye
    + 096.4+29.9
    + Excitation class: 5
    + Gaia D = 1.63 +/- 0.18
    + Type IIa
    + CSPN:
      + Sp. Type: Of-WR(H)
      + log T, log g, log L = 4.781, 4.7, 3.58
        + GM2019, HB2011
    + Herald:2011a - Teff = 60000 K, Vw = 1500 km/s, Mdot = (2 - 3)e-8 Msun/yr
     

**** Binaries
+ Beto thinks that binary hypothesis is overblown
**** Bertolami 
+ Single star formation must dominate
+ Planets can effect shaping

*** Type in PN classification schemes
+ According to Quireza:2007a it is a prototype of Type IIb
  + But then the Bayesian classification gives 90% probability of Type III
  + And it would be even more likely if they used 2 kpc instead of 1.6 kpc
+ Galactic latitude is 37.7 => z = 2.0 sin(37.7) = 1.22 kpc
+ Peculiar velocity is \Delta V = 56 km/s
+ Compare standard criteria for Type III:
  + z > 1 kpc (YES)
  + \Delta V > 60 km/s  (NEARLY)


*** Analogs of NGC 6210
+ We could look for similar classification in Quireza table
  + Use distance, size, radio flux, and type (IIb or III)
  + Or calculate radio luminosity as D**2 F
  + And physical size as \theta D
*** The central star
**** Results from Weidmann:2020a
+ Name: 043.1+37.7
+ Sp. Type: O(H)3
+ log g = 4.80±0.2 (HB2011)
+ log T = 4.946  (HB2011)
  + Why is this different?
  + 88,300 K as opposed to 75,000 K
  + It is because they use T* instead of T_eff
    + Difference is that R* and T* are base of wind, which is Rosseland optical depth of 20
    + Whereas R_eff, T_eff ar at \tau = 2/3
**** Results from UV spectral fits
+ Fit to lots of UV spectra
+ Excellent paper by Herald and Bianchi Herald:2011a
+ Find following:
  + Teff = 75 kK so log T = 4.875
  + log g = 4.8 +/- 0.2
  + Vinf = 2150 km/s
  + log Mdot = −8.04
  + Wind clumping f = 0.1
+ By assuming M = 0.6 Msun, they get a luminosity from combining the gravity and effective temperature
  + L = 4 pi R^2 \sigma T^4
  + g = G M / R^2
  + => L = 4 pi G M \sigma (T^4 / g) = 7450 +/- 3430
  + R = sqrt(G M / g) = 0.51 +/- 0.12 Rsun
+ They also have R/D = 0.230 Rsun/kpc from the FUV absolute flux
  + So that means D = 2.22 +/- 0.52 kpc
  + If we also add a mass uncertainty of 0.6 +/- 0.1 then we get
    + R = 0.510 +/- 0.125
    + D = 2.22 +/- 0.54 kpc
+ This is totally consistent with the expansion parallax method
***** Evolutionary tracks
+ If we take the Herald:2011a results
  + log L = 3.872 +/- 0.200
  + log T = 4.875
+ Then the Vassiliadis:1994 tracks imply M_i = 2 +/- 0.5 Msun
+ But wat about Miller-Bertolami:2016a ?
**** Nebular modelling from Bohigas:2015a - two stars?
+ Note that Bohigas:2015a propose that a composite spectrum is needed:
  1. A hot component:
     - L = 1636 Lsun
     - T = 111.3 kK
     - log g = 7
  2. An O-star:
     - L = 2067 Lsun
     - T = 30.8 kK
     - log g = 4.5
+ But they don't seem to have thought about the stellar masses that these imply
  + M = L / 4 pi G \sigma (T^4 / g)
  + R = sqrt(G M / g)
    | L, Lsun | T, kK | log g | M, Msun | R, Rsun | \lambda max, \AA | T R^2 | T^4 R^2 / L |
    |---------+-------+-------+---------+---------+----------+-------+-------------|
    |    1636 | 111.3 |   7.0 |   4.306 |   0.109 |     188. |  1.32 |      1.11e3 |
    |    2067 |  30.8 |   4.5 |   2.934 |   1.594 |     679. | 78.26 |      1.11e3 |
    #+TBLFM: $4=$1 $Lsun / 4 $pi $Grav $sigma ((1000 $2)**4 10**(-$3)) $Msun ; f3::$5=sqrt($Grav $4 $Msun 10**(-$3)) / $Rsun ; f3::$6=.209 / 1000 $2 1e-8 ;f0::$7=$2 $5**2;f2::$8=$2**4 $5**2 / $1;s3
  + So the 4.3 Msun for the hot component is obviously ridiculous
+ Also, they haven't shown that this can reproduce the UV stellar spectrum at all
  + I suspect not, since around 1000 \AA this will be dominated by the cooler component
    + see \lambda max column above, calculated for BB
    + and also the T R^2 since. in RJ limit, flux is \prop T
    + Last column T^4 R^2 / L is a consistency check - it should be constant
+ Finally, the radii that they give are far too small
  + Their claimed best model (Exp2) has (Rin, Rout) = (3.34e16, 6.64e16) cm = (0.011, 0.022) pc
  + Compare with the radius of the inner shell: 0.04 pc in He II or 0.07 pc in [O III]
  + Even taking a smaller distance (say 1.5 kpc) wouldn't change this much
**** Bolometric luminosity
+ apparent visual magnitude: m_V = +11.7
  + Citation is van-Altena:1995a
    + Also has parallax, but it is negative
  + Although Acker:1992a have 12.66 with "B" accuracy
  + Which means \Delta m = 0.1 to 0.25
  + Citation is Shaw:1985a, who actually give 12.9 +/- 0.3
  + Also Gaia G magnitude is 12.232 +/- 0.002
    + G - V = f(B - V) from [[https://gea.esac.esa.int/archive/documentation/GDR2/Data_processing/chap_cu5pho/sec_cu5pho_calibr/ssec_cu5pho_PhotTransf.html][Gaia docs]]
    + where f(x) = -0.02907	- 0.02385 x - 0.2297 x**2 - 0.001768 x**3
    + B - V = 0.6 to -0.6
      | B - V |            G - V |
      |-------+------------------|
      |  -0.6 |           -0.097 |
      |  -0.5 |           -0.074 |
      |  -0.4 |           -0.056 |
      |  -0.3 |           -0.043 |
      | -0.22 |           -0.035 |
      |  -0.1 |           -0.029 |
      |   0.0 |           -0.029 |
      |   0.1 |           -0.034 |
      |  0.22 |           -0.045 |
      |   0.3 |           -0.057 |
      |   0.4 |           -0.075 |
      |   0.5 |           -0.099 |
      |   0.6 |           -0.126 |
      |-------+------------------|
      |       | -0.061 +/- 0.009 |
      #+TBLFM: $2=-0.02907 - 0.02385 $1 - 0.2297 $1**2 - 0.001768 $1**3 ;f3::@15$2=vmeane(@I..@II);f3
    + => B - V = -0.13 to -0.03 (so mean G - V = -0.061 +/- 0.009)
    + So Gaia photometry implies V = G - (G - V) = 12.30 +/- 0.02
    + Actually, Acker:1992a give B - V = -0.22, so G - V = -0.035, so if we take that as gospel, then the Gaia G implies V = 12.27
+ distance modulus 5 log10 D - 5 = 11.5051499783 +/- 0.5
+ So absolute visual magnitude is M_V = 11.7 - 11.5 = +0.2 +/- 0.5
+ From Cazetta:1994a, we have the BC as
  + BC = 27.462 - 6.8144 log T
  + Use the Zanstra T value of 62000 +/- 2000 => log T = 4.79 +/- 0.01
    + Different from what I previously assumed of log T = 5 +/- 0.1
      + 80 \to 120 kK
  + Which gives BC = -5.17 +/- 0.07
+ So bolometric magnitude is -5.0 +/- 0.5
+ Sun has M_bol = 4.75
+ So L/L_\odot = 10**(0.4 (4.75 - -5.0 +/- 0.5)) = 7900 +/- 3600
  + This is pretty high
+ Cross-check: use the other equation in Cazetta:1994a
  + log(L/Lsun) = -0.4 V + 2.726 log T + 2 log d + 1.28 E(B-V) - 11.08
  + Or adding in the uncertainties and the E(B-V)
    + -0.4 11.7 + 2.726 (4.79 +/- 0.01) + 2 (3.30 +/- 0.1) + 1.28 (0.05 +/- 0.07) - 11.08
    + => 3.96 +/- 0.22 = 9100 +/- 4600 
  + This is rougly the same as above
+ Or, if we use the Gaia photometry (V = 12.30 +/- 0.02)
  + -0.4 (12.30 +/- 0.02) + 2.726 (4.79 +/- 0.01) + 2 (3.30 +/- 0.1) + 1.28 (0.05 +/- 0.07) - 11.08
  + => 3.72 +/- 0.22
  + So 5200 Lsun (3000 to 9000)
  + This is higher than Pottasch:2009a, mainly because of the larger distance.
+ Finally, we repeat using the T = 75 kK instead of 62 kK
  + -0.4 (12.30 +/- 0.02) + 2.726 (4.875 +/- 0.01) + 2 (3.30 +/- 0.1) + 1.28 (0.05 +/- 0.07) - 11.08
  + 3.95 +/- 0.22
  + However, the Herald:2011a method uses the FUV continuum flux to find R/D, which is why they come out with sightly lower luminosities
**** Mass-loss rate on the AGB
***** Single-scattering limit
+ Mdot = L / c V_w
+ This is the limiting factor for very long period pulsations (> 500 days)
+ Although it can be exceeded by a factor of about 3 (Miller-Bertolami:2016a)
+ Normalizing to L = 1e4 and V = 10 km/s we get
  + 2e-5 (L_4 / V_10) Msun/yr
+ We have velocities of 7 and 15 km/s for inner and outer halo
+ So at inner halo speeds, 3x single-scat limit is 4e-5 L_4 Msun/yr
+ This is very consistent with Fig 22 if L_4 > 0.5 in last 10,000 years
+ Prior to 10,000 yr ago
  + Mass loss rate 10x smaller: (2 \to 3)e-6 Msun/yr
  + Could be lower luminosity, or lower period pulsation
***** Pulsation-dependent mass loss
+ Eq (2) of MB16
  + log Mdot = -9 + 0.0032 (P/day)
  + Actually from Groenewegen:2009a
+ So 2e-6 => P = (9 - 5.699) / 0.0032 = 1031 days
  + This seems rather large

**** He II Zanstra temperature
+ Frew thesis equation 9.11 gives
  + F(4686)/F(Vis) = 8.49e-11 T**3 G4(T) (exp(26650/T) - 1)
+ Original reference is Pottasch:1984a
| T, kK |       G4 |  4686/Vis | log10 |
|-------+----------+-----------+-------|
|    50 | 6.106e-4 | 4.5621529 |  0.66 |
|    60 | 3.591e-3 | 36.824469 |  1.57 |
|    80 | 2.987e-2 | 513.29086 |  2.71 |
|   100 | 9.864e-2 | 2557.4794 |  3.41 |
|   120 | 2.088e-1 | 7617.5410 |  3.88 |
|   150 | 4.202e-1 | 23409.619 |  4.37 |
#+TBLFM: $3=8.49e-11 (1000 $1)**3 $2 (exp(26.65/$1) -1)::$4=log10($3);f2
+ Measurements of 4686
  + Pottasch:2009a have 1.5/100 x Hb
  + Tylenda:1984a have 2.5/100 x Hb
  + Phillips:1996a have 2.8/100 x Hb
  + Delgado-Inglada:2009a have 2.32 ± 0.14 
+ Measurements of Hb
  + Pottasch:2009a give the extinction-corrected value as 1.1e-10 erg/cm2/s
    + Observed is 8.07e-11
    + Really comes from Liu:2004a
    + But they cite CKS92 and give (8.13 +/- 0.19)e-11
  + Kohoutek:1981a give (8.3 +/- 0.2)e-11
+ Stellar continuum flux
  + 3.7e-9 10^(-0.4 V)
  + Using V = 12.3 +/- 0.02 gives (4.45 +/- 0.08)e-14
+ So 4686/V = ((2 +/- 0.5)/100) 1.1e-10 / (4.45 +/- 0.08) 1e-14 = 49 +/- 12
  + log10(4686/V) = 1.69 +/- 0.11
  + => T = 62000 +/- 2000
+ Pottasch:2009a found 61,000 K
  + This is very close to our own value

**** Excitation class from Reid:2010a
+ Ex_neb is based on [O III] / He II for high excitation nebulae
  + 100 I(4686) / Hb = 2.32 +/- 0.14
  + 100 I(5007) / Hb = 968 +/- 57
  + 100 I(4959) / Hb = 342 +/- 20
  + => (N_1 + N_2) / 4686 = 565 +/- 43
  + log[(N_1 + N_2) / 4686] = 2.75 +/- 0.03 => Class 4
  + But text and table description of this method are confusing
+ Ex_OIII is just based on [O III] / Hb
  + 13.1 +/- 0.3 => Ex = 0.45 (13.1 +/- 0.3) = 5.9 +/- 0.1
+ Ex_* method
  + 5.54 [ 4686 / Hb + 0.78]
  + 4686 / Hb = 0.00232 => 4.334
+ 
*** Compare the Turtle with the sample from Gonzalez-Santamaria:2020a
+ Distance is typical
+ At the boundary of Region 1 and Region 2 in Fig 4
  + t \approx 5000 years
  + T \approx 60,000 K
  + 

*** Effects of changing the distance
+ We are using 2 \pm 0.5 kpc
+ Take 2 sigma limits
  + 95% confidence level for Gaussian
  + Or 75% confidence level for general distribution with finite variance (Chebyshev inequality)
+ This means 1 to 3 kpc
+ Consequence of smaller distance: 1 kpc
  + All plane-of-sky velocities are smaller, so the speeds of the lobes will be reduced
  + Higher inclinations to plane of sky - axis B has i > 60 deg
  + Also means that IS is highly elongated, with axis ratio of 3:1
+ Larger disance: 3kpc
  + Plane of sky velocities larger - speeds of lobes now > 100 km/s in some cases
  + Lower inclinations to plane of sky - axis B has i < 30 deg

*** Literature on the Turtle and similar nebulae

**** Previous longslit spectroscopy
+ Icke:1989a
  + Fig 2d shows isovel images derived from 5 vertical (PA=350) slits in Ha and [N II]
  + You can clearly see the different knot complexes that we identify, from blue to red (left to right in the sequence of panels):
    1. NE Blue
    2. SE Blue
    3. N Red
    4. SW Red
  + Quote: "A model for the motions and structure of NGC 6210 is obviously fraught with difficulties."
+ Becker:1984a
  + Short paragraph in German. Not much use
+ Weedman:1968a earliest (?) kinematics study, not much use but should be cited
+ Rechy-Garcia:2020a
  + Studies several nebulae with (possible) fast collimated outflows, including NGC 6210
  + J320 (Jonckheere 320) looks very similar
    + Is this the same as IC 4634? Nope, that is another one
  + For Turtle, just two slits
    + Identify 3 outflows: A, B, C
      + A (PA = 132, V = +/- 19.5 km/s) is the NW knot
      + B (PA = 132, V = +/- 30.6 km/s) is the SE knot
      + C (PA = 156, V = +/- 29.4 km/s) is the N knot
    + I do not understand where the +/- comes from, since each of these is only seen on one side (red, blue, red, respectively)
    + That aside, the velocities more-or-less agree with us (+18, -31, +24)
  + Says that the jets are younger than the main shells
    + /I think this is wrong/
    + Cites Goncalves:2001a, which does indeed say this in their Table 2
      + But they have the object marked as "low confidence"
      + They cite Phillips:1986a for this, but their argument seems completely spurious
+ Phillips:1986a
  + Has some good stuff - particularly electron densities and a variety of different emission lines: He II, [Ar IV], [O I]
    + Fig 2 shows profiles along PA=333
    + [S II], [N II], and [O I] profiles are similar, peaking at knot complex to NW of star (x = -3 arcsec), but can also see the SE knot (x = +3) and peanut shell (x = +6) to the SE, plus the N knot at x = -18 arcsec
    + High ionization lines peak in center of nebula (inside peanut shell?)
    + [O III]/Hb ratio has peak that traces the inner shells - we could look at this from the HST images too
      + [ ] Look at ratio images from HST data
      + [X] Also maybe look at kinematics of He II 6560
    + Densities from [S II] are lop-sided too, being highest for knot complex to N of star
      + 
 

**** Spectrophotometry
+ Liu:2004a
+ Delgado-Inglada:2009a
  + Seems to have a smaller Hb flux: 2.162 × 10−11 erg/cm2/s
  + But this is because it is just flux through their slit




**** Densities and temperatures
+ Pottasch:2009a find "homogeneous" conditions, by which they mean that (T, n) do not vary greatly with degree of ionization
  + Spitzer IRS LH aperture does include most of the flux
    + It covers nearly all of the inner shells and most of the IS and knot complexes
    + It does not include the lobes and halo
    + Note there are actually two slightly different positions that they are summing. The position they give is the average of them
  + The IRS SH aperture is smaller
    + It covers over half of the inner shells but misses most of the IS
    + It gets the N(W) Red knot complex, but misses N(E) Red and NE Blue, which are the brightest
  + Density is 3000 to 4000 pcc from [S II], [O II], [S III], [Cl III]
  + Slightly higher from [Ar IV]: 6800 pcc
  + No error bars given!
  + T is very consistent, about 9500 K for high ionizaton, [O III], [N III], [Ne III]
  + Higher for low ionization: 10,700 K for [N II]
***** Abundances
+ Pottasch:2009a claim that it is mot enriched in N or C (C/O < 1)
+ This is unlike most other planetary nebulae, Henry:2018a, which all show enhanced M and He
+ Specifically:
  + He/H = 0.092
  + C/H = 1.2e-4 => 12 + log10(C/H) = 8.079
  + N/H = 7.0e-5 => 7.845
  + O/H = 4.9e-4 => 8.69
  + Ne/H = 1.2e-4 => 8.079
  + So N/O = 0.1429 => log(N/O) = -0.845 (slightly > solar 0.1326)
  + And C/O = 0.2449 => log(C/O) = -0.611 (half solar)
+ Compare Henry:2018a
  + N/O is at low end of PN distribution but still reasonable
  + Small C/O is very atypical of PN
***** Spatial variation of conditions
+ [X] Some things I can look at
  1. [X] Maps of line ratios from the HST images
     - In theory I need to account for continuum
     - But I can check the integrated ratios using the Pottasch:2009a results
  2. [X] Electron density for different components from Ha surface brightness
     - Estimate line-of-sight depth in two ways
       - Shell method, using radius of curvature and thickness
       - Blob method, assuming same as transverse width, maybe corrected for inclination
  3. [X] Estimate the Ha flux and ionized mass of each of the components
**** Effects of acceleration
+ The rim
  + Schoenberner:2005a have models where the rim accelerates, and also forms with a delay and at a certain radius
    + Acceleration is mainly driven by increasing wind mechanical luminosity
  + This means that the rim dynamical age is always less than the true age of the nebula
  + Mind you, their model has the rim velocity always less than the shell velocity, which is not what we see in the Turtle
    + Along Axis B we have the same speed for the rim and shell (about 40 km/s)
    + While along Axis A there is a faster rim: 50 km/s
  + /Are there any models where the rim is moving faster?/
    + 
+ The shell
  + Also accelerates probably, due to density becoming increasingly steep with radius
  + From their Fig 4 (left lower), then a dynamical time of 4000 yr, as we have for the Intermediate Shell, implies a true age of about 6000 yrs


**** Modelling and speculation 
+ Balick:2020a
  + Models of PrePNe with poloidal magnetic field
  + Form dense knots along axis - possibly explains FLIERS
+ Guerrero:2020a
  + Empirical statistics of supposed jets
  + Not really modeling but never mind
  + Find two populations of jets
  + 30% of jets are fast (> 100 km/s)
  + 70% of jets are slow (< 100 km/s)
    + These come from a speed distribution that can be modeled as 66 \pm 30 km/s
    + *Note* that our own lobes have speeds of 30 \to 90 km/s, which is exactly this range
+ Akashi:2018a
  + Formation of column crowns from jet interactions
  + Tailored for the ant nebula
  + Not clear it is any relevance for turtle, since structures end up close to axis
+ Bear:2017a and Soker:2016b
  + Triple systems
  + Quote from discussion in Soker:2016b
    : NGC 6210 (PN G043.1+37.7). This was mentioned by Soker (2004) as a descendant of a triple-stellar system with a tight bi- nary at a wide orbit (Section 3.1.2 above). As evident from Fig. 4, this is indeed a messy PN (Balick 1987; Pottasch et al. 2009), and its morphology is more compatible with the expectation from a tight binary merger. The two pairs of unequal lobes might hint that the tight binary system launched jets before it merged.
  + Quote from earlier in same paper
    : PN NGC 6210 (PN G043.1+37.7). This PN, as another example of a PN that was proposed to have been shaped by a triple-stellar system (Soker 2004), is a messy PN, with a general elliptical structure with unequal sides, blobs, filaments and two pairs of opposite jets protruding from the main messy (irregular) shell (e.g. Balick 1987; Pottasch, Bernard-Salas & Roellig 2009; I will return to this PN below).
  + Possibly comes from "Tight binary in a wide orbit" scenario. Quote:
    : The first scenario for a giant star orbited by a tight binary system involves no CEE or GEE of the giant with the tight binary system, but rather accretion by the tight binary system from the dense wind of the evolved giant star. It has been studied before (Soker 2004, where more details can be found), and it is updated here, as the PNe listed then might not be compatible with new expectations.
  + But may alternatively be "Tight binary merger". Quote:
    : In this case, the two stars enter a CEE or a GEE phase. The grav- itational drag on the two stars of the tight binary system is more influential than the three-body dynamical instability, and the two stars merge. Accretion of mass by one or two of the tight binary stars also decreases the orbital separation. Most likely, they merge well inside the envelope. As evident from equation (7), the energy released in the merger process is large. A large fraction of one side of the envelope can be ejected at high velocities, and a binary system survives: the primary and the secondary with the mass it accreted from the destroyed tertiary star (only a fraction of the destroyed tertiary star is accreted by the secondary star).
    + So one of the tight binary pair is destroyed in this scenario, leaving a binary
    + Note that this scenario predicts that the surviving binary is quite wide (how wide)
    + And that the stars have a recoil velocity of order 10 km/s
+ Jones:2020a
  + Review article on mechanisms for common-envelope evolution
+ Jones:2017a
  + Review article on binary central stars of PNe
  + Suggests all aspherical PNe (80% of PNe) are binaries
  + Abell 63 is prototype of close eclipsing binary
    + UU Sag
    + First binary CSPN to be discovered
  + pre-CE mass transfer is apparently common
    + If a jet forms from the accretion disk during this phase, then it will give polar outflows that are dynamically older than the main nebula
    + This is often seen
      + And seems to be the case with the Turtle
      + Table 2 of Jones:2014b gives examples
        + Fg 1 Boffin:2012a and Lopez:1993a
          + See also [[id:D1CDC3FA-0F4C-417F-824F-47BA7CE8408C][Fg 1]] below
        + Abell 63
        + Ethos 1
          + Miszalski:2011b
          + Inclination of 60 degrees to line of sight
          + Jet has deprojected V = 110 km/s and t = 1750 yr / kpc (distance )
          + Ring has V = 55 km/s and t = 900 yr / kpc
        + The Necklace
          + Corradi:2011a
  + Opposite case of dynamically young jets
    + Less common, but it does occur
    + Example studied by Tere is NGC 6337
      + Garcia-Diaz:2009a
      + However, it is not clear where Jones:2014b get their ages from for this nebula
      + They are certainly not in the Teresa paper
    + Also Huggins:2017a, but these are mainly very high velocity jets
      + 7 out of 9 have V > 100 km/s, up to 500 km/s

**** Analogs of Turtle among other PNe and PrePNe

***** Mendez:1992a
+ This is a very good paper that shows that most nebulae are optically thin in He I and H I continua
***** Helix nebula
+ Much older, but also claimed to be polypolar, see sec 4.6 of ODell:2004b
+ If we fast-forward the lobes another 10,000 years, then at 90 km/s (axis A) they would propagate 0.92 pc
+ This is about the same size as the outer bow-shock features seen around the Helix
***** NGC 2440
+ Multipolar, but otherwise very different from Turtle
+ Shows lots of knots/elephant trunks
+ Progenitor seems to be high-mass (3 Msun, Henry:2018a)
***** Fg 1
:PROPERTIES:
:ID:       D1CDC3FA-0F4C-417F-824F-47BA7CE8408C
:END:
+ Quote from Fig 6 caption of Jones:2020a
  : FORS2 image of the post-CE PN Fg 1 (Credit: ESO/H. Boffin). The observed jets have been shown to pre-date the central nebula by a few thousand years, while the central star is a double-degenerate binary with an orbital period of 1.195d [72].
+ So this is similar to what we are finding with the dynamic age of the outer lobes being older
+ Type IIa so missing from our similarity samples
***** Jonckheere 320
+ This has lop-sided [N II] emission, similar to turtle
+ Type III but at 4.1 kpc so missing from cousins
+ Rechy-Garcia:2020a have an in-depth study with images and slit spectra
***** Summary of comparison cousins
+ Group III-S: The Perfect Cousins (all Type III)
  + NGC 1535 - Cleopatra's Eye
  + IC 3568 - Lemon Slice
+ Group IIb-C: The Ansae Boys (all Type IIb)
  + NGC 3242
  + NGC 6826
  + NGC 7662
  + (NGC 3211) - small bur similar
+ Group IIa-C: The FLIER Family (all Type IIa)
  + NGC 2392 - Eskimo 
  + NGC 7009 - Saturn
  + NGC 6543 - Cat's Eye
+ Group III-C: Non-spherical, but not multipolar Type III
  + IC 4642
  + 
+ Group III-M: The Multipolar Mob (Type III)
  + J 320 -
  + NGC 5307 -
  + NGC 6326
+ Group III-A: Lop-sidedly asymmetric, as well as multipolar
  + NGC 6210 - Turtle
+ Group IIb-S
  + NGC 6691
  + NGC 6629
+ Group IIb-M
  + IC 4634
  + NGC 6309
***** Big Table of comparison nebulae
+ Incorporating data from Phillips:2003c
|          |            | WJH   | Morph  | T_Z(He II) |    \eta | T_eff |     L |
|----------+------------+-------+--------+------------+------+-------+-------|
| NGC 1535 | 206.4-40.5 | III-S | E      |         76 |  2.0 |    85 |  2700 |
| IC 3568  | 123.6+34.5 | III-S | E      |         45 | 1.35 |    69 |  4800 |
|----------+------------+-------+--------+------------+------+-------+-------|
| IC 4642  | 334.3-09.3 | III-C | R      |        114 |  2.0 |   115 |  4600 |
|----------+------------+-------+--------+------------+------+-------+-------|
| J320     | 190.3-17.7 | III-M | P, BR  |         57 |  1.6 |    85 |  5000 |
| NGC 5307 | 312.3+10.5 | III-M | P, BR  |         84 |  1.9 |    86 |  5700 |
| NGC 6326 | 338.1-08.3 | III-M | E (BR) |        102 |  1.3 |    91 |  6300 |
|----------+------------+-------+--------+------------+------+-------+-------|
| NGC 6210 | 043.1+37.7 | III-A | R (BR) |         61 |  1.2 |    88 |  7400 |
|----------+------------+-------+--------+------------+------+-------+-------|
| NGC 3242 | 261.0+32.0 | IIb-C | E(P)   |         90 |  1.6 |       |       |
| NGC 6826 | 083.5+12.7 | IIb-C | E(P)   |         56 |  1.6 |    50 | 12400 |
| NGC 7662 | 106.5-17.6 | IIb-C | E      |        110 |  1.4 |   126 |  6000 |
| NGC 3211 | 286.3-04.8 | IIb-C | R      |        122 |  1.6 |   145 |  2000 |
|----------+------------+-------+--------+------------+------+-------+-------|
|          |            |       |        |            |      |       |       |
***** Table of cousins
|          | Class | Sp. Type           | log T | log g | log L | Exc |  N/O |  C/O |   D |  2 R | Vexp |    t | Multi | Asym |    L | Mol | Dust |
|----------+-------+--------------------+-------+-------+-------+-----+------+------+-----+------+------+------+-------+------+------+-----+------|
| NGC 6210 | III   | O(H)3 / EL         | 4.946 |  4.80 | 3.870 |   4 | 0.14 | 0.25 |   2 | 0.28 |   34 | 4.03 | Yes   | Yes  |  530 | no  | Sil  |
|----------+-------+--------------------+-------+-------+-------+-----+------+------+-----+------+------+------+-------+------+------+-----+------|
| J 320    | III   | O(H)3 V((f))       | 4.929 |  4.70 | 3.700 |   4 | 0.04 |      | 4.1 | 0.14 | 17.5 | 3.91 | Yes   |      |  386 |     |      |
| IC 4642  | III   | ab. lines          | 5.064 |   5.8 | 3.663 |  12 |      |      | 2.7 | 0.20 |   21 | 4.66 | No    | No   |  437 |     |      |
| NGC 1535 | III   | O(H)5 + ?          | 4.929 |  4.80 | 3.440 |   8 | 0.10 | 0.8: | 2.0 | 0.18 |   32 | 2.75 | No    | No   |  640 | no  |      |
| NGC 5307 | III   | O(H)3.5 V          | 4.934 |  5.29 | 3.757 |   9 | 0.22 |      | 2.3 | 0.14 |   11 | 6.22 | Yes   | Yes  |  503 |     |      |
| NGC 6326 | III   | O(H)5-8 ((fc)) + ? | 4.958 |  5.20 | 3.799 |   9 |      |      | 2.5 | 0.14 | 16.5 | 4.15 | Yes   | ?    |  438 | CO  |      |
|----------+-------+--------------------+-------+-------+-------+-----+------+------+-----+------+------+------+-------+------+------+-----+------|
| IC 4634  | IIb   | O(H)3 If*          | 4.623 |  4.10 | 3.040 |   3 |      |      | 2.5 | 0.07 |   20 | 1.71 | Yes   | No   |  625 | no  |      |
| NGC 3211 | IIb   | EL                 | 5.160 |  5.60 | 3.300 |  10 |      |      | 2.5 | 0.19 |   29 | 3.20 |       |      | 1425 |     |      |
| NGC 6826 | IIb   | O(H)3f + ?         | 4.700 |  5.00 | 4.093 |  11 |      | 0.9: | 1.9 | 0.23 |   16 | 7.03 |       |      | 1390 | no  |      |
| NGC 7662 | IIb   | O(H)               | 5.102 |  5.70 | 3.780 |  10 |      | 1.0: | 0.8 | 0.10 |   20 | 2.44 |       |      |  404 | no  |      |
#+TBLFM: $13=$-2 $pc / 2 $-1 $km 1000 $yr ;f2
+ These are all the ones that are Type III or Type IIb that satisfy the following
  + 2 R between 0.05 and 0.3
    + Originally, this was between half and twice Turtle value
    + But, I have revised Turtle diameter upwards to be the IS diameter
    + So doesn't make such sense now!
  + L between 300 and 2000
    + where L = D**2 S(5 GHz), so prop to radio luminosity
    + Turtle has L = 530
    + For the Type III, these are all 386 \to 640, so nicely centered
    + For the Type IIb, we have some brighter ones
+ C/O Ratios are from Delgado-Inglada:2014a
  + Average of ORL and CEL values
  + Turtle has smallish errors +/- 0.05
  + Others have very large errors +/- 0.5, so could be C-rich or O-rich
+ Molecules
  + CO from Guzman-Ramirez:2018a, only 6326 detected
  + H_2 from Kastner:1996a - none detected
***** New table using better distances and sizes
|          |         PN | log T | log g | log L | D(Frew) | D(Gaia) |   D |    a |    b | lg SHa |     FHa |  lg R | FHa (Frew) |       |    m |    M |   log  L* |
|----------+------------+-------+-------+-------+---------+---------+-----+------+------+--------+---------+-------+------------+-------+------+------+-----------|
| NGC 6210 | 043.1+37.7 | 4.946 |  4.80 | 3.870 |    2.05 |         |   2 |   14 |   14 | -1.66  | 3.3e-10 | -1.17 |            | 683.5 | 12.0 |  0.5 | 4.2688560 |
|----------+------------+-------+-------+-------+---------+---------+-----+------+------+--------+---------+-------+------------+-------+------+------+-----------|
| IC 3568  | 123.6+34.5 |  4.84 |  4.05 |  3.68 |    2.27 |         |     |      |      |        |         |       |            |       |      |      |           |
| J 320    | 190.3-17.7 | 4.929 |  4.70 | 3.700 |    4.83 |   2.956 | 3.9 |  9.4 |  6.3 | -1.81  | 7.0e-11 | -1.14 |    1.8e-11 |   3.9 | 14.2 |  1.2 | 3.9225832 |
| NGC 1535 | 206.4-40.5 | 4.929 |  4.80 | 3.440 |    1.78 |     1.2 | 1.5 | 33.3 | 32.1 | −2.23  | 4.8e-10 | -0.92 |    1.2e-10 |   4.0 | 12.4 |  1.5 | 3.8126365 |
| NGC 5307 | 312.3+10.5 | 4.934 |  5.29 | 3.757 |    3.16 |      8: | 3.2 | 18.8 | 12.9 | −1.97  | 2.0e-10 | -0.92 |    4.6e-11 |   4.3 | 10.8 | -1.7 | 5.1243840 |
| IC 4642  | 334.3-09.3 | 5.064 |   5.8 | 3.663 |    2.63 |   4.632 | 3.6 | 24.1 | 21.7 | -2.59  | 1.0e-10 | -0.70 |    2.7e-11 |   3.7 | 11.5 | -1.3 | 5.3010690 |
| NGC 6326 | 338.1-08.3 | 4.958 |  5.20 | 3.799 |    3.14 |     2.8 | 3.0 | 20.6 | 13.7 | −2.08  | 1.8e-10 | -0.91 |    4.0e-11 |   4.5 | 12.1 | -0.3 | 4.6137505 |
#+TBLFM: $12=10**$-1 $pi $-2 $-3 / 203265**2 ;s2::$13=log10(1000 $-5 $au sqrt($-3 $-4) / 2 $pc) ; f2::$15=$12/$14;f1::$17=$16 - (5 log10(1000 $8) - 5) ;f1::$18=-0.4 $16 + 2.726 $3 + 2 log10($8 1000) + 1.28 0.05 - 11.08::@2$15=10**(-1.12 - $11);f1

+ m is average of B, V, G magnitudes
***** Other nebulae with excitation class 4
| NGC 6567  | Type III but WR      |
| NGC 6790  | Type IIb, very small |
| NGC 6807  | Type IV, very small  |
| NGC 6891  | Type IIb             |
| IC 4406   |                      |
| A 12      |                      |
| A 49      |                      |
| A 55      |                      |
| Cn 1-4    |                      |
| H 1-5     |                      |
| H 1-12    |                      |
| H 1-13    |                      |
| H 1-21    |                      |
| Lots more |                      |
***** Simple-looking double-shell nebulae
+ Some of these are also listed elsewhere
+ See https://twitter.com/AstroBin_com/status/1073746571215466497/photo/1
+ NGC 3242 - Jupiter Ghost
  + 261.0+32.0
  + Type IIb
  + Excitation class: 9
  + Very similar to NGC 6826
    + This has been said many times before
    + Both have polar ansae
  + /include in transition objects/
+ NGC 1514 - Crystal Ball
  + *Cancelled*
  + 165.5-15.2
  + Close: 500 pc
  + Gaia distance: 0.466 +/- 0.008
  + Type IIa
  + Excitation class: 8
  + Long period binary Jones:2017c
  + Equatorial dust ring and multipolar inner shell, so not so simple after all
    + Best to cancel this one
+ NGC 2022
  + 196.6-10.9
  + N-rich
  + Type IIa
  + Excitation class: 12
+ NGC 7662 - Blue Snowball
  + /include in transition objects/
  + 106.5-17.6
  + Gaia distance: 1.98 +/- 0.29
  + Type IIb
  + More structure than others
  + Star hotter than 1e5 K
  + See [[id:63894761-9BC5-47EC-8F21-E0D2886CC8F5][down here]]
+ NGC 6826 - has ansae
  + /include in transition objects/
  + 083.5+12.7
  + Gaia distance: 1.58 +/- 0.12
  + Type IIb
  + See also [[id:2F1B5C32-C514-4AD5-B3CC-84309A8A6D1D][down here]]
  + Similar to NGC 3242
  + Except for:
    + More unstable looking inner shell - multiple arcs
    + Strong texture to the intermediate shell
***** Type IIb sample
+ These are thin-disk rather than thick-disk, so may be a bit higher mass than the Turtle
+ Excitation class is from https://link.springer.com/content/pdf/bbm%3A978-3-662-03448-4%2F1.pdf
****** He2-77		
+ *not a PN according to Frew*
+ 298.1-00.7
+ Sp. Type: /not in Weidmann:2020a/
+ Excitation class: 2
****** IC4406		
+ 319.6+15.7
+ Excitation class: 4
+ Sp. Type: [WR]
+ /Don't use/
****** IC 4634	
+ 000.3+12.2
  + Sp. Type: O(H)3 If*
  + log T, log g = 4.623, 4.10
  + log L = 3.040
  + A bit sub-luminous and coolish (40 kK)
+ Multipolar but not asymmetric
+ This has lobes and knots that look very similar, but knot axis it is seen edge-on
+ It is Type IIb rather than Type III because it is z = 0.5 kpc and dV = 20 km/s
+ Excitation class: 3
+ Kinematics SPM
  + Main shell splitting +/- 20 km/s
  + Polar knots are faster moving: 30-40 km/s projected
    + Two different axes
+ Guerrero:2008a have a more in-depth study
  + Identify bow shock structures
  + Compare with IC 4593 and NGC 7009 (also NGC 6543 and 6572)
****** J900
+ 194.2+02.5
+ Otsuka:2020a
+ This is He-burner so don't use
+ Also dusty and ionization stratified
+ Excitation class: 10
****** M3-6	
+ 253.9+05.7
+ Sp. Type: O(H)3I(f*)
+ log T, log g, log L = 4.763, 4.50, 4.000
+ Excitation class: 4
+ Ali:2016a have IFU spectra
+ Long and thin with low ionization caps
+ No kinematics since not in Tylenda:1994b
****** NGC 3211		
+ 286.3-04.8
+ Excitation class: 10
+ Sp. Type: EL
+ log T, log g, log L = 5.160, 5.60, 3.300
+ So a bit too hot
+ Tiny and bright, but has the classic optically thin structure
+ Vexp = 29 km/s Tylenda:1994b
****** NGC 6309	
+ 009.6+14.8
+ Excitation class: 10
+ Sp. Type: O(He)?
+ log T, log g, log L = 4.822, 4.70, 3.799
+ https://en.wikipedia.org/wiki/NGC_6309
+ The Box Nebula - has knots and a sort of point-symmetric structure
****** NGC 6629	
+ 009.4-05.0
+ Excitation class: 5
+ Very neat and tidy elliptical
+ Sp. Type: O(H)
+ log T, log g, log L = 4.672, 3.90, 3.820
****** NGC 6691
+ 054.1-12.1
+ Excitation class: 4
+ Another symmetrical one, although the rim is elliptical and there is some interesting structure in the shell
+ Sp. Type: O(H)3 Ib(f*)
+ log T, log g, log L = 4.699, 4.00, 4.020
****** NGC 6826	
:PROPERTIES:
:ID:       2F1B5C32-C514-4AD5-B3CC-84309A8A6D1D
:END:
+ 083.5+12.7
+ Excitation class: 11
+ But 100 4686/4861 < 4 according to Tylenda:1994b, so can't be
+ Has the really bright ansae
+ Sp. Type: O(H)3f + ?
+ log T, log g, log L = 4.700±0.043, 5.00, 4.093
  + A bit hot
+ Vexp = 16 km/s Tylenda:1994b
+ IR spectrum shows 30 micron feature Delgado-Inglada:2014a
****** NGC 7662	
:PROPERTIES:
:ID:       63894761-9BC5-47EC-8F21-E0D2886CC8F5
:END:
+ 106.5-17.6
+ SPM gives Vexp = 20 km/s from [N II]
+ Diameter is 12 arcsec for inner rim, but 30 arcsec for outer shell
  + Quireza:2007a give 26 arcsec, so that must be the outer shell
+ Excitation class: 10
+ Sp. Type: O(H)
+ log T, log g, log L = 5.102±0.034, 5.70, 3.780
+ Blue Snowball nebula - looks a bit like the Eskimo
***** Nebulae that match the Type III characteristics
+ Characteristics
  + Low N/O
  + High z
  + High dV
+ [X] Need to check out CSPN of all these to see if similar T_eff
  + Look in catalog of Weidmann:2020a
****** NGC 6210
+ 043.1+37.7
+ 100 4686/4861 = 2.5
+ Added here to be homogeneous
+ Data from Frew:2016a
  + D = 1.74 ± 0.33 if thin
    + 2.05 ± 0.58 mean relation
  + a x b = 14 x 14 arcsec
  + E(B-V) = 0.05 ± 0.07
  + log10 S(Ha) = -1.12 ± 0.08
    + Checking brightness against our measurements
    + S' column in [[id:0CA50980-C2C9-4718-ABE6-44177D753BAC][Table of brightnesses]] gives the brightness (multiply by 0.03496 to but in cgs.sr^-1)
    + Inner shell has roughly S' = 0.8 => log10 SHa = -1.56
      + Diameters: a x b = 14 x 12 => A = \pi a b = 5.3e+02 arcsec^2
      + Flux = 5.3e+02 0.8 0.03496 / (206265**2) = 3.48e-10 erg/s/cm^2, close enough to observed value of 3.176e-10 
    + Intermediate shell has roughly S' = 0.095 => log10 SHa = -2.48
      + Diameters: a x b = 21 x 15  => A = \pi a b = 989 arcsec^2
      + Flux = 1.11e+03 0.095 0.03496 / (206265**2) = 7.72e-11
    + Turn it around, convert flux to brightness, assuming 14 x 14 arcsec
      + S = 3.176e-10 (206265**2) / pi 14 14 = 0.02194 cgs/sr => log10(SHa) = -1.66
+ Sp. Type: O(H)3 / EL
+ log T, log g, log L = 4.946, 4.80±0.2, 3.870
  + T is too high since they have taken T* instead of Teff
+ Expansion velocity 34.2 km/s according to Rechy-Garcia:2020a
  + 24 km/s according to Tylenda:1994b
+ Excitation class: 4
+ Diameter is given as 17 arcsec, although 20 arcsec would be better for Intermediate shell => 0.15 pc
+ C/O = 0.25 Delgado-Inglada:2014a
+ IR Dust spectrum shows crystalline silicates Delgado-Inglada:2014a, Cohen:2005a
****** TODO IC 3568
+ 123.6+34.5
+ CSPN
  + Sp. Type: O(H)3
  + Log T, log g, log L = 4.699, 4.05, 3.960
    + Ref MK1992
      + Mendez:1992a
    + m_V = 13.72
+ Frew data:
  + a x b = 17.7 x 17.8 arcsec
  + E(B - V) = 0.12 ± 0.04
  + Log S(Ha) = −1.94 ± 0.06
  + log r = −0.93 => 0.12 pc
  + D = 2.27 +/- 0.42
+ Excitation class: 3
+ Kinematics:
  + Weinberger:1989a - V(exp) = 16
  + Timescale = 7000 years
+ Miller:2019a
  + log T = 4.84
  + log L = 3.68
+ Timescales
  + Heating rate is 10 K/yr for 1.1 to 1.2 Msun initial mass
    + Fig 4 of Miller-Bertolami:2019a
    + This is from Teff = 10,000 K up to max Teff
  + 3 K/yr for 1.0 Msun
  + 50 K/yr for 1.5 Msun
  + So, if Teff = 69,600 K, then t  60,000 / (dT/dt)
    + 20,000 yrs for 1.0 Msun
    + 6000 years for 1.2 Msun
    + 1000 years for 1.5 Msun
+ Initial-final mass relation
  + Miller-Bertolami:2019a Fig 2
  + Good Fit is Mf = 0.5 + 0.1 (Mi - 1.0)
****** J 320
+ 190.3-17.7
+ Parallax = 0.3383 +/- 0.0981 => D = 2.956 +/- 0.8572
  + Smaller than what I had before by 30%
+ Frew:2016a data
  + D = 4.83 ± 0.92 - a bit larger than before
    + 5.78 ± 1.66 if not so optically thinn
  + a x b = 9.4 x 6.3 arcsec
  + E(B-V) = 0.13 ± 0.08
  + log S(Ha) = -1.81 ± 0.10
+ Frew:2008a Table 3.1 Ha Flux: −10.88 ± 0.04 => 10**(-10.88 + 0.13) = 1.778e-11
+ Sp. Type: O(H)3 V((f))
+ log T, log g, log L = 4.929, 4.70, 3.700±0.074
+ Expansion velocity 16 km/s according to Rechy-Garcia:2020a
  + 17.7 according to Tylenda:1994b
  + 15: according to Weinberger:1989a 
+ Excitation class: 4
+ 100 4686/4861 = 3
+ Distance is 4.1 kpc
****** IC 4642
+ 334.3-09.3
+ Parallax: 0.2159 +/- 0.0694 => D = 4.632 +/- 1.489
  + This is nearly double what I had before
+ Frew:2016a data
  + D = 2.63 ± 0.52 very similar to in Quireza
  + a x b = 24.1 x 21.7 arcsec
    + This is indeed the shell diameters, unlike with the Turtle
  + E(B-V) = 0.17 ± 0.11
  + log10 S(Ha) = -2.59 ± 0.12
+ Frew:2008a Table 3.1 Ha Flux: −10.74 ± 0.04 => 10**(-10.74 + 0.17) = 2.692e-11
+ This does not have the asymmetric lobes, but otherwise is a good match as a Type III PNe
+ CSPN is log T, log g = 5.064, 5.8
  + So, a bit hotter than turtle
+ Log L = 3.663
  + Similar
+ Sp. Type: "absorption lines" whatever that means
+ 100 4686/4861 = 110
+ Excitation class: 12
+ Expansion velocity = 21 km/s Tylenda:1994b
  + 34 km/s [O III] or 14 km/s Ha Weinberger:1989a so take your pick!
+ Images:
  + Weidmann:2016a
    + [[file:~/Dropbox/Teresa-Turtle/data/cousin-nebulae/Weidmann-2016/99.fits]]
    + This is supposedly [N II] but it will mainly be Ha
    + Plate scale is 0.74 arcsec/pixel
    + Major-minor diameters is 34 x 28 pix = 25 x 21 arcsec for shell
    + Or 20 x 12 pix for rim = 15 x 9 arcsec
    + Major axis of rim is perpendicular to major axis of shell
+ Catalog gave diameter as 15 arcsec, but we should revise that to 23 arcsec for the shell
  + => 2 R = 0.3011 pc


****** TODO NGC 1535
+ *This is the symmetric twin*
  + Identical to 6210 except for lacking the multipolar outflows and asymmetries
+ 206.4-40.5
+ [ ] /HST observations/ 
+ Parallax: 0.8232 +/- 0.0630 => D = 1.2 +/- 0.093
  + Much smaller than before
+ Frew:2016a data
  + D = 1.47 +/- 0.27 if optically thin
    + 1.78 ± 0.50 on the mean relation
  + a x b = 33.3 x 32.1 arcsec
  + E(B-V) = 0.02 ± 0.02
  + log S(Ha) = −2.23 ± 0.06
+ Frew:2008a Table 3.1 Ha Flux: −9.95 ± 0.04 => 1.12e-10 10**0.02 = 1.173e-10
+ Vexp = 19.5 Tylenda:1994b
  + 19 to 20 km/s very consistent in Weinberger:1989a
  + This must be the rim - see below
+ Shell kinematics
  + Corradi:2007a
  + Vshell = 32 km/s
  + Vrim = 22 km/s
  + SPM spectra
    + http://kincatpn.astrosen.unam.mx/image.php?id=232&display=Full&type=a
+ 100 4686/4861 = 13 Tylenda:1994b
+ log T, log g = 4.929, 4.80±0.3
  + But T may be less than this
  + Herald:2011a have it almost exactly the same as 6210
  + log g = 4.8 +/- 0.3 and T = 74,400 K
+ Log L = 3.440
+ Sp. Type: O(H)5 + ?
+ Nebular morphology
  + Shell and rim - pretty similar to Turtle
+ C/O = 0.61 +/- 0.10 Kwitter:1996
  + So O-rich but higher C/O than 6210
+ Check abundances:
  + C/H = 8.57 (Maciel:1994a: AC83, P84)
  + N/H = 7.54 (Maciel:1994a: K80)
  + O/H = 8.55 (Quireza)
  + This means that C/O about 1
+ Wind Mdot and V are almost identical to Turtle
+ Has a smooth halo
+ Excitation Class: 8

******* TODO More details about NGC 1535

******** Geometry
+ From PanSTARRS/DR1 from [[http://aladin.unistra.fr/AladinLite/?target=04%2014%2015.691-12%2044%2022.65&fov=0.05&survey=P%2FPanSTARRS%2FDR1%2Fcolor-z-zg-g][Aladin]]
+ Rim: diameter 16 arcsec
+ Shell: diameters 46 x 40 arcsec
+ Halo: smoothly falls off, diameter at least 80 arcsec


******** Imaging
+ Adam Block/Mount Lemmon SkyCenter/University of Arizona
  + https://skycenter.arizona.edu/astrophotography/ngc1535

******** Kinematics
+ Corradi:2007a have the rim (22 km/s) expanding slower than the shell (32 km/s)
+ Clayton:1998a find a "bipolar" structure to the tim velocity splitting
  + But the evidence is not very convincing
+ Sabbadin:1984b have the rim (radius = 10 arcsec) expanding at about 20 km/s and the shell expanding slower!
+ Bannerjee:1991a doesn't really add anything interesting
  + but does suggest that n ~ r^-3
+ SPM [N II] data gives
  + Rim d\lambda = 0.434 \AA => V = 3e5 0.434/6583 = 20 km/s
  + Shell d\lambda = 0.666 \AA => V =  3e5 0.666/6583 = 30.3 km/s
+ So, this is broadly consistent with Corradi:2007a
  + Hubble-type pattern

******** Spectrophotometry
+ Adam:1985a
  + Strange ideas about wind contributing to He II ionization, but his is because they have a low Teff for CSPN
  + 4686/4861 = 0.15
  + F(Hb) = 3.98e-11 erg/cm^2/s but without correcting for extinction
+ Barker:1989a
  + 4686/4861 = 0.1 \to 0.3 depending on position
  + Ne = 6000 pcc
  + Te = 11,000 K
  + N/H = 6e-5
  + C/H = 2.2e-4
  + O/H = 3.3e-4
  + [N II]/Ha ~= 0.01
+ Kwitter:1996a
  + O/H = 3.12e-4
  + C/O = 0.61
  + N/O = 0.06


******** Molecular hydrogen and IR
+ Unexpected - maybe it is interstellar
+ Bowers:1995a - detection in UV
+ Luhman:1997a - no emission of H2 in IR - so probably interstellar
+ Hora:1999a - IR spectrum dominated by H recomb lines
******** 

****** TODO NGC 5307
+ *This is multipolar*
  + Lots of asymmetries too
+ 312.3+10.5
+ Sp. Type: O(H)3.5 V
+ log T, log g, log L = 4.934±0.010, 5.29, 3.757±0.046
  + So not too dissimilar - a bit hotter and higher g
+ Frew:2016a data
  + D = 2.63 ± 0.49 if thin
    + 3.16 ± 0.90 on mean relation
    + A tad higher than Quireza
  + a x b = 18.8 x 12.9
  + E(B-V) = 0.28 ± 0.05
  + log10 S(Ha) = −1.97 ± 0.08
+ Frew:2008a Table 3.1 Ha Flux: −10.62 ± 0.04 => 2.399e-11 10**0.28 = 4.571e-11
+ Gaia distance is 8.17 but dP/P is about unity, so untrustworthy
+ Has slit spectra from SPM catalog
  + http://kincatpn.astrosen.unam.mx/image.php?id=18&display=Full&type=b
  + Splitting of H\alpha is +/- 35 km/s
+ But Vexp = 11 km/s from Tylenda:1994b
  + Weinberger:1989a agrees for [O III], but other ions are 15
  + SPM gives 35 for Ha
+ Diameter of right part is about 8 arcsec from SPM spectra
  + Compared with 12.6 in catalog, so that must include the lobes
+ Rim is more diffuse than in Turtle, but similar relative size - elongated
+ Excitation Class: 9

****** NGC 6326
+ *Also has multipolar tendencies*
  + Extensive knot system
  + Not much sign of the inner rim in HST images, but a diffuse rim is more visible in  Miszalski:2011a images
+ 338.1-08.3
+ Gaia distance:
  + 2.8, just a bit higher than before
+ Frew:2016a distance and other data:
  + D = 3.14 ± 0.91 - even higher
  + a x b = 20.6 x 13.7 arcsec
  + E(B-V) = 0.20 ± 0.09
  + log(SHa) = −2.08 ± 0.11
+ Frew:2008a Table 3.1 Ha Flux: −10.60 ± 0.04 => 10**(-10.6 + 0.2) = 3.981e-11
+ Sp. Type: O(H)5-8 ((fc)) + ?
+ log T, log g, log L = 4.958, 5.20, 3.799
  + So almost identical to NGC 5307
+ Binary (P=0.37 d) with MS star - Miszalski:2011a
+ Electron density ~= 1000 pcc, so lower density than Turtle by factor of a few
  + Not sure how this is possible, since size and radio luminosity are similar
+ ADF(O) ~= 20, so higher than Turtle
  + Wesson:2018a
  + But this is mainly in the center, where the recomb lines are brighter
  + In the main [O III] ring, the ADF is low
+ Excitation Class: 9 
+ Kinematics
  + SPM: http://kincatpn.astrosen.unam.mx/image.php?id=19&dir=NGC6326&name=NGC%206326&png=338.1-08.3
  + Has [N II] knots at projected velocity > 50 km/s but true velocity maybe much higher because close to plane of sky


****** NGC 6439 
+ 011.0+05.8
+ No CSPN spectral classification that I can find
+ Has IR spectrum (2.5 to 5 micron) from Ohsawa:2016a
  + Emission lines only.  No dust features
+ IR spectrum from Delgado-Inglada:2014a shows PAHs(?) and crystalline silicates
+ Garcia-Rojas:2018a have some abundances:
  + But they say that it is at galactocentric distance of 2 kpc, which means that distance must be 6 kpc
  + They say it is from the bulge population
+ Smith:2017c on the other hand say it is from disk population
+ Delgado-Inglada:2015a say it is bulge too
  + Because within 10 deg of gal long = 0
  + And it has N/O and C/O approximately unity
+ So best ditch it
****** Rejected for having a He or [WC] CSPN (or some other reason)
******* M 3-9
+ 359.9+05.1
+ Very low He/H -seems to be in bulge
******* IC 5217
+ /don't use/
+ 100.6-05.4
+ Sp. Type: [WC]?
+ log T, log g, log L = 4.978, 5.50, 4.061
+ Very bipolar with narrow waist, so ditch it
+ Excitation Class: 6

******* NGC 6369
+ Little Ghost
+ 002.4+05.8
+ [WO 3] spectral type, so He-burning
+ log T, log g = 4.792±0.070, 5.10
+ log L = 3.700
+ Excitation Class: 4

******* NGC 6567
+ 011.7-00.6
+ Clumpy, but not really multipolar
+ Sp. Type: wels / [WC]
+ Nebular C/O = 2 - 3 Hyung:1993a
+ log T, log g, log L = 4.797, 4.40, 3.620
+ Otsuka:2009a have it being a He-burning post-AGB model
+ Excitation Class: 4
***** IC 4776
+ Not sure how similar this one really is
+ Sowicka:2017a
+ Miszalski:2019a
***** NGC 6578
+ Has a "fan" on one side, which may be an analog of the knot complexes

***** M 3-1
+ Mainly because next to Turtle in figures of Jackie paper
+ Seems to consist entirely of knots, but that may be just the filter
+ This is a close binary, see Jones:2019a
***** NGC 6543 and 7009
Very similar to one another. They have wandering axes superimposed on a basic bipolar morphology. 
*** Relative H\alpha brightness of different components
+ To start with, I am measuring these on the HST Ha image
  + Later, I can try the SPM spectra/images too, especially for the halo
+ Only relative brightness - the idea is that later we can calibrate it using the total flux
+ Measure a BG for each component too
+ And also estimate line-of-sight depth, so we can find densities
  + Using n \propto sqrt(EM / z)
**** Table of brightnesses
:PROPERTIES:
:ID:       0CA50980-C2C9-4718-ABE6-44177D753BAC
:END:
+ Here are Ha brightnesses and fluxes from turtle-F656N-1997.fits
#+name: big-table-of-ha-brightness
| Feature          |  S(Ha) |     BG |      S' |  ds |   R |  h |     F1 | 1 |    F2 | 2 |     F3 | 3 |      F |   frac |     n |     M_i | R_3d |    U_ion | t_rec |      N | 658/656 |   R_NII | 502/487 | E5/4 |
|------------------+--------+--------+---------+-----+-----+----+--------+---+-------+---+--------+---+--------+--------+-------+---------+------+----------+-------+--------+---------+---------+---------+------|
| IS WSW           |   0.07 |  0.004 |   0.080 | 100 | 128 | 30 |   800. | 0 |  965. | 0 |  2059. | 1 |  2059. | 0.0521 |  0.67 | 0.05237 | 0.16 |   0.0079 | 1.8e2 | 2.0e20 |  0.0809 |  0.0687 |    10.1 |  1.0 |
| SW Red complex   |   0.45 |  0.027 |   0.494 |  36 |     |    |   640. | 1 |   0e0 | 0 |    0e0 | 0 |   640. | 0.0162 |  2.78 | 0.00392 | 0.19 |   0.0014 | 4.4e1 | 3.0e20 |    0.25 |  0.3207 |     8.9 |  0.3 |
| NW knot          |   0.75 |   0.26 |   0.562 |   7 |     |    |    28. | 1 |   0e0 | 0 |    0e0 | 0 |    28. | 0.0007 |  6.72 | 0.00007 | 0.18 |   0.0006 | 1.8e1 | 1.4e20 |    0.33 |  0.4469 |     9.6 |  0.5 |
| N knot           |   0.19 |   0.01 |   0.201 |  12 |     |    |    29. | 1 |   0e0 | 0 |    0e0 | 0 |    29. | 0.0007 |  3.07 | 0.00016 | 0.19 |   0.0012 | 4.0e1 | 1.1e20 |    0.43 |  0.6116 |     8.3 |  0.8 |
| Shell A N Rim    |    1.0 |   0.12 |   1.077 |  38 |  77 |  6 |  1555. | 0 | 1563. | 1 | 10030. | 0 |  1563. | 0.0396 |  3.99 | 0.00668 | 0.07 |   0.0070 | 3.1e1 | 4.5e20 |   0.045 |  0.0177 |    10.4 |  0.6 |
| Shell A N inside |   0.83 |   0.30 |   0.649 |  20 |  77 |    |   260. | 0 |   0e0 | 0 |  6044. | 1 |  6044. | 0.1531 |  4.27 | 0.02412 | 0.07 |   0.0065 | 2.9e1 | 2.6e20 |   0.045 |  0.0177 |     9.2 |  0.3 |
| Peak             |    8.2 |    4.2 |   4.846 |  15 |     |    |  1090. | 1 |   0e0 | 0 |    0e0 | 0 |  1090. | 0.0276 | 13.47 | 0.00138 | 0.24 |   0.0002 | 9.1e0 | 6.1e20 |    0.09 |  0.0818 |    10.0 |  0.2 |
| N complexes      |    4.2 |   0.83 |   4.055 |  50 |     |    | 10138. | 1 |   0e0 | 0 |    0e0 | 0 | 10138. | 0.2567 |  6.75 | 0.02559 | 0.24 |   0.0004 | 1.8e1 | 1.0e21 |    0.12 |  0.1253 |     9.9 |  0.4 |
| S complexes      |    2.3 |    1.5 |   0.980 |  51 |     |    |  2549. | 1 |   0e0 | 0 |    0e0 | 0 |  2549. | 0.0646 |  3.29 | 0.01320 | 0.07 |   0.0085 | 3.7e1 | 5.0e20 |    0.04 |  0.0106 |     9.2 |  0.2 |
| SE knot          |    2.2 |    1.2 |   1.195 |  10 |     |    |   120. | 1 |   0e0 | 0 |    0e0 | 0 |   120. | 0.0030 |  8.19 | 0.00025 | 0.07 |   0.0034 | 1.5e1 | 2.5e20 |    0.15 |  0.1693 |     9.2 |  0.3 |
| Shell A S Rim    |    1.5 |   0.20 |   1.589 |  26 |  70 |  3 |  1074. | 0 | 1048. | 1 | 12230. | 0 |  1048. | 0.0265 |  5.86 | 0.00305 | 0.08 |   0.0036 | 2.1e1 | 4.6e20 |    0.05 |  0.0247 |     9.9 |  0.4 |
| Shell A S inside |    1.1 |   0.20 |   1.103 |  20 |  70 |    |   441. | 0 |   0e0 | 0 |  8490. | 1 |  8490. | 0.2150 |  5.57 | 0.02597 | 0.08 |   0.0038 | 2.2e1 | 3.3e20 |    0.04 |  0.0106 |     9.1 |  0.3 |
| IS SE            |   0.15 |   0.06 |   0.110 |  40 |     |    |   176. | 1 |   0e0 | 0 |    0e0 | 0 |   176. | 0.0045 |  1.24 | 0.00242 | 0.12 |   0.0076 | 9.8e1 | 1.5e20 | 0.03636 |  0.0055 |     9.2 |  0.3 |
| IS ENE           |   0.16 |   0.01 |   0.183 | 117 |  99 | 35 |  2505. | 0 | 1992. | 0 |  2817. | 1 |  2817. | 0.0713 |  0.94 | 0.05107 | 0.10 |   0.0145 | 1.3e2 | 3.3e20 | 0.07027 |  0.0535 |    10.7 |  1.0 |
| Lobe W           |  0.015 |  0.001 |   0.017 |  50 |     |    |    43. | 1 |   0e0 | 0 |    0e0 | 0 |    43. | 0.0011 |  0.44 | 0.00167 | 0.19 |   0.0086 | 2.8e2 | 6.6e19 | 0.06337 |  0.0437 |     9.8 |  0.7 |
| Lobe E           |  0.009 |  0.001 |   0.010 |  60 |     |    |    36. | 1 |   0e0 | 0 |    0e0 | 0 |    36. | 0.0009 |  0.31 | 0.00198 | 0.14 |   0.0224 | 3.9e2 | 5.6e19 |   0.045 |  0.0177 |     9.7 |  0.9 |
| Lobe S           |  0.008 | 0.0006 |   0.009 | 100 |     |    |    90. | 1 |   0e0 | 0 |    0e0 | 0 |    90. | 0.0023 |  0.22 | 0.00697 | 0.17 |   0.0214 | 5.5e2 | 6.6e19 | 0.03333 |  0.0012 |     9.2 |  1.1 |
| Lobe N           |  0.011 | 0.0005 |   0.013 | 100 |     |    |   130. | 1 |   0e0 | 0 |    0e0 | 0 |   130. | 0.0033 |  0.27 | 0.00820 | 0.17 |   0.0175 | 4.5e2 | 8.1e19 | 0.05588 |  0.0330 |     7.0 |  0.8 |
| Inner Halo S     |  0.004 |  0.001 |   0.004 | 170 | 100 |    |   116. | 0 |   0e0 | 0 |    63. | 1 |    63. | 0.0016 |  0.11 | 0.00976 | 0.19 |   0.0343 | 1.1e3 | 5.6e19 |  0.1792 |  0.2128 |    12.6 |  0.8 |
| Inner Halo N     |  0.010 |  0.001 |   0.011 | 170 | 100 |    |   318. | 0 |   0e0 | 0 |   173. | 1 |   173. | 0.0044 |  0.19 | 0.01552 | 0.19 |   0.0199 | 6.4e2 | 9.7e19 |  0.1143 |  0.1170 |    11.7 |    3 |
| Outer Halo S     |  0.001 |    0.0 |   0.001 | 300 | 160 |    |    90. | 0 |   0e0 | 0 |    40. | 1 |    40. | 0.0010 |  0.04 | 0.01704 | 0.25 |   0.0545 | 3.1e3 | 3.6e19 | 0.03245 |  0.0000 |     0.0 |  0.0 |
| Outer Halo N     | 0.0002 |    0.0 | 2.45e-4 | 400 | 210 |    |    39. | 0 |   0e0 | 0 |    17. | 1 |    17. | 0.0004 |  0.02 | 0.01448 | 0.30 |   0.0757 | 6.1e3 | 2.4e19 | 0.03245 |  0.0000 |     0.0 |  0.0 |
|------------------+--------+--------+---------+-----+-----+----+--------+---+-------+---+--------+---+--------+--------+-------+---------+------+----------+-------+--------+---------+---------+---------+------|
|                  |      1 |      0 |   1.236 |   1 |     |    |     1. |   |   0e0 |   |    0e0 |   | 37383. | 0.9467 | 26.35 | 0.28587 |    1 | 5.174e-6 | 4.6e0 | 7.9e19 |         | -0.0452 |         |      |
#+TBLFM: $4=1.234 ($2 - $3) / (1.00561 + 0.1586 $23); f3::$8=$4 $5**2;f0::$10=$4 $pi $6 $7;f0::$12=$4 $pi 0.5 $6**2;f0::$14=$8 $9 + $10 $11 + $12 $13::$15=$14/1.234 32000;f4::$16=23.7 sqrt($4/$5);f2::$17=$14/$16 58682;f5::$19=4.89e47/ 4 $pi 1000 $16 $c ($18 $pc)**2 ;f4::$20=122/$16;s2::$21=3e15 $5 $16 1000;s2::$23=(1.393 $22 - 0.0452) / (1 - 0.2197 $22) ;%.4f::@24$14=vsum(@I..@II)::@24$17=vsum(@I..@II)
+ ds is transverse width in pixels
+ R is the radius of a shell
+ h is the thickness of a shell
+ S' is the BG-subtracted surface brightness
  + Now corrected for continuum and [N II] contribution to F656N
  + And corrected for extinction
+ Fluxes are calculated in three different ways (only one of the 3 is used for each feature)
  1. F1 uses Area = ds^2
  2. F2 uses Area = \pi R h (semi-circular annulus)
  3. F3 uses Area = 0.5 \pi R^2 (semi-circular disk)
+ F is the selected flux 
  + Columns 1, 2, 3 are flags, which select which of F1, F2, or F3 to use
+ frac is the fraction of the total nebular flux
  + The denominator of 32,000 comes from the nested box photometry in the table below
  + So, we can check the total flux using the absolute calibration
    + To do this, we don't need the pixel \to sr conversion since we are summing over the pixels
    + So the conversion factor is 8.217e-15 erg/cm2/s per count/s
    + And assuming an average R_NII of 0.1, this is divided by 1.02147 => 8.044e-15
    + Total H\alpha flux is 2.574e-10 erg/s/cm^2
      + We need to correct this for extinction
      + Pottasch:2009a give C(Hb) = 0.13
      + For H\alpha we have C(Ha) = 0.70 C(Hb) = 0.0913, assuming Cardelli:1989a reddening law
      + So intrinsic H\alpha flux is 1.234 2.574e-10 = 3.176e-10 erg/s/cm^2
      + Assuming Ha/Hb = 2.85, H\beta flux is 1.114e-10 erg/s/cm^2
      + /Hurray/, this is identical to Pottasch:2009a value of 1.1e-10 erg/cm2/s, which really comes from Liu:2004a
+ So H\alpha flux fractions are something like this:
  - Intermediate Shell: 0.0722 + 0.0045 + 0.0531 = 13%
  - Inner shells: 0.0399 + 0.1543 + 0.0268 + 0.2165 = 44%
  - Complexes: 0.0281 + 0.2633 + 0.1138 + 0.0171 = 42%
  - Lobes: 0.0011 + 0.0009 + 0.0023 + 0.0033 + 0.0002 + 0.0001 = 0.8%
+ Densities of the components
  + *New* [2020-04-28 Tue] Now absolute densities
    + Given in units of 1000 pcc
    + They are 4.74 times higher than the old versions, which are what are described next
  + These are all relative and are proportional to sqrt(S' / dz), assuming dz = ds
  + I made it so the brightest features are around n = 1
    + This should be about 4000 pcc from Pottasch:2009a
  + Inner shells have n = 0.76, 0.81, 1.12, 1.06 => 0.938 +/- 0.089
    + Very slightly higher on S side
  + Intermediate shell has n = 0.18, 0.13 => 0.16 +/- 0.03
  + Knot complexes have n = 1.30, 0.83, 0.54 => 0.89 +/- 0.22
    + A bit higher on N side
  + Lobes have 0.08, 0.06, 0.04, 0.05 => 0.058 +/- 0.009
  + Highest density features
    + Brightness peak has n = 2.58 - at least 2x its surroundings
    + NW knot has n = 2 - at least 10x its surroundings
    + N knot has n = 0.95 - about 20x its surroundings
    + SE knot has n = 2.24 - nearly 3x its surroundings 
+ Ionized mass
  + Proportional to F/n
    + Following calculation is relative to total shells+knots+lobes (that is, not the halos)
  + Inner shells: 0.02863 + 0.10384 + 0.01305 + 0.11136 = 26%
  + Intermediate shells: 0.21860 + 0.01022 + 0.22271 = 45%
  + Knot complexes: 0.07475 + 0.11044 + 0.00594 + 0.01729 = 21%
  + Lobes: 0.03579 + 0.03153 + 0.00824 +  0.00746 = 8%
+ Ionization parameter
  + Proportional to 1/(R^2 n) if optically thin
    + F / n c = Q / 4 \pi R^2 n c with Q = 4.89e47 and R from R_3d in pc
    + So this is now in proper (dimensionless) units
  + Where R is the 3D radius
  + Inner shells: 147., 140., 252., 269. => 202 +/- 34
    + Higher on N side due to lower density
  + Intermediate shells: 556, 289, 300. => 381 +/- 87
    + So significantly higher than the inner shells
  + Knot complexes: 91, 246., 13., 7., 51., 15., 29. => 65 +/- 32
    + Much lower values, except for the diffuse SE complexes, which are more like the inner shell
    + These ionization parameters are based /entirely/ on analysis of the H\alpha emission, but they will allow us to predict the [N II]/Ha ratio (or [O II]/[O III])
  + Lobes: 692, 865, 850, 346 => 688 +/- 121
    + This is the highest of all, which explains why the lobes are mainly visible in [O III]
  + So, the progression: rim \to shell \to lobes with increasing ionization parameter means that the density is falling faster than R^-2
+ t_rec is Recombination time
  + t = 1.22e5 yr / (n / cm^-3)
  + Our n is /now/ in units of 1000 pcc, so t = 122 / n
  + Even the lobes have a short t_rec < 800 yrs
  + For inner shell it is decades
  + Halo might be longer
+ Column density
  + n dz with dz in cm
  + Currently it is in 0.1 arcsec pixels, so multiply by 0.1 2000 au = 2.99e+15 cm
  + Highest is 7e20 cm^-2 for the N knot complexes, which would give \tau = 0.4 with standard \sigma = 5e-22 cm^2/H
  + It may be that I am overestimating dz by using ds
+ /Earlier measurements/ of fluxes in nested boxes
  |                                     |       | frac |
  |-------------------------------------+-------+------|
  | Big box that includes lobes         | 32768 | 0.02 |
  | Intermediate shell and inner shells | 32143 | 0.14 |
  | Inner shells only                   | 27692 | 0.58 |
  | N bright ridge only                 |  8529 | 0.26 |
  | Zero                                |     0 |      |
  #+TBLFM: $3=($-1 - @+1$-1)/32768 ; f2
  + The frac column subtracts off the following one, so it gives the fraction of the total that corresponds to each component
    + Lobes are 2% of total flux
    + Inner shells are 60%
    + IS is 14% but that is an over-estimate since it includes emission associated with the knot complexes
**** Table of HST line ratios
:PROPERTIES:
:ID:       6BC85271-11B3-443D-A0D0-9E36DBCDFECC
:END:
#+name: big-table-of-line-ratios
| Feature          |  U_ion | 658/656 |  R_NII | 502/487 | E502/487 | 4363/5007 | E(4363/5007) |  6583/6563 | E6583/6563 |
|------------------+--------+---------+--------+---------+----------+-----------+--------------+------------+------------|
| IS WSW           | 0.0079 |  0.0809 | 0.0687 |    10.1 |      1.0 |   0.00966 |      0.00543 |  0.0604483 |  0.0133716 |
| SW Red complex   | 0.0014 |    0.25 | 0.3207 |     8.9 |      0.3 |   0.00585 |      0.00043 |   0.249824 |  0.0992992 |
| NW knot          | 0.0006 |    0.33 | 0.4469 |     9.6 |      0.5 |   0.00653 |      0.00089 |   0.191617 |  0.0802317 |
| N knot           | 0.0012 |    0.43 | 0.6116 |     8.3 |      0.8 |   0.00708 |      0.00108 |   0.461126 |   0.158798 |
| Shell A N Rim    | 0.0070 |   0.045 | 0.0177 |    10.4 |      0.6 |   0.00569 |      0.00053 |  0.0149331 | 0.00448579 |
| Shell A N inside | 0.0065 |   0.045 | 0.0177 |     9.2 |      0.3 |   0.00610 |      0.00039 |  0.0213608 | 0.00700099 |
| Peak             | 0.0002 |    0.09 | 0.0818 |    10.0 |      0.2 |   0.00619 |      0.00036 |   0.117669 |  0.0215327 |
| N complexes      | 0.0004 |    0.12 | 0.1253 |     9.9 |      0.4 |   0.00525 |      0.00024 |    0.14835 |  0.0468417 |
| S complexes      | 0.0085 |    0.04 | 0.0106 |     9.2 |      0.2 |   0.00596 |      0.00028 |      0.037 |      0.011 |
| SE knot          | 0.0034 |    0.15 | 0.1693 |     9.2 |      0.3 |   0.00609 |      0.00029 |    0.13485 |  0.0661453 |
| Shell A S Rim    | 0.0036 |    0.05 | 0.0247 |     9.9 |      0.4 |   0.00490 |      0.00041 |  0.0154783 | 0.00820465 |
| Shell A S inside | 0.0038 |    0.04 | 0.0106 |     9.1 |      0.3 |   0.00580 |      0.00033 | 0.00971428 | 0.00597144 |
| IS SE            | 0.0076 | 0.03636 | 0.0055 |     9.2 |      0.3 |   0.00663 |      0.00060 |  0.0171164 |  0.0071702 |
| IS ENE           | 0.0145 | 0.07027 | 0.0535 |    10.7 |      1.0 |   0.01292 |      0.00293 |  0.0282632 | 0.00635385 |
| Lobe W           | 0.0086 | 0.06337 | 0.0437 |     9.8 |      0.7 |   0.02387 |      0.00770 |      0.007 |      0.007 |
| Lobe E           | 0.0224 |   0.045 | 0.0177 |     9.7 |      0.9 |   0.01009 |      0.00697 |      0.003 |      0.003 |
| Lobe S           | 0.0214 | 0.03333 | 0.0012 |     9.2 |      1.1 |   0.01155 |      0.00472 |      0.013 |      0.017 |
| Lobe N           | 0.0175 | 0.05588 | 0.0330 |     7.0 |      0.8 |   0.01275 |      0.00379 |      0.010 |      0.010 |
| Inner Halo S     | 0.0343 |  0.1792 | 0.2128 |    12.6 |      0.8 |   0.01221 |      0.00283 |      0.029 |      0.029 |
| Inner Halo N     | 0.0199 |  0.1143 | 0.1170 |    11.7 |        3 |   0.02034 |      0.00836 |      0.025 |      0.025 |
|------------------+--------+---------+--------+---------+----------+-----------+--------------+------------+------------|
#+TBLFM: $4=(1.393 $5 - 0.0452) / (1 - 0.2197 $5) ;%.4f::
+ Supplement ratios with Mezcal measurements
  + These should be better for the halo and lobes
  + Note halo and lobes values are upper limits
  + I am using them to substitute selected HST values in the above table, where I suspect the HST measurements are unreliable (too sensitive to exactly where the zero point is)
  + 
| Slit and feature |     Ha |  W | [N II] |  W | E(NII) | [N II]/Ha       |
|------------------+--------+----+--------+----+--------+-----------------|
| Slit I* N Knot   | 0.0042 | 40 | 0.0016 | 20 |      0 | 0.190 +/- 0.053 |
| Slit I* SW Red   |  0.052 | 55 |  0.021 | 30 |      0 | 0.220 +/- 0.042 |
| Slit I* N(W) Red |  0.073 | 40 |  0.017 | 20 |      0 | 0.116 +/- 0.033 |
| Slit I* S Halo   | 0.0002 | 35 |   1e-5 | 20 |   1e-5 | 0.029 +/- 0.030 |
| Slit D SE Blue   |  0.213 | 30 | 0.0119 | 20 |      0 | 0.037 +/- 0.011 |
| Slit D NE Blue   |  0.189 | 30 |   0.03 | 15 |      0 | 0.079 +/- 0.030 |
| Slit V E Lobe    | 0.0016 | 42 |   1e-5 | 20 |   1e-5 | 0.003 +/- 0.003 |
| Slit V W Lobe    | 0.0017 | 35 |   2e-5 | 20 |   2e-5 | 0.007 +/- 0.007 |
| Slit E* S lobe   | 0.0008 | 60 |   2e-5 | 30 |   2e-5 | 0.013 +/- 0.013 |
| Slit E* N halo   | 0.0006 | 40 |   2e-5 | 30 |   2e-5 | 0.025 +/- 0.026 |
| Slit F N lobe    |  0.001 | 60 |   2e-5 | 30 |   2e-5 | 0.010 +/- 0.010 |
#+TBLFM: $7=($4 +/- $6) ($5 +/- 5)/$2 ($3 +/- 5);f3

**** Densities from the [S II] longslit spectrum
+ There is only on exposure: Slit S
+ It is at a very similar position/PA to Slit T (Ha, [N II]) and Slit R ([O III])
+ We can identify the following components from the [N II] and [O III] spectra, from N to S:
  + The N knot: V = +24 km/s
  + Lobe flows VI-/IX+: -12, +11 km/s
  + Inner peanut shell: V = -16 km/s
  + N Red complex: V = +23 km/s
  + NE Blue complex: V = -43 km/s
  + SW Red complex: V = +34 km/s
  + SE Blue complex: V = -28 km/s
+ Heliocentric correction is -6.6 km/s, which is added to observed to get VHEL
  + Hence zero-point of velocity scale is -33.4 km/s
  + Rest wavelengths are 6716.44 and 6730.82 
***** Table of 6716/6731 ratio measurements

#+name: 6716-6731-measurements-raw
| Component       |   V |  wav_16 |  wav_31 |   I_16 | sig_16 |   I_31 | sig_31 | BG_16 | BG_31 | Ratio         |
|-----------------+-----+---------+---------+--------+--------+--------+--------+-------+-------+---------------|
| N knot          | +24 | 6716.30 | 6730.68 |  82.49 |  11.77 |  92.24 |  14.82 | 48.72 | 49.85 | 0.89 +/- 0.03 |
| N Lobe VI-/IX+  | +20 | 6716.21 | 6730.59 |  64.66 |  11.60 |  71.75 |  20.64 | 50.29 | 52.41 | 0.89 +/- 0.05 |
| Inner shell     | -16 | 6715.40 | 6729.78 | 155.65 |  51.53 | 211.81 |  71.47 |  63.9 |  68.0 | 0.72 +/- 0.06 |
| N Red complex   | +23 | 6716.27 | 6730.65 |   1399 |    721 |   2084 |   1058 |    63 |    66 | 0.67 +/- 0.08 |
| NE Blue complex | -43 | 6714.80 | 6729.17 |    135 |     10 |    161 |     14 |    78 |    77 | 0.82 +/- 0.02 |
| SW Red complex  | +34 | 6716.52 | 6730.90 |    824 |    583 |   1043 |    823 |    76 |    74 | 0.79 +/- 0.13 |
| SE Blue complex | -28 | 6715.13 | 6729.51 |    105 |     19 |    118 |     24 |    63 |    62 | 0.88 +/- 0.04 |
| Total           |   0 | 6715.76 | 6730.14 |  221.1 |      0 |  286.2 |      0 |  66.7 |  66.5 | 0.76          |
#+TBLFM: $3=6716.44 (1 + ($2 - 40 + 6.6 + 3) $km/$c) ;f2::$4=6730.82 (1 + ($2 - 40 + 6.6 + 3) $km/$c) ;f2::$11=($5 - $9 +/- $6/6.32) / ($7 - $10 +/- $8/6.32);f2
+ 42 pixels per sample, so std error is sigma/6.32
+ Liu:2004a have 6731/6716 = 1.66 => 6716/6731 = 0.60 
  + Implying n = 4000 pcc
  + So, we could multiply all ours by 0.6/0.76 = 0.7895
  + This means our range in 31/16 ratio would be [0.67 .. 0.89] 0.7895 = [0.529 .. 0.7027] > log n = 3.9 to 3.35 => n = 2000 to 8000 pcc
***** Densities from ratios via pyneb

This table corrects the raw 6716/6731 ratio to force the average ratio to be 0.60, for consistency with Liu:2004a 
#+name: 6716-6731-measurements-corrected
| Component       |   V | Ratio | E(R) |   R' | E(R') |
|-----------------+-----+-------+------+------+-------|
| N knot          | +24 |  0.89 | 0.03 | 0.70 |  0.02 |
| N Lobe VI-/IX+  | +20 |  0.89 | 0.05 | 0.70 |  0.04 |
| Inner shell     | -16 |  0.72 | 0.06 | 0.57 |  0.05 |
| N Red complex   | +23 |  0.67 | 0.08 | 0.53 |  0.06 |
| NE Blue complex | -43 |  0.82 | 0.02 | 0.65 |  0.02 |
| SW Red complex  | +34 |  0.79 | 0.13 | 0.62 |  0.10 |
| SE Blue complex | -28 |  0.88 | 0.04 | 0.69 |  0.03 |
| Total           |   0 |  0.76 |  0.0 | 0.60 |  0.00 |
#+TBLFM: $5=0.6 $3 / @9$3;f2::$6=0.6 $4 / @9$3;f2


#+begin_src python :var TAB=6716-6731-measurements-corrected :colnames no :return outtab :results table :tangle ../scripts/sii-densities.py
  import numpy as np
  import pyneb as pn
  from astropy.table import Table

  data = Table(rows=TAB[1:], names=TAB[0])

  T = 1.07e4

  S2 = pn.Atom(atom='S2')

  dens = S2.getTemDen(
      data["R'"],
      tem=T,
      to_eval="L(6716) / L(6731)",
  )

  dens_hi = S2.getTemDen(
      data["R'"] - data["E(R')"],
      tem=T,
      to_eval="L(6716) / L(6731)",
  )
  dens_lo = S2.getTemDen(
      data["R'"] + data["E(R')"],
      tem=T,
      to_eval="L(6716) / L(6731)",
      )

  edens = 0.5*(dens_hi - dens_lo)

  data["Dens"] = np.round(dens)
  data["E+(Dens)"] = np.round(dens_hi - dens)
  data["E-(Dens)"] = np.round(dens - dens_lo)

  data.remove_columns(['Ratio', 'E(R)'])

  outtab = [
      data.colnames,
      None
  ] + [list(row) for row in data]
#+end_src

#+RESULTS:
| Component       |   V |   R' | E(R') |   Dens | E+(Dens) | E-(Dens) |
|-----------------+-----+------+-------+--------+----------+----------|
| N knot          | +24 |  0.7 |  0.02 | 1796.0 |    203.0 |    168.0 |
| N Lobe VI-/IX+  | +20 |  0.7 |  0.04 | 1796.0 |    423.0 |    313.0 |
| Inner shell     | -16 | 0.57 |  0.05 | 4063.0 |   2590.0 |   1240.0 |
| N Red complex   | +23 | 0.53 |  0.06 | 5932.0 |   9772.0 |   2459.0 |
| NE Blue complex | -43 | 0.65 |  0.02 | 2350.0 |    302.0 |    245.0 |
| SW Red complex  | +34 | 0.62 |   0.1 | 2823.0 |   3830.0 |   1195.0 |
| SE Blue complex | -28 | 0.69 |  0.03 | 1893.0 |    325.0 |    265.0 |
| Total           |   0 |  0.6 |   0.0 | 3229.0 |      0.0 |      0.0 |

+ The final table has the corrected 6716/6731 ratio and the derived densities (pcc) from PyNeb
  + We assume a temperature of 10,700 K, as measured for [N II]
  + Atomic data used is as follows:
    + "All A-values for levels 1-8: Podobedova, Kelleher, & Wiese 2009, JPCRD, Vol. 3"
    + "collision strengths: Tayal & Zatsarinny 2010, ApJ 188, 32"
    + High and Low density limits for the ratio are [0.443, 1.5]
+ Also, we have plus and minus uncertainties on density
  + These are probably overestimates since they are based on the standard deviation of intensities within the apertures, which is partially correlated

***** [S II] densities versus H\alpha densities
+ Initially we use the relative densities from H\alpha
+ [X] But eventually I want to calculate the absolute values
  + [X] This is done in [[id:86749479-D6A2-4D8E-8DAE-D04312DF3686][Absolute calibration of densities from H\alpha surface brightness]]
  + [X] Initial version without correcting for continuum and [N II] in F656N
  + [X] Refined version with corrections

#+name: sii-density-vs-ha-density
| Component       | [S II]  Dens | Ha Den | F375N/F658N   | Color  |
|                 |     1000 pcc |        |               |        |
|-----------------+--------------+--------+---------------+--------|
| N knot          |          1.8 |   3.07 | 1.84 +/- 0.70 | orange |
| Inner shell     |          4.1 |   4.13 | 1.80 +/- 0.30 | b      |
| N Red complex   |          5.9 |   6.75 | 1.52 +/- 0.20 | orange |
| SW Red complex  |          2.8 |   2.78 | 1.87 +/- 0.27 | orange |
| SE Blue complex |          1.9 |   3.29 | 1.60 +/- 0.30 | orange |


#+begin_src python :var TAB=sii-density-vs-ha-density :return figfile :results file :colnames no
  import numpy as np
  from matplotlib import pyplot as plt
  from astropy.table import Table
  import seaborn as sns
  sns.set_color_codes("bright")

  figfile = "sii-density-vs-ha-density.pdf"

  data = Table(rows=TAB[2:], names=TAB[0])
  data["Ha Den"] *= 1000
  data["[S II]  Dens"] *= 1000

  fig, ax = plt.subplots(figsize=(4, 4))
  dmax = 7500
  ax.plot([0, dmax], [0, dmax], '--', lw=2, color="0.7", zorder=-100)
  ax.scatter("Ha Den", "[S II]  Dens", c="Color", s=150, edgecolor="w", data=data)
  ticks = [2000, 4000, 6000]
  ax.set(
      xlim=[0, dmax],
      ylim=[0, dmax],
      xticks=ticks, yticks=ticks,
      xlabel=r"Density derived from H$\alpha$, cm$^{-3}$",
      ylabel=r"Density derived from [S II], cm$^{-3}$",
  )
  ax.set_aspect("equal")
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:sii-density-vs-ha-density.pdf]]


***** Plot of density and ionization parameter vs distance
#+begin_src python :var TAB=big-table-of-ha-brightness :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  from matplotlib.ticker import ScalarFormatter, FormatStrFormatter, NullFormatter, LogLocator, StrMethodFormatter
  import seaborn as sns
  from astropy.table import Table
  import pyneb as pn

  data = Table(rows=TAB[1:], names=TAB[0])

  type_list = []
  for name in data["Feature"]:
      if "IS" in name:
          t = "intermediate shell"
      elif "Shell" in name:
          t = "shell"
      elif "knot" in name:
          t = "knot"
      elif "complex" in name or "Peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list
  data["n"] *= 1000
  
  sns.set_color_codes("bright")
  figfile = "density-vs-distance.pdf"
  fig, ax = plt.subplots(figsize=(4, 4))

  rgrid = np.logspace(-2.0, -0.0)
  ax.plot(rgrid, 1000/(rgrid/0.1)**2, ls="--", lw=4, c="0.7", zorder=-200, alpha=0.5)
  ax.plot(rgrid, 1500/(rgrid/0.1)**4, ls=":", lw=4, c="0.7", zorder=-200, alpha=0.5)

  for type_, marker, color, size in [
          ["shell", "o", "b", 100],
          ["intermediate shell", "o", "b", 50],
          ["knot complex", "o", "orange", 100],
          ["knot", "o", "orange", 50],
          ["lobe", "o", "red", 100],
          ["halo", "o", "k", 100],
  ]:
      m = data["Type"] == type_
      # if type_ not in ["halo", "lobe"]:
      #     ax.errorbar("U_ion", "6583/6563", yerr="E6583/6563", fmt="none", data=data[m],  zorder=-100, ecolor=color)
      ax.scatter("R_3d", "n", data=data[m], s=size, marker=marker, color=color, edgecolor="w", linewidth=0.7)

  ax.set(
      xscale="log",
      yscale="log",
      xlim=[0.04, 0.4],
      ylim=[15.0, 2e4],
      xlabel="Radius, pc",
      ylabel=r"Density, cm$^{-3}$",
  )
  ax.yaxis.set_major_formatter(FormatStrFormatter("%d"))
  ax.xaxis.set_major_formatter(StrMethodFormatter("{x:.2f}"))
  ax.xaxis.set_minor_formatter(NullFormatter())
  ax.xaxis.set_major_locator(LogLocator(subs=(1.0, 2.0, 3.0, 5.0, 7.0)))
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:density-vs-distance.pdf]]


****** Absolute calibration of densities from H\alpha surface brightness
:PROPERTIES:
:ID:       86749479-D6A2-4D8E-8DAE-D04312DF3686
:END:
+ Peak Ha surface brightness is 8.2
+ This is the same as the ~turtle-F656N-1996.fits~ file, so the units are counts/s
+ We can convert this into F_\lambda (multiply by ~PHOTFLAM~) and then F_line (multiply by ~RECTW~)
  + ~PHOTFLAM = 2.903543E-16~
  + ~RECTW = 28.3=~
  + Conversion factor of 8.217e-15 erg/cm2/count/pixel
  + Pixel size is 0.1 arcsec^2 = (10 206265)**-2 sr = 2.35e-13 sr
  + Final conversion is S = 0.03496 erg s^-1 cm^-2 sr^-1 times the counts/s value
+ [X] Note that this *originally was* only approximate, since it doesn't include continuum and [N II] contribution to F656N
  + [X] To fix this, we need to record the filter ratio F658N/F656N ratio for each component
    + Now done in the big table, and converted to line ratio R_NII = I6583/I6563
    + So, accounting for atomic continuum and 6548 contamination, the Ha fluxes need to be divided by 1.00561 + 0.1586 R_NII
    + This is done in the S' column, so that it propagates through to all the other measures, such as mass and ionization parameter, as well as density
  + [X] We also need to correct for extinction, which I did above (see discussion of flux fractions after [[id:0CA50980-C2C9-4718-ABE6-44177D753BAC][Table of brightnesses]])
    + This multiplies all H\alpha brightnesses by 1.234, which is now incorporated in the S' column 
+ Derived density:
  + S = \alpha_eff E(H\alpha) n^2 dz / 4 \pi
    + \alpha_eff = 3.03e-14 2.84 = 8.6052e-14 cm^3 s^-1
    + E(H\alpha) = 3.027e-12 erg
    + dz is measured in pixels = 0.1 arcsec = 2.992e+15 cm
  + n = sqrt(4 pi 0.03496 S' / 2.992e+15 dz 8.6052e-14 3.027e-12) = 2.374e+04 sqrt(S' / dz)
    + With S' in counts/s/pix and dz in pixels
**** DONE Summary table of physical properties
CLOSED: [2020-04-29 Wed 18:23]
+ Convert to physical units:
  + Density: normalize by 4000 pcc
  + Mass: Area times column density, which is flux / density
    + Flux = S \Omega = (\alpha_eff n^2 dz E / 4 \pi) (A / D^2)
    + M = A dz n m = [4\pi D^2 m / \alpha_eff E]  (F / n) 
    + Total F = 3.3e-10 erg/cm2/s (scaling from Hb) with RMS n = 4000 pcc
    + \alpha_eff = 1e-13 cm^3/s
    + E = 3.e-12 erg
    + m = 1.3 m_p = 2e-24 g
    + So, [4\pi D^2 m / \alpha_eff E] = 3.47e45 g s cm^-1 erg^-1
    + And F/n = 8.25e-14 erg cm s^-1
    + Giving mass normalization of 2.86275e32 g = 0.14 Msun
      + This applies to the bright parts: inner shells + knot complexes, which are 47% of the shells+knots+lobes normalization I used above
      + So the per-component masses are (0.14/0.47) = 0.30 Msun times the fractions in the above table
  + Start and end times:
    + These are a bit subtle, since they are not quite the same as the dynamic times (except for the halo)
    + For the intermediate shell, for consistency, the start time should be the end time of the inner halo
    + For start time of the the inner shell, it should be the dynamic time of the intermediate shell material /just outside/ the inner shell
      + If we assume a Hubble flow within the intermediate shell, this gives a V there of 20 km/s and time of 4000 yrs
      + Note that this is the same as the dynamic time of the intermediate shell
    + This seems to be a general property, that the end launch time of the material in a given shell is roughly the dynamic time of the shell
      + We then get the end time for the inner shells as 1500 years
    + For the N knot and the NW knot, we assume lengths of 2 arcsec and 1 arcsec, respectively, and then calculate the length-crossing time at the current speeds, giving 300 yrs and 400 yrs for the durations
      + Of course, the durations may be shorter if the knots have expanded along their length since they were launched
  + Mass loss rates then follow by dividing the mass by the duration
    + This can be compared with the current mass-loss rate of 9.12e-09 Msun/yr
  + [X] Ionization parameter
    + This requires knowing the ionizing photon luminosity of the star
    + Need to run Cloudy models using the stellar parameters from the Herald:2011a paper
    + Actually, that is not necessary since we can use the Krticka:2020a results (Table 4)
      + Interpolating at T=75 kK (half way between T=67 and T=83 models), we have surface photon fluxes:
        + log10 q(H I) = 25.49
        + log10 q(He I) = 24.20
        + log10 q(He II) = 22.48
      + Stellar radius is 0.51 +/- 0.12 Rsun => photosphere surface area = (1.583 +/- 0.745)e+22 
      + So conversion to photon luminosities is:
        + Q(H I) = (4.89 +/- 2.30)e+47
        + Q(He II) = (4.78 +/- 2.25)e+44 - 1000 times less!
    + So ionization parameter = F / n c = Q / 4 \pi R^2 n c
    + In above table, R is in pc and n is in 4000 pcc, so normalization is:
      + 4.89e+47 / 4 pi 4000 c (1 pc)**2 = 3.408e-05 +/- 47% 

#+name: summary-pars
| Component          | Ha flux | Density, pcc | Mass, Msun | ioniz param, 1e-4 | t_start | t_end | Mdot, Msun/yr | V |
|--------------------+---------+--------------+------------+-------------------+---------+-------+---------------+---|
| Inner shells       | 44 %    | 4000 \to 5000  |      0.078 | 36 \to 70           |      -4 |  -1.5 |        3.1e-5 |   |
| Intermediate shell | 13 %    | 700 \to 1000   |      0.135 | 80 \to 140          |     -10 |    -4 |        2.3e-5 |   |
| Knot complexes     | 42 %    | 2000 \to 5000  |      0.063 | 4 \to 50            |      -8 |  -1.5 |        9.7e-6 |   |
| Outer Lobes        | 1 %     | 160 \to 320    |      0.024 | 86 \to 224          |      -5 |    -2 |          8e-6 |   |
|--------------------+---------+--------------+------------+-------------------+---------+-------+---------------+---|
| Inner Halo         | 0.5 %   | 80 \to 160     |      0.030 | 200 \to 340         |     -20 |   -10 |          3e-6 |   |
| Outer Halo         | 0.2 %   | 15 \to 40      |      0.042 | 540 \to 760         |     -40 |   -20 |        2.1e-6 |   |
|--------------------+---------+--------------+------------+-------------------+---------+-------+---------------+---|
| Bright peak        | (3%)    | 14000        |    (0.002) | 2                 |       0 |     0 |            0. |   |
| NW knot            | (0.01%) | 6700         |     (1e-5) | 6                 |    -7.1 |  -6.7 |        2.5e-8 |   |
| SE knot            | (0.08%) | 8200         |     (6e-5) | 34                |   -1.25 | -0.95 |          2e-7 |   |
| N knot             | (0.02%) | 3000         |     (3e-5) | 12                |    -3.0 |  -2.7 |          1e-7 |   |
|--------------------+---------+--------------+------------+-------------------+---------+-------+---------------+---|
|                    |         |              |      0.372 |                   |         |       |    3.7e-1 / 0 |   |
#+TBLFM: $8=$4 / 1000 ($7 - $6) ;s2::@8$8=0.0::@12$4=vsum(@I..@III)
**** TODO Separating out the blue and red-shifted knot complexes
+ We now have axis E+ being redshifted knots and E- being blueshifted knots
+ It would be good to be able to distinguish them in the summary table
  + Especially since we have now seen that they correspond to different non-overlapping output events
  + E+ was active from 8000 to 4000 yrs ago
  + E- was active from 3000 to 1000 yrs ago
  + So E+ was from before the formation of the PNe and E- was after *perhaps*
+ What do we have in the big table already?
  + SW Red Complex - /red/
  + NW knot - /red/
  + Peak - /red/ + /blue/ - really N(E) Red plus NE Blue
  + N complexes - /red/ - really N(W) Red
  + S complexes - /blue/ - really SE Blue
  + SE knot - /blue/
+ So the one that needs further analysis is "Peak"
  + We can look at the spectra to assign brightness between the red and blue components
+ Slit D - 1.6 arcsec to E of star
  + The N complexes cross the slit at y \approx +3
  + NE Blue complex at V = -42 km/s has about 15% of Ha flux
    + Note velocities are smaller than for [N II]
    + /Recheck this number/
    + SPM S(Ha) at V = -42 is 0.05, but knot contribution is probably 0.025
    + S([N II]) = 0.030, and S([O III]) = 0.067
      + => [N II]/Ha = 4 0.030 / 0.067 = 1.79 - as before, this is big
    + If that is true, then expected Ha is 0.030/1.79 = 0.017, not so different from 0.025
    + Peak SPM S(Ha) = 0.25 with W = 50
    + So, we get fraction as 0.025 30 / 0.25 50 = 0.06, or 6%
    + *I think this is more reliable*
    + So NE Blue S(Ha) = 5.1 0.06 = 0.306
  + N(E) Red complex at V = +16 km/s has about 30% of Ha flux
    + /Recheck this one too/
    + SPM S(Ha) at V = +16 is 0.21 but knot contribution is probably less than 0.1
    + S([N II]) = 0.020, and S([O III]) = 0.247
      + => [N II]/Ha = 4 0.020 / 0.247 = 0.323 - highish, but nothing like SE Blue
    + So expected Ha contribution from knots is 0.02 / 0.323 = 0.06 - very similar to 0.1
    + So fraction is 0.1 30 / 0.25 50 = 0.24 or 24% (as opposed to initial estimate of 30%)
    + *So this time it checks out more or less*
    + Implies N(E) Red S(Ha) = 5.1 0.24 = 1.224
  + The other 50% comes from the shells
  + Total S(Ha) is 5.1 \pm 0.9
    + (don't do BG subtraction since we are dividing into components anyway)
  + So this would mean
    + N(E) Red: S(Ha) = 1.53
    + NE Blue: S(Ha) = 0.77
    + Compare with 4.0 that I had for "N complexes" and 4.9 for "Peak"
      + But these were measured in brighter locations
      + Still, they may be overestimates since the shell contribution has not been subtracted
  + Inspired by Slit F below, we can calculate line ratios too (as [N II]/Ha = 4 [N II]/[O III])
    + NE Blue: [N II]/Ha = 4 0.029 / 0.066 = 1.758 *enormous !!!*
    + Inner shell: [N II]/Ha = 4 0.001 / 0.239 = 0.01674 - consistent with HST
    + N(E) Red: [N II]/Ha = 4 0.015 / 0.251 = 0.239 - a little higher than HST, but roughly the same
+ Slit F - 4.6 arcsec W of star
  + Looking at y = -5 (/slit F South/)
    + SW Faint Blue (V = -18 km/s) is 40% of flux
    + Rest is mainly shells (possibly IS) and SW Red complex
    + Total S(Ha) = 1.0 \pm 0.3
      + SW Faint Blue S(Ha) = 0.4
    + In [O III], we can see that SW Faint Blue has a narrow peak
      + [N II]/[O III] = 0.01 for SW Faint Blue 
      + [N II]/[O III] = 0.0043 for the shells
      + [N II]/[O III] = 0.08846 for SW Red
    + If we assume that [O III]/Hb = 12 for the shells, then [O III]/Ha = 4
      + => [N II]/Ha = 4 [N II]/[O III]
      + [N II]/Ha = 0.04, 0.017, 0.35 for SW FB, shells, SW R
      + But from HST, we have measurements of 0.02 \to 0.06 for IS and 0.01 \to 0.03 for inner shells
      + From the spectrum for the inner shell we get 4 0.00105 / 0.258 = 0.016
    + So this all makes sense /except/ that in Fig 23a we have SW Red as being 0.03
      + /but/ this is surely SE Blue instead - yes it is, it was an error in the labeling, now fixed
    + So everything /really/ makes sense now
      + Our measurement of [N II]/Ha = 0.35 for SW Red is roughly consistent with the value of 0.25 from [[id:6BC85271-11B3-443D-A0D0-9E36DBCDFECC][Table of HST line ratios]]
    + I will go back and do ratios for NE Blue too
    + Now re-calculating knot contributions to S(Ha)
      + SW Faint Blue
        + [N II]/Ha = 0.04 from above
        + S([N II]) = 0.00156 from slit F y = -3.6
        + S([O III]) = 0.08 from slit F y = -3.6, after subtracting wing of shell
        + [N II]/Ha = 4 0.00156 / 0.08 = 0.078, /so not so small now/
          + This would imply S(Ha) = 0.00156 / 0.078 = 0.020
        + SPM S(Ha) = 0.030 from the spectrum (1/2 of value, taking into account wing of shell)
          + So these are close as usual 0.030 and 0.020
        + Peak S(Ha) is 0.15 with W = 60 km/s
          + So SW FB's percentage of Ha brightness is 0.030 30 / 0.15 60 = 0.1 => 10%
          + Much less than before, except that we were looking at y = -5, and this is y = -3.6
          + Total S(Ha) = 1.3 => SW FB has 0.13
          + /Still quite a bit less than before/
      + SW Red
        + S([N II]) = 0.032 at y = -1
        + S([O III]) = 0.1 blended component
        + [N II]/Ha = 4 0.032 / 0.1 = 1.28
          + This implies S(Ha) = 0.032 / 1.28 = 0.025
        + SPM S(Ha) = 0.05 from the spectrum (1/2 of value, taking into account wing of shell)
          + Consistent within a factor of 2
        + Peak S(Ha) = 0.22 with W = 60
          + so SW Red's percentage of Ha brightness is 0.05 30 / 0.22 60 = 0.114 => 11%
          + Total S(Ha) = 2.8 +/- 0.4 => SW Red has 0.308
  + Looking at y = +3 (/slit F North/)
    + N(W) Red at V = +24 km/s has S([N II]) = 0.057
    + In [O III] there is blended component with S([O III]) = 0.15
      + After correcting for wing of shell emission
      + So [N II]/Ha = 4 0.057 / 0.15 = 1.52 - *another big one*
    + In Ha, there is a very blended component with about SPM S(Ha) = 0.05
      + Whereas [O III] prediction gives 0.057 / 1.52 = 0.0375, which is close enough
    + Peak Ha is 0.24, so fraction is 0.05 30 / 0.24 50 = 0.125, or about 12.5%
    + Total HST S(Ha) = 3.8 +/- 0.4
    + So N(W) Red S(Ha) = 3.8 0.125 = 0.475
+ Slit C - 4.2 arcsec E of the star
  + Looking at y = -3
  + SE Blue is at V = -36 km/s in [N II] S([N II]) = 0.0037
  + In [O III] there is a blended component at V = -33 km/s S([O III]) = 0.02
    + This would imply [N II]/Ha = 4 0.0037 / 0.02 = 0.74, which is high
  + In Ha it is very difficult to see at all
    + The Ha SPM Ha brightness there is 0.033 but most of this is the thermal broadened wing of the shell emission
    + Scaling from the [O III]-derived [N II]/Ha, we get 0.005 for SE Blue contribution to Ha
    + Peak Ha is 0.15 from the shell with width of 40 km/s
    + Taking 30 km/s for width of SE Blue contribution, we get a fraction of 30 0.005 / 40 0.15 = 0.025
    + So, only 2.5% of Ha surface brightness is due to SE Blue
    + Total S(Ha) from HST there is 1.5 \pm 0.3
    + So, we derive S(Ha) = 0.0375 for SE Blue
    + /This is very low/ but the problem is that the knots are very faint in that slit
+ Slit F* - 2.8 arcsec E of star
  + Looking at y = -4
  + SE Blue at V = -34 km/s has S([N II]) = 0.021, more than 5 times higher than in slit C
  + Unfortunately, there is no [O III]
  + Ha flux there is about 0.06, of which maybe half is from knots, so say SPM S(Ha) = 0.03
  + Line is saturated, but looks like peak would be 0.2
    + So we can work out fraction as 0.03 30 / 0.2 40 = 0.1125 => 11% of total
  + HST S(Ha) = 1.9 for that position, so knots have 1.9 0.1125 = 0.21375
***** New big table of the red and blue knot complexes
+ Top section of rows are from the original table
+ Bottom section are new measurements
  + SW F Blue from slit F
  + N(E) Red and NE Blue from slit D
  + SE Blue and SW Red were already done separately before
| Feature        |   S(Ha) |    BG |    S' | ds |      F |   frac |     n |     M_i | R_3d |    U_ion | t_rec |      N |  R_NII | R^2 S | % S(Ha) |
|----------------+---------+-------+-------+----+--------+--------+-------+---------+------+----------+-------+--------+--------+-------+---------|
| SW Red complex |    0.45 | 0.027 | 0.494 | 36 |   640. | 0.0162 |  2.78 | 0.00392 | 0.19 |   0.0014 | 4.4e1 | 3.0e20 | 0.3207 | 0.018 |         |
| NW knot        |    0.75 |  0.26 | 0.562 |  7 |    28. | 0.0007 |  6.72 | 0.00007 | 0.18 |   0.0006 | 1.8e1 | 1.4e20 | 0.4469 | 0.018 |         |
| N knot         |    0.19 |  0.01 | 0.201 | 12 |    29. | 0.0007 |  3.07 | 0.00016 | 0.19 |   0.0012 | 4.0e1 | 1.1e20 | 0.6116 | 0.007 |         |
| Peak           |     8.2 |   4.2 | 4.846 | 15 |  1090. | 0.0276 | 13.47 | 0.00138 | 0.24 |   0.0002 | 9.1e0 | 6.1e20 | 0.0818 | 0.279 |         |
| N complexes    |     4.2 |  0.83 | 4.055 | 50 | 10138. | 0.2567 |  6.75 | 0.02559 | 0.24 |   0.0004 | 1.8e1 | 1.0e21 | 0.1253 | 0.234 |         |
| S complexes    |     2.3 |   1.5 | 0.980 | 51 |  2549. | 0.0646 |  3.29 | 0.01320 | 0.07 |   0.0085 | 3.7e1 | 5.0e20 | 0.0106 | 0.005 |         |
| SE knot        |     2.2 |   1.2 | 1.195 | 10 |   120. | 0.0030 |  8.19 | 0.00025 | 0.07 |   0.0034 | 1.5e1 | 2.5e20 | 0.1693 | 0.006 |         |
|----------------+---------+-------+-------+----+--------+--------+-------+---------+------+----------+-------+--------+--------+-------+---------|
|                |       1 |     0 | 1.227 |  1 |     1. | 0.3695 | 26.25 | 0.04457 |    1 | 5.193e-6 | 4.6e0 | 7.9e19 |        | 1.227 |         |
|----------------+---------+-------+-------+----+--------+--------+-------+---------+------+----------+-------+--------+--------+-------+---------|
| N(E) Red       |    1.24 |     0 | 1.475 | 40 |  2360. | 0.0598 |  4.55 | 0.00884 | 0.26 |   0.0004 | 2.7e1 | 5.5e20 |   0.20 | 0.100 | 24 %    |
| SW Red         |   0.308 |     0 | 0.343 | 60 |  1235. | 0.0313 |  1.79 | 0.01176 | 0.19 |   0.0021 | 6.8e1 | 3.2e20 |   0.92 | 0.012 |         |
| N(W) Red       |   0.475 |     0 | 0.494 | 40 |   790. | 0.0200 |  2.63 | 0.00512 | 0.16 |   0.0020 | 4.6e1 | 3.2e20 |   1.14 | 0.013 | 12.5 %  |
|----------------+---------+-------+-------+----+--------+--------+-------+---------+------+----------+-------+--------+--------+-------+---------|
| NE Blue        |   0.306 |     0 | 0.316 | 50 |   790. | 0.0200 |  1.88 | 0.00716 | 0.14 |   0.0037 | 6.5e1 | 2.8e20 |   1.20 | 0.006 | 6 %     |
| SW F Blue      |    0.13 |     0 | 0.158 | 40 |   253. | 0.0064 |  1.49 | 0.00289 | 0.11 |   0.0076 | 8.2e1 | 1.8e20 |   0.05 | 0.002 | 10 %    |
| SE Blue        | 0.21375 |     0 | 0.236 | 50 |   590. | 0.0149 |  1.63 | 0.00617 | 0.07 |   0.0171 | 7.5e1 | 2.4e20 |   0.70 | 0.001 | 11 %    |
|----------------+---------+-------+-------+----+--------+--------+-------+---------+------+----------+-------+--------+--------+-------+---------|
| Sum Red        |       1 |     0 | 1.227 |  1 |     1. | 0.1111 | 26.25 | 0.02572 |    1 | 5.193e-6 | 4.6e0 | 7.9e19 |        | 1.227 |         |
| Sum Blue       |       1 |     0 | 1.227 |  1 |     1. | 0.0413 | 26.25 | 0.01622 |    1 | 5.193e-6 | 4.6e0 | 7.9e19 |        | 1.227 |         |
| Sum Both       |       1 |     0 | 1.227 |  1 |     1. | 0.1524 | 26.25 | 0.04194 |    1 | 5.193e-6 | 4.6e0 | 7.9e19 |        | 1.227 |         |
#+TBLFM: $4=1.234 ($2 - $3) / (1.00561 + 0.1586 $14); f3::$6=$4 $5**2;f0::$7=$6/1.234 32000;f4::$8=23.7 sqrt($4/$5);f2::$9=$6/$8 58682;f5::$11=4.89e47/ 4 $pi 1000 $8 $c ($10 $pc)**2 ;f4::$12=122/$8;s2::$13=3e15 $5 $8 1000;s2::$15=$4 $10**2 ;f3::@9$7=vsum(@I..@II)::@9$9=vsum(@I..@II)::@16$7=vsum(@III..@IIII);f4::@16$9=vsum(@III..@IIII);f5::@17$7=vsum(@IIII..@IIIII);f4::@17$9=vsum(@IIII..@IIIII);f5::@18$7=vsum(@III..@IIIII);f4::@18$9=vsum(@III..@IIIII);f5
+ Summary of results:
  + Total mass is same as I had before: 0.045 Msun
    + Blue: 0.018
    + Red: 0.027 - slightly higher
  + Total flux is only half what I had before
    + This implies I was including some shell flux in my earlier estimates
    + Red knots are more than twice the flux of blue knots
  + Densities are all similar to before, except a tiny bit lower (red is roughly double blue)
  + U_ion for 4 out of 6 cluster around 0.003
    + *but* much lower for N(E) Red: 0.0004
    + *and* much higher for SE Blue: 0.0172
  + [N II]/Ha does not correlate well with U_ion
    + I have redone these ratios below
    + Most are of order unity (0.64, 1.20, 1.14, 1.2, 0.70 = 0.976 +/- 0.126)
    + *but* much lower for SW Faint Blue and N(E) Red:
      + 0.05 and 0.20 respectively
      + Interestingly, this is an opposite pair
      + They do not have higher ionization parameters:
        + [0.0004, 0.0076] = 0.0040 +/- 0.0036 for them
        + [0.0021, 0.0020, 0.0037, 0.0171] = 0.0062 +/- 0.0036
  + I have done a new column of R^2 S, which should be proportional to optical depth to ionizing photons
    + The idea is that if this is order 1, then the ionization parameter is reduced by e^-\tau
    + But I need to work out constant of proportionality
      + S = 1.0932 \alpha_eff E(Ha) n^2 dz /4\pi
      + Recombs/cm^2/s = 1.0932 \alpha_A n^2 dz = (\alpha_A / \alpha_eff) (S/E(Ha)) / 4\pi
      + Photons/cm^2/s = Q / 4\pi R^2
      + so fraction absorbed = (\alpha_A / \alpha_eff) (S/E(Ha)) R^2 / Q
      + But we need to get S into proper units first
        + Multiply out numbers by ~PHOTFLAM = 2.903543E-16~ to get F_\lambda in erg/s/cm2/AA/pixel
        + Multiply by rectangular width: 28.3 AA to get line flux
        + Multiply by (10 206265)**2 to get per sr
        + So, total is times 0.03496 to get erg/s/cm2/sr
        + Q(H) = 4.89e47
        + E(Ha) = 3.027e-12
        + \alpha_A / \alpha_eff = 4 more or less
        + So, with R in pc, we multiply S R^2 by
          + 4 0.03496 3.086e+18**2  / 4.89e47 3.027e-12 = 0.8998
    + Although, it doesn't look like it will be important
***** Better calculation of [N II]/Ha for the knot complexes
|           | Slit |  S(Ha) | S([N II]) | S([O III]) | [N II]/Ha | [O III]/Ha |
|-----------+------+--------+-----------+------------+-----------+------------|
| N(E) Red  | D    |  0.100 |     0.020 |      0.247 |      0.20 |       2.47 |
| SW Red    | F    |  0.050 |     0.032 |      0.100 |      0.64 |       2.00 |
| SW Red    | G    |  0.020 |     0.024 |      0.070 |      1.20 |       3.50 |
| N(W) Red  | F    |  0.050 |     0.057 |      0.150 |      1.14 |       3.00 |
|-----------+------+--------+-----------+------------+-----------+------------|
| NE Blue   | D    |  0.025 |     0.030 |      0.067 |      1.20 |       2.68 |
| SW F Blue | F    |  0.030 |   0.00156 |      0.080 |      0.05 |       2.67 |
| SE Blue   | F*   |  0.030 |     0.021 |          0 |      0.70 |       0.00 |
| SE Blue   | C    |  0.007 |    0.0037 |      0.020 |      0.53 |       2.86 |
|-----------+------+--------+-----------+------------+-----------+------------|
| S Shell   | E    |   0.21 |    0.0010 |       0.30 |    4.8e-3 |       1.43 |
| N Shell   | C    |   0.18 |    0.0020 |      0.150 |      0.01 |       0.83 |
| N knot    | H    | 0.0044 |    0.0022 |     0.0056 |      0.50 |       1.27 |
#+TBLFM: $6=$4/$3;f2::$7=$5/$3;f2

**** DONE Graph of mass loss history
CLOSED: [2020-05-07 Thu 23:46]
#+begin_src python :var TAB=summary-pars :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table

  data = Table(rows=TAB[1:-1], names=TAB[0])

  type_list = []
  for name in data["Component"]:
      if "shell" in name:
          t = "shell"
      elif "knot" in name or "complex" in name or "peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list

  data["t"] = 0.5*(data["t_start"] + data["t_end"])
  data["dt"] = 0.5*(data["t_end"] - data["t_start"])
  data["mdot"] = [float(_) for _ in data["Mdot, Msun/yr"]]
  sns.set_color_codes("bright")
  figfile = "mass-loss-history.pdf"
  fig, ax = plt.subplots(figsize=(4, 4))

  for type_, marker, color, size in [
          ["shell", "o", "b", 100],
          ["knot complex", "o", "orange", 100],
          ["lobe", "o", "red", 300],
          ["halo", "o", "k", 300],
  ]:
      m = data["Type"] == type_
      ax.errorbar("t", "mdot", xerr="dt", fmt="none", data=data[m],  lw=5, zorder=-100, ecolor=color)
      # ax.scatter("t", "mdot", data=data[m], s=size, marker=marker, color=color, edgecolor="w", linewidth=0.7)

  ax.set(
      xscale="linear",
      yscale="log",
      xlim=[-45, 0],
      ylim=[1e-6, 1e-4],
      xlabel="Time before present, 1000 yr",
      ylabel=r"Mass-loss rate, $M_{\odot}$ / yr",
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:mass-loss-history.pdf]]

**** DONE Graph of [N II]/Ha versus ionization parameter
CLOSED: [2020-05-05 Tue 19:54]
#+begin_src python :var TAB=big-table-of-line-ratios :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table
  import pyneb as pn

  data = Table(rows=TAB[1:], names=TAB[0])

  type_list = []
  for name in data["Feature"]:
      if "IS" in name:
          t = "intermediate shell"
      elif "Shell" in name:
          t = "shell"
      elif "knot" in name:
          t = "knot"
      elif "complex" in name or "Peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list

  sns.set_color_codes("bright")
  figfile = "rnii-vs-ion-par.pdf"
  fig, ax = plt.subplots()

  # Fraction of singly ionized species
  fplus = np.logspace(-4.0, 0.0, 401)
  Ugrid = (1/fplus - 1.0)/1.6e4
  #Ugrid = (1/fplus - 1.0)/3642

  nii = pn.Atom(atom='N2')
  oiii = pn.Atom(atom='O3')
  hi = pn.RecAtom('H', 1)
  T = [10700.0, 10700. - 1500, 10700. + 1500]
  den = 4000.0
  em4363 = oiii.getEmissivity(T, den, wave=4363)
  em5007 = oiii.getEmissivity(T, den, wave=5007)
  em6583 = nii.getEmissivity(T, den, wave=6583)
  em6563 = hi.getEmissivity(T, den, lev_i=3, lev_j=2)
  em4861 = hi.getEmissivity(T, den, lev_i=4, lev_j=2)
  O_H = 4.9e-4
  N_H = 7.0e-5
  rnii = N_H*fplus[None, :]*em6583[:, None]/em6563[:, None]

  ax.fill_between(Ugrid, rnii[1, :], rnii[2, :], lw=0, color="k", alpha=0.07, zorder=-201)
  ax.plot(Ugrid, rnii[0, :], lw=8, c="0.7", zorder=-200)
  ax.plot(Ugrid, rnii[0, :], 'o', markevery=50, c="w", zorder=-199)
  ax.text(3e-5, 1.2, r"N/H = $7.0 \times 10^{-5}$, $T = (10\,700 \pm 1500)$ K", c="0.6")
  ax.text(5e-5, 0.2, r"N$^{+}$/N = 0.1", c="0.6", fontsize="small")
  ax.text(8e-4, 0.02, r"N$^{+}$/N = 0.01", c="0.6", fontsize="small")
  ax.text(0.05, 0.0025, r"N$^{+}$/N = 0.001", c="0.6", fontsize="small")
  for type_, marker, color, size in [
          ["intermediate shell", "o", "b", 50],
          ["shell", "o", "b", 100],
          ["knot", "o", "orange", 50],
          ["knot complex", "o", "orange", 100],
          ["lobe", "$\downarrow$", "red", 300],
          ["halo", "$\downarrow$", "k", 300],
  ]:
      m = data["Type"] == type_
      if type_ not in ["halo", "lobe"]:
          ax.errorbar("U_ion", "6583/6563", yerr="E6583/6563", fmt="none", data=data[m],  zorder=-100, ecolor=color)
      ax.scatter("U_ion", "6583/6563", data=data[m], s=size, marker=marker, color=color, edgecolor="w", linewidth=0.7)

  ax.set(
      xscale="log",
      yscale="log",
      xlim=[0.00002, 0.1],
      ylim=[0.001, 4.0],
      xlabel="Ionization parameter",
      ylabel=r"[N II] 6583 / H$\alpha$ 6563",
  )
  sns.despine()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:rnii-vs-ion-par.pdf]]
**** BPT Graph of [O III]/H\beta versus [N II]/Ha
#+begin_src python :var TAB=big-table-of-line-ratios :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table

  data = Table(rows=TAB[1:], names=TAB[0])

  type_list = []
  for name in data["Feature"]:
      if "IS" in name:
          t = "intermediate shell"
      elif "Shell" in name:
          t = "shell"
      elif "knot" in name:
          t = "knot"
      elif "complex" in name or "Peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list

  data["R_OIII"] = 1.159*data["502/487"]

  sns.set_color_codes("bright")
  figfile = "roiii-vs-rnii.pdf"
  fig, ax = plt.subplots()

  Ugrid = np.logspace(-5.5, 0.0)
  ax.plot(Ugrid, 14.12 * 1.6e4*Ugrid / (1 + 1.6e4*Ugrid), lw=8, c="0.8", zorder=-200)
  for type_, marker, color, size in [
          ["intermediate shell", "o", "b", 50],
          ["shell", "o", "b", 100],
          ["knot", "o", "orange", 50],
          ["knot complex", "o", "orange", 100],
          ["lobe", "o", "red", 100],
          ["halo", "o", "k", 100],
  ]:
      m = data["Type"] == type_
      if type_ != "halo":
          ax.errorbar("6583/6563", "R_OIII", xerr="E6583/6563", yerr="E502/487", fmt="none", data=data[m],  zorder=-100, ecolor=color)
      ax.scatter("6583/6563", "R_OIII", data=data[m], s=size, marker=marker, color=color)

  ax.set(
      xscale="log",
      yscale="log",
      xlim=[0.001, 4.0],
      ylim=[5.0, 16.0],
      xlabel=r"[N II] / H$\alpha$",
      ylabel=r"[O III] / H$\beta$",
  )
  sns.despine()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:roiii-vs-rnii.pdf]]


**** Ionization correction factors
+ From Delgado-Inglada:2014a
  + They use
    + \upsilon = He^++ / He^+ + He^++ = 0.01 for turtle (Pottasch:2009a)
    + \omega = O^++ / O^+ + O^++ = 0.95 on average (0.9 to 0.999)
+ Definition is something like:
  + (N/O) = (N^+/O^+) ICF(N^+/O^+)
  + So (N^+/N) = (O^+/O) / ICF(N^+/O^+)
+ Assuming (N^+/N) = (O^+/O) is tantamount to ICF = 1
  + This is what is often assumed, e.g. KB94
+ Fig 6a of Delgado-Inglada:2014a shows that for He++/He+ > 0.001 (we have about 0.01) then there is a large spread in the ICF, but it is more or less centered on 1
+ They recommend log(ICF) = -0.16 \omega (1 + log \upsilon)
+ Assuming \upsilon = 0.01 and \omega = 0.9
  + (since for \omega \to 1 it doesn't matter what the ICF is)
  + => log(ICF) = -0.16 0.9 (1 - 2) = 0.144 => ICF = 1.4
  + But spread is large, \pm 0.3 dex, which implies 1.4 \pm 1.0
+ Empirically, Pottasch:2009a find
  | Element |  n+/np |  n++/np | n+/n++ |
  |---------+--------+---------+--------|
  | N       | 4.3e-6 | 5.58e-5 |  0.077 |
  | O       | 2.8e-5 | 4.64e-4 |  0.060 |
  #+TBLFM: $4=$2/$3;f3
+ So this is an ICF smaller than unity, of 0.7792
**** DONE Graph of [O III]/H\beta versus ionization parameter
CLOSED: [2020-05-05 Tue 19:52]
+ 1.159 times filter ratio
+ From pyneb I get the following emissivities (T = 10000 K, n = 4000)
  | Hb           | 1.23880618e-25 |
  | [O III] 5007 | 3.56864937e-21 |
  | [N II] 6583  | 5.83203588e-21 |
  | Ha           | 3.53159176e-25 |
+ Pottasch gives abundances as follows:
  + N/H = 7.0e-5
  + O/H = 4.9e-4
+ So, assuming 100% respective ion fraction, we predict
  + [O III]/Hb = 4.9e-4 3.56864937e-21 / 1.23880618e-25 = 14.12
  + [N II]/Ha = 7.0e-5 5.83203588e-21 / 1.23880618e-25 = 3.295
+ We expect the following
  + f++/(1 - f++) = A U_ion
  + => f++ = A U_ion / (1 + A U_ion) 
  + AND (1 - f+) / f+ = A U_ion
  + f+ = 1 / (1 + A U_ion)
+ Or another way of putting it
  + U_ion = A^-1 [f+^-1 - 1]
+ Calculate value of A
  + F_+ n+ \sigma = \alpha n++ n_e
  + n++/n+ = F_+ \sigma / n_e \alpha
  + Fraction F_+ / F_ion = \phi
  + => n++/n+ = (\phi \sigma c / \alpha) U_ion
+ Summary: A = \phi \sigma c / \alpha
  + From Krticka:2020a, q(He I) / q(H I) = 0.05129, so that is an upper limit on \phi
  + IP in Ryd are:
    + He I : 1.8
    + N II : ?
    + O II : 2.58
    + He II : 4.0
  + For O+:
    + \sigma = 8.67e-18 cm^2 at threshold
    + \alpha = 3.66e-12 cm^3/s
    + => A < 0.05129 8.67e-18 2.99792458e10 / 3.66e-12 = 3642

#+begin_src python :var TAB=big-table-of-line-ratios :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table
  import pyneb as pn

  data = Table(rows=TAB[1:], names=TAB[0])

  type_list = []
  for name in data["Feature"]:
  if "IS" in name:
          t = "intermediate shell"
      elif "Shell" in name:
          t = "shell"
      elif "knot" in name:
          t = "knot"
      elif "complex" in name or "Peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list

  data["R_OIII"] = 1.159*data["502/487"]

  sns.set_color_codes("bright")
  figfile = "roiii-vs-ion-par.pdf"
  fig, ax = plt.subplots()

  # Fraction of singly ionized species
  fplus = np.logspace(-4.0, 0.0, 401)
  Ugrid = (1/fplus - 1.0)/1.6e4
  #Ugrid = (1/fplus - 1.0)/3642

  nii = pn.Atom(atom='N2')
  oiii = pn.Atom(atom='O3')
  hi = pn.RecAtom('H', 1)
  T = [9500.0, 9500 - 500, 9500 + 500]
  den = 4000.0
  em4363 = oiii.getEmissivity(T, den, wave=4363)
  em5007 = oiii.getEmissivity(T, den, wave=5007)
  em6583 = nii.getEmissivity(T, den, wave=6583)
  em6563 = hi.getEmissivity(T, den, lev_i=3, lev_j=2)
  em4861 = hi.getEmissivity(T, den, lev_i=4, lev_j=2)
  O_H = 4.9e-4
  N_H = 7.0e-5
  roiii = O_H*(1.0 - fplus[None, :])*em5007[:, None]/em4861[:, None]

  ax.fill_between(Ugrid, roiii[1, :], roiii[2, :], lw=0, color="k", alpha=0.07, zorder=-201)
  ax.plot(Ugrid, roiii[0, :], lw=8, c="0.7", zorder=-200)
  ax.plot(Ugrid, roiii[0, :], 'o', markevery=50, c="w", zorder=-199)
  ax.text(3e-5, 3.0, r"O/H = $4.9 \times 10^{-4}$, $T = (9500 \pm 500)$ K", c="0.6")
  ax.text(1e-4, 6.0, r"O$^{2+}$/O = 0.9", c="0.6", fontsize="small")
  ax.text(1e-3, 12.0, r"O$^{2+}$/O = 0.99", c="0.6", fontsize="small")
  ax.text(0.04, 11.0, r"O$^{2+}$/O = 0.999", c="0.6", fontsize="small")

  for type_, marker, color, size in [
          ["intermediate shell", "o", "b", 50],
          ["shell", "o", "b", 100],
          ["knot", "o", "orange", 50],
          ["knot complex", "o", "orange", 100],
          ["lobe", "o", "red", 100],
          ["halo", "o", "k", 100],
  ]:
      m = data["Type"] == type_
      ax.errorbar("U_ion", "R_OIII", yerr="E502/487", fmt="none", data=data[m],  zorder=-100, ecolor=color)
      ax.scatter("U_ion", "R_OIII", data=data[m], s=size, marker=marker, color=color, edgecolor="w", linewidth=0.7)

  ax.set(
      xscale="log",
      yscale="linear",
      xlim=[0.00002, 0.1],
      ylim=[0.0, 16.0],
      xlabel="Ionization parameter",
      ylabel=r"[O III] 5007 / H$\beta$ 4861",
  )
  sns.despine()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:roiii-vs-ion-par.pdf]]

**** [O III] T ratio vs [O III]/Hb
#+begin_src python :var TAB=big-table-of-line-ratios :colnames no :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table
  import pyneb as pn

  data = Table(rows=TAB[1:], names=TAB[0])

  type_list = []
  for name in data["Feature"]:
      if "IS" in name:
          t = "intermediate shell"
      elif "Shell" in name:
          t = "shell"
      elif "knot" in name:
          t = "knot"
      elif "complex" in name or "Peak" in name:
          t = "knot complex"
      elif "Lobe" in name:
          t = "lobe"
      elif "Halo" in name:
          t = "halo"
      else:
          t = ""
      type_list.append(t)
  data["Type"] = type_list

  data["R_OIII"] = 1.159*data["502/487"]

  nii = pn.Atom(atom='N2')
  oiii = pn.Atom(atom='O3')
  hi = pn.RecAtom('H', 1)
  T = np.linspace(9000, 15000, 61)
  den = 4000.0
  em4363 = oiii.getEmissivity(T, den, wave=4363)
  em5007 = oiii.getEmissivity(T, den, wave=5007)
  em6583 = nii.getEmissivity(T, den, wave=6583)
  em6563 = hi.getEmissivity(T, den, lev_i=3, lev_j=2)
  em4861 = hi.getEmissivity(T, den, lev_i=4, lev_j=2)
  O_H = 4.9e-4
  N_H = 7.0e-5

  sns.set_color_codes("bright")
  figfile = "roiii-vs-rtoiii.pdf"
  fig, ax = plt.subplots()

  

  ax.plot(em4363/em5007, O_H*em5007/em4861, lw=8, c="0.7", zorder=-200)
  ax.plot(em4363/em5007, O_H*em5007/em4861, 'o', markevery=10, c="w", zorder=-199)

  ax.plot(em4363/em5007, 0.4*O_H*em5007/em4861, lw=8, c="0.7", zorder=-200, alpha=0.7)
  ax.plot(em4363/em5007, 0.4*O_H*em5007/em4861, 'o', markevery=10, c="w", zorder=-199)

  for type_, marker, color, size in [
          ["intermediate shell", "o", "b", 50],
          ["shell", "o", "b", 100],
          ["knot", "o", "orange", 50],
          ["knot complex", "o", "orange", 100],
          ["lobe", "o", "red", 100],
          ["halo", "o", "k", 100],
  ]:
      m = data["Type"] == type_
      ax.errorbar("4363/5007", "R_OIII", xerr="E(4363/5007)", yerr="E502/487", fmt="none", data=data[m],  zorder=-100, ecolor=color)
      ax.scatter("4363/5007", "R_OIII", data=data[m], s=size, marker=marker, color=color)

  ax.text(0.01, 25, r"O$^{2+}$ / H = " + f"{O_H:.1e}", color="0.7", rotation=37)
  ax.text(0.015, 15.5, r"O$^{2+}$ / H = " + f"{0.4*O_H:.1e}", color="0.7", alpha=0.7, rotation=38)

  ax.text(0.0205, 46, r"$T$ = 15,000 K", color="0.7")
  ax.text(0.0205, 18, r"$T$ = 15,000 K", color="0.7", alpha=0.7)

  ax.text(0.012, 24, r"$T$ = 12,000 K", color="0.7")
  ax.text(0.012, 9.5, r"$T$ = 12,000 K", color="0.7", alpha=0.7, zorder=-200)

  ax.text(0.007, 13.5, r"$T$ = 10,000 K", color="0.7")

  ax.set(
      xscale="log",
      yscale="log",
      xlim=[0.004, 0.03],
      ylim=[6.0, 50.0],
      xlabel="[O III] 4363 / 5007",
      ylabel=r"[O III] 5007 / H$\beta$",
  )
  #ax.yaxis.set_major_formatter()
  sns.despine()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:roiii-vs-rtoiii.pdf]]

**** Ionization balance for H
+ Stellar luminosity in H-ionizing photons is 4.9e47 s^-1
+ Observed H\beta flux is F = L(H\beta) / 4\pi D^2
+ Where L(H\beta) = VEM E(H\beta) \alpha_H\beta
+ Volume emission measure, VEM = \int n^2 d^3 x = L(H\beta) /  E(H\beta) \alpha_H\beta
+ Total recombination rate = \alpha_B VEM
  + Or should that be \alpha_A in this case?
  + Since we are optically thin to diffuse Lyman continuum
  + But we are still optically thick to the Lyman lines
+ Recombs = (\alpha_A / \alpha_H\beta) F(H\beta) 4\pi D^2 / E(H\beta)
+ F(H\beta) = 1.1e-10 erg/cm2/s,  E(H\beta) = 4.085e-12 erg
+ => Q(H\beta) = F(H\beta) 4\pi D^2 / E(H\beta) = 1.289e+46 s^-1
+ From Osterbrock,
  + Case A: (\alpha_A / \alpha_H\beta,A) = (4.18e-13/2.04e-14) = 20.49
  + Case B: (\alpha_B / \alpha_H\beta,B) = (2.59e-13/3.03e-14) = 8.548
  + Case A for continuum but Case B for Lyman \gamma: (\alpha_A / \alpha_H\beta,B) = (4.18e-13/3.03e-14) = 13.8
  + The last case is probably the most realistic
+ Hence, recombination rate is 13.8 1.289e+46 = 1.779e+47 s^-1, which is 36% of ionizing photon luminosity
  + *Conclusion:* nebula is matter-bounded, but only just
    + Optical depth to ionizing photons is -ln(1 - Recs/Q) = 0.45
  + Stellar ionizing luminosity increases with time
  + Also, general homologous expansion means that recomb rate \propto M^2 / R^3, so that falls with time
  + On the other hand, the inner shells (44% of recombinations) are accumulating mass, which causes an increase in recombinations with time
  + Even if the last two cancel out, the nebula was probably ionization-bounded in the past
    + But how recently?
    + Time-scale to ionize the halo:
      + R-type ionization front has propagation speed u = F/n
      + Timescale = R/u = 4 \pi n R^3 / Q(H)
      + This is better expressed in terms of mass: M = 4 \pi n R^3 m / 3
      + So t_ion = 3 M / m Q(H)
      + So taking M = 0.1 Msun for the total halo => t = 6 years!
      + This is only 10x longer than the light travel time
**** Ionization balance for He
+ We can repeat exactly the same reasoning for He II 4686 line
  + Although we are ignoring complications, such as ionization of H0 by He recombinations
  + Would this make much difference?  Maybe not, since nebula is matter-bounded
+ Taking average of Pottasch:2009a, Tylenda:1984a, Phillips:1996a, Delgado-Inglada:2009a gives 4686/4863 = (2.28 +/- 0.28) / 100
+ Note that 4686 is 4-3 transition, which is like Paschen \alpha, but they are called Fowler lines
+ The line we measure (6560.10) is 6-4, which is like Brackett \beta, but they are called Pickering
  + According to Tab 4.5 of AGN^2 we have 6560/4686 = 0.135 with very little dependence on (n, T) (\pm 0.002)
  + This implies that 6560/6563 = (6560/4686) (4686/4863) (4863/6563) = 0.135 0.0228 / 2.84 = 0.00108
  + [ ] It would be interesting to make a map of this ratio, since it would tell us the He^++/H^+ ratio
+ Hence F(4686) = 0.0228 1.1e-10 = 2.508e-12 erg/s/cm^2
+ E(4686) = 4.239e-12 erg
+ From Tab 2.7 of AGN^2 we can use the Z-scaling for hydrogenic recombination to write \alpha_B(He+, T=10,000 K) = 2 \alpha_B(H0, T=2500 K)
  + \alpha_B,He+ = 2 7.72e-13 = 1.544e-12
+ (\alpha_B,He+ / \alpha_4686) = 1.544e-12 / 3.53e-13 = 4.37
+ He recombs = (\alpha_B,He+ / \alpha_4686) F(4686) 4\pi D^2 / E(4686) = 1.237e+45 s^-1
  + This is *larger* than the predicted stellar luminosity of 4.78e+44
  + Note that the uncertainty in the distance does not affect this, since both Q(He II) and L(4686) are proportional to D^2
  + This discrepancy is not unexpected because the He II model predictions are not very reliable.  Here is a quote from Krticka:2020a:
    : However, even global models are not able to predict He II ionizing flux reliably because there are even significant differences in predicting the He II ionizing flux between individual global models (Puls et al. 2005).
  + If we used the TLUSTY results instead, we would have got q(He II) = 22.63 => Q(He II) = 6.75e44, which is larger but still not large enough
  + Also, we could account for the n=2 He recomb continuum that gets absorbed by H0, although very little of that will be absorbed in the He^++ zone
  + Another possibility is that there is a double-degenerate binary, where the other star is smaller and hotter, so that it has the same Q(He II) but negligible contribution to the FUV spectrum
    + E.g., if we take T = 110,000 K, then q(He II) = 24.7, so 165 times larger, so radius could be 12.8 times smaller
    + This means that the bolometric luminosity of the hot component would be (110/75)**4 / 165 = 0.028 of the primary, or only 3%
    + So it would make a negligible contribution to the FUV spectrum - its luminosity would be 200 Lsun, so like the Helix, or Ring, or Owl. Probably an age of 10,000 years - but could be longer if it were lower mass. (But if it were lower mass, why did it evolve first?!)
**** Pressure balance in the shells
+ Ram pressure on inside of inner shells
  + Inner radius of He II shell is about 3 arcsec, or 0.03 pc = 9.257e+16 cm
  + Mdot = 9.12e-09 Msun/yr
  + V = 2150 km/s
  + Pram = Mdot V / 4 pi R^2 = 9.12e-09 1.989e33 2150 1.0e5/ 3.15576e7 4 pi 9.257e+16**2 = 1.148e-09 dyne/cm^2
+ Thermal pressure of inner shell:
  + P = 2 n k T
  + with n = 4000 pcc, T = 1e4 K
  + P = 1.105e-08 dyne/cm^2
  + This is 10x larger than ram pressure, indicating that shell is not momentum-driven
+ Thermal pressure of hot bubble
  + E = 0.5 Mdot V^2 t / (4 pi / 3) R^3 = (Mdot V / 4 pi R^2) (1.5 V t / R) = 1.5 (t / t_d) Pram 
  + P = 0.4 E = 0.6 (t / t_d) Pram
  + t_d = 9.257e+16 cm / 2150 1.0e5 cm/s = 4.306e+08 s = 13.6 years
  + So if t = 1500 years, then P = 66.18 P_ram
  + This would be smaller if the wind was weaker in the past
+ [ ] Wind luminosity versus time
  + Krticka:2020a give fit to Mdot(L, Z, Teff)
  + We can use this with the Miller-Bertolami tracks to get wind luminosity versus time
**** Combine images and remove CRs
***** First, find what files we have
#+begin_src python :results output verbatim
  from astropy.io import fits
  from pathlib import Path
    datadir = Path("~/Dropbox/Papers/LL-Objects/NGC6210/HST").expanduser()
    fitsfiles = tuple(datadir.glob("*_drz.fits"))
    for fitsfile in fitsfiles:
        hdulist = fits.open(fitsfile)
        hdulist.info()
#+end_src

#+RESULTS:
#+begin_example
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b010cm_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060er_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0609r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0505r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060hr_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011002m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     357   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0102m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0604r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0508r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0109m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0503r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1514, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1514, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1514, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060cr_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0602r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0104m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u8s10403m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     359   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011004m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     357   ()      
  1  SCI           1 ImageHDU       121   (1516, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1516, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1516, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060dr_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b010bm_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1496)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1496)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1496)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0504r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0608r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011003m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     356   ()      
  1  SCI           1 ImageHDU       121   (1516, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1516, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1516, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u39h0702t_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0103m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0502r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1514, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1514, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1514, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0108m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0605m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b010dm_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060br_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0105m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0603r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011005m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     358   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u8s10402m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     358   ()      
  1  SCI           1 ImageHDU       121   (1514, 1493)   float32   
  2  WHT           1 ImageHDU       133   (1514, 1493)   float32   
  3  CTX           1 ImageHDU       132   (1514, 1493)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0507r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b010am_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1496)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1496)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1496)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060gr_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0606r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u39h0701t_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060ar_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0501r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1514, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1514, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1514, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u8s10401m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     358   ()      
  1  SCI           1 ImageHDU       121   (1514, 1493)   float32   
  2  WHT           1 ImageHDU       133   (1514, 1493)   float32   
  3  CTX           1 ImageHDU       132   (1514, 1493)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011006m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     358   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0106m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u66b0506r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js060fr_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     354   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0607r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0101m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011001m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     359   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u39h0701-2t_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     431   (1515, 1495)   float32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/ua011007m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     358   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b0107m_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     353   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
Filename: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u4js0601r_drz.fits
No.    Name      Ver    Type      Cards   Dimensions   Format
  0  PRIMARY       1 PrimaryHDU     355   ()      
  1  SCI           1 ImageHDU       121   (1515, 1495)   float32   
  2  WHT           1 ImageHDU       133   (1515, 1495)   float32   
  3  CTX           1 ImageHDU       132   (1515, 1495)   int32   
#+end_example


***** Next, make table of important parameters

#+begin_src python :return table
  from astropy.io import fits
  from pathlib import Path

  datadir = Path("~/Dropbox/Papers/LL-Objects/NGC6210/HST").expanduser()
  fitsfiles = tuple(datadir.glob("*_drz.fits"))
  table = [
      [
          "Name",
          "Date",
          "Photmode",
          "Exposure",
      ],
      None,
  ]
  for fitsfile in fitsfiles:
      hdulist = fits.open(fitsfile)
      try:
          h = hdulist[0].header
          hi = hdulist["SCI"].header
          data = [
              h["ROOTNAME"],
              f'{h["DATE-OBS"]} {h["TIME-OBS"]}',
              hi["PHOTMODE"],
              h["EXPTIME"],
          ]
          table.append(data)
      except:
          pass
#+end_src

#+RESULTS:
| Name      | Date                | Photmode                 | Exposure |
|-----------+---------------------+--------------------------+----------|
| u37b010cm | 1997-08-06 09:58:13 | WFPC2,1,A2D7,F375N,,CAL  |    260.0 |
| u4js060er | 1998-06-30 13:41:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js0609r | 1998-06-30 13:29:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| u66b0505r | 2000-06-24 18:49:14 | WFPC2,1,A2D7,F658N,,CAL  |    300.0 |
| u4js060hr | 1998-06-30 13:47:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| ua011002m | 2008-01-18 03:30:17 | WFPC2,1,A2D7,F502N,,CAL  |    160.0 |
| u37b0102m | 1997-08-06 08:04:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
| u4js0604r | 1998-06-30 13:16:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
| u66b0508r | 2000-06-24 19:55:14 | WFPC2,1,A2D7,F555W,,CAL  |     40.0 |
| u37b0109m | 1997-08-06 09:44:13 | WFPC2,1,A2D7,F547M,,CAL  |    160.0 |
| u66b0503r | 2000-06-24 18:32:14 | WFPC2,1,A2D7,F502N,,CAL  |    300.0 |
| u4js060cr | 1998-06-30 13:36:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
| u4js0602r | 1998-06-30 13:10:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |
| u37b0104m | 1997-08-06 09:22:13 | WFPC2,1,A2D7,F487N,,CAL  |    160.0 |
| u8s10403m | 2004-03-02 18:20:15 | WFPC2,1,A2D7,F547M,,CAL  |     60.0 |
| ua011004m | 2008-01-18 03:37:17 | WFPC2,1,A2D7,F656N,,CAL  |    100.0 |
| u4js060dr | 1998-06-30 13:39:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u37b010bm | 1997-08-06 09:53:13 | WFPC2,1,A2D15,F656N,,CAL |    160.0 |
| u66b0504r | 2000-06-24 18:42:14 | WFPC2,1,A2D7,F658N,,CAL  |    300.0 |
| u4js0608r | 1998-06-30 13:26:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| ua011003m | 2008-01-18 03:35:17 | WFPC2,1,A2D7,F656N,,CAL  |     40.0 |
| u39h0702t | 1996-07-02 03:06:16 | WFPC2,1,A2D7,F658N,,CAL  |    200.0 |
| u37b0103m | 1997-08-06 08:19:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
| u66b0502r | 2000-06-24 18:27:14 | WFPC2,1,A2D7,F502N,,CAL  |    200.0 |
| u37b0108m | 1997-08-06 09:40:13 | WFPC2,1,A2D7,F547M,,CAL  |    160.0 |
| u4js0605m | 1998-06-30 13:18:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
| u37b010dm | 1997-08-06 10:04:13 | WFPC2,1,A2D7,F375N,,CAL  |    200.0 |
| u4js060br | 1998-06-30 13:34:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
| u37b0105m | 1997-08-06 09:26:13 | WFPC2,1,A2D7,F487N,,CAL  |    160.0 |
| u4js0603r | 1998-06-30 13:13:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |
| ua011005m | 2008-01-18 03:43:17 | WFPC2,1,A2D7,F658N,,CAL  |    400.0 |
| u8s10402m | 2004-03-02 18:11:15 | WFPC2,1,A2D7,F185W,,CAL  |    300.0 |
| u66b0507r | 2000-06-24 19:53:14 | WFPC2,1,A2D7,F555W,,CAL  |     40.0 |
| u37b010am | 1997-08-06 09:49:13 | WFPC2,1,A2D15,F656N,,CAL |    160.0 |
| u4js060gr | 1998-06-30 13:45:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js0606r | 1998-06-30 13:20:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
| u39h0701t | 1996-07-02 02:57:16 | WFPC2,1,A2D7,F658N,,CAL  |    400.0 |
| u4js060ar | 1998-06-30 13:32:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
| u66b0501r | 2000-06-24 18:22:14 | WFPC2,1,A2D7,F502N,,CAL  |    200.0 |
| u8s10401m | 2004-03-02 18:03:15 | WFPC2,1,A2D7,F185W,,CAL  |    300.0 |
| ua011006m | 2008-01-18 03:52:17 | WFPC2,1,A2D7,F658N,,CAL  |    400.0 |
| u37b0106m | 1997-08-06 09:31:13 | WFPC2,1,A2D15,F502N,,CAL |    160.0 |
| u66b0506r | 2000-06-24 18:56:14 | WFPC2,1,A2D7,F658N,,CAL  |    200.0 |
| u4js060fr | 1998-06-30 13:43:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js0607r | 1998-06-30 13:23:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| u37b0101m | 1997-08-06 07:49:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
| ua011001m | 2008-01-18 03:27:17 | WFPC2,1,A2D7,F502N,,CAL  |    100.0 |
| ua011007m | 2008-01-18 04:58:17 | WFPC2,1,A2D7,F658N,,CAL  |    400.0 |
| u37b0107m | 1997-08-06 09:35:13 | WFPC2,1,A2D15,F502N,,CAL |    160.0 |
| u4js0601r | 1998-06-30 13:07:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |

***** Organize the exposures

****** 1996-07-02
| Name      | Date                | Photmode                | Exposure |
|-----------+---------------------+-------------------------+----------|
| u39h0701t | 1996-07-02 02:57:16 | WFPC2,1,A2D7,F658N,,CAL |    400.0 |
| u39h0702t | 1996-07-02 03:06:16 | WFPC2,1,A2D7,F658N,,CAL |    200.0 |

****** 1997-08-06
| Name      | Date                | Photmode                 | Exposure |
|-----------+---------------------+--------------------------+----------|
| u37b0101m | 1997-08-06 07:49:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
| u37b0102m | 1997-08-06 08:04:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
| u37b0103m | 1997-08-06 08:19:13 | WFPC2,1,A2D7,F437N,,CAL  |    800.0 |
|-----------+---------------------+--------------------------+----------|
| u37b0104m | 1997-08-06 09:22:13 | WFPC2,1,A2D7,F487N,,CAL  |    160.0 |
| u37b0105m | 1997-08-06 09:26:13 | WFPC2,1,A2D7,F487N,,CAL  |    160.0 |
|-----------+---------------------+--------------------------+----------|
| u37b0106m | 1997-08-06 09:31:13 | WFPC2,1,A2D15,F502N,,CAL |    160.0 |
| u37b0107m | 1997-08-06 09:35:13 | WFPC2,1,A2D15,F502N,,CAL |    160.0 |
|-----------+---------------------+--------------------------+----------|
| u37b0108m | 1997-08-06 09:40:13 | WFPC2,1,A2D7,F547M,,CAL  |    160.0 |
| u37b0109m | 1997-08-06 09:44:13 | WFPC2,1,A2D7,F547M,,CAL  |    160.0 |
|-----------+---------------------+--------------------------+----------|
| u37b010am | 1997-08-06 09:49:13 | WFPC2,1,A2D15,F656N,,CAL |    160.0 |
| u37b010bm | 1997-08-06 09:53:13 | WFPC2,1,A2D15,F656N,,CAL |    160.0 |
|-----------+---------------------+--------------------------+----------|
| u37b010cm | 1997-08-06 09:58:13 | WFPC2,1,A2D7,F375N,,CAL  |    260.0 |
| u37b010dm | 1997-08-06 10:04:13 | WFPC2,1,A2D7,F375N,,CAL  |    200.0 |

****** 1998-06-30
| Name      | Date                | Photmode                 | Exposure |
|-----------+---------------------+--------------------------+----------|
| u4js0601r | 1998-06-30 13:07:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |
| u4js0602r | 1998-06-30 13:10:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |
| u4js0603r | 1998-06-30 13:13:13 | WFPC2,1,A2D15,F502N,,CAL |    100.0 |
| u4js0604r | 1998-06-30 13:16:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
| u4js0605m | 1998-06-30 13:18:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
| u4js0606r | 1998-06-30 13:20:13 | WFPC2,1,A2D15,F502N,,CAL |     40.0 |
|-----------+---------------------+--------------------------+----------|
| u4js0607r | 1998-06-30 13:23:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| u4js0608r | 1998-06-30 13:26:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| u4js0609r | 1998-06-30 13:29:13 | WFPC2,1,A2D15,F658N,,CAL |    100.0 |
| u4js060ar | 1998-06-30 13:32:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
| u4js060br | 1998-06-30 13:34:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
| u4js060cr | 1998-06-30 13:36:13 | WFPC2,1,A2D15,F658N,,CAL |     40.0 |
|-----------+---------------------+--------------------------+----------|
| u4js060dr | 1998-06-30 13:39:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js060er | 1998-06-30 13:41:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js060fr | 1998-06-30 13:43:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js060gr | 1998-06-30 13:45:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |
| u4js060hr | 1998-06-30 13:47:13 | WFPC2,1,A2D15,F555W,,CAL |     40.0 |

****** 2000-06-24
| Name      | Date                | Photmode                | Exposure |
|-----------+---------------------+-------------------------+----------|
| u66b0501r | 2000-06-24 18:22:14 | WFPC2,1,A2D7,F502N,,CAL |    200.0 |
| u66b0502r | 2000-06-24 18:27:14 | WFPC2,1,A2D7,F502N,,CAL |    200.0 |
| u66b0503r | 2000-06-24 18:32:14 | WFPC2,1,A2D7,F502N,,CAL |    300.0 |
|-----------+---------------------+-------------------------+----------|
| u66b0504r | 2000-06-24 18:42:14 | WFPC2,1,A2D7,F658N,,CAL |    300.0 |
| u66b0505r | 2000-06-24 18:49:14 | WFPC2,1,A2D7,F658N,,CAL |    300.0 |
| u66b0506r | 2000-06-24 18:56:14 | WFPC2,1,A2D7,F658N,,CAL |    200.0 |
|-----------+---------------------+-------------------------+----------|
| u66b0507r | 2000-06-24 19:53:14 | WFPC2,1,A2D7,F555W,,CAL |     40.0 |
| u66b0508r | 2000-06-24 19:55:14 | WFPC2,1,A2D7,F555W,,CAL |     40.0 |

****** 2004-03-02
| Name      | Date                | Photmode                | Exposure |
|-----------+---------------------+-------------------------+----------|
| u8s10401m | 2004-03-02 18:03:15 | WFPC2,1,A2D7,F185W,,CAL |    300.0 |
| u8s10402m | 2004-03-02 18:11:15 | WFPC2,1,A2D7,F185W,,CAL |    300.0 |
|-----------+---------------------+-------------------------+----------|
| u8s10403m | 2004-03-02 18:20:15 | WFPC2,1,A2D7,F547M,,CAL |     60.0 |

****** 2008-01-18
| Name      | Date                | Photmode                | Exposure |
|-----------+---------------------+-------------------------+----------|
| ua011001m | 2008-01-18 03:27:17 | WFPC2,1,A2D7,F502N,,CAL |    100.0 |
| ua011002m | 2008-01-18 03:30:17 | WFPC2,1,A2D7,F502N,,CAL |    160.0 |
|-----------+---------------------+-------------------------+----------|
| ua011003m | 2008-01-18 03:35:17 | WFPC2,1,A2D7,F656N,,CAL |     40.0 |
| ua011004m | 2008-01-18 03:37:17 | WFPC2,1,A2D7,F656N,,CAL |    100.0 |
|-----------+---------------------+-------------------------+----------|
| ua011005m | 2008-01-18 03:43:17 | WFPC2,1,A2D7,F658N,,CAL |    400.0 |
| ua011006m | 2008-01-18 03:52:17 | WFPC2,1,A2D7,F658N,,CAL |    400.0 |
| ua011007m | 2008-01-18 04:58:17 | WFPC2,1,A2D7,F658N,,CAL |    400.0 |


***** Try to remove CRs
+ With three images, we can take the median
  + 2008 [N II] - N = 3
  + 2000 [N II] - N = 3
  + 2000 [O III] - N = 3
  + 1998 [N II] - N = 6
  + 1998 [O III] - N = 6
  + 1998 F555W - N = 6
  + 1997 F437N [O III] 4363 - N = 3
+ With two images, we could take the minimum?
  + Otherwise would have to use something like spotless or scrappy
  + 2004 F185W - C III + cont - N = 2
  + 1997 F375N - [O II] - N = 2
  + 1997 F656N - H alpha

#+begin_src python :eval no :tangle ../scripts/hst-cr-combine.py
  import sys
  import numpy as np
  from astropy.io import fits
  from pathlib import Path

  datadir = Path("~/Dropbox/Papers/LL-Objects/NGC6210/HST").expanduser()
  fitsfiles = tuple(datadir.glob("*_drz.fits"))

  try:
      FILTER, YEAR = sys.argv[1], sys.argv[2]
  except:
      sys.exit(f"Usage: {sys.argv[0]} FILTER YEAR")

  # Find all observations that are for the requested filter and year
  obslist = []
  for fitsfile in fitsfiles:
      hdulist = fits.open(fitsfile)
      try:
          h = hdulist[0].header
          hi = hdulist["SCI"].header
          if FILTER in hi["PHOTMODE"] and h["DATE-OBS"].startswith(YEAR):
             obslist.append(hdulist) 
      except:
          pass

  print(f"Found {len(obslist)} files with FILTER={FILTER} YEAR={YEAR}")

  outfile = f"turtle-{FILTER}-{YEAR}.fits"
  outdir = Path("../data/hst-cr-combine")


  data = None
  THRESH = 1.5
  # supposedly already in counts/s
  image_stack = np.stack(
      # [_["SCI"].data/float(_[0].header["EXPTIME"]) for _ in obslist]
      [_["SCI"].data for _ in obslist]
  )
  times = np.array([float(_[0].header["EXPTIME"]) for _ in obslist])
  times = times[:, None, None] * np.ones_like(image_stack)
  if len(obslist) >= 3:
      # Easy case - median masking for CRs
      median_image = np.median(image_stack, axis=0, keepdims=True)
      cr_mask = (image_stack > 0.0) & (image_stack > THRESH*median_image)
      times[cr_mask] = 0.0
      image = np.average(image_stack, axis=0, weights=times)
  else:
      # Only two images - take the minimum and hope!
      image = np.nanmin(image_stack, axis=0)

  obslist[0]["SCI"].data = image
  obslist[0].writeto(outdir / outfile, overwrite=True)
#+end_src

#+begin_src sh
python ../scripts/hst-cr-combine.py F502N 1998
#+end_src

#+RESULTS:
: Found 6 files with FILTER=F502N YEAR=1998

#+begin_src sh
python ../scripts/hst-cr-combine.py F658N 1998
#+end_src

#+RESULTS:
: Found 6 files with FILTER=F658N YEAR=1998

#+begin_src sh
python ../scripts/hst-cr-combine.py F437N 1997
#+end_src

#+RESULTS:
: Found 3 files with FILTER=F437N YEAR=1997

#+begin_src sh
python ../scripts/hst-cr-combine.py F555W 1998
#+end_src

#+RESULTS:
: Found 5 files with FILTER=F555W YEAR=1998

#+begin_src sh
python ../scripts/hst-cr-combine.py F656N 1997
#+end_src

#+RESULTS:
: Found 2 files with FILTER=F656N YEAR=1997

#+begin_src sh
python ../scripts/hst-cr-combine.py F375N 1997
#+end_src
v
#+RESULTS:
: Found 2 files with FILTER=F375N YEAR=1997

#+begin_src sh
python ../scripts/hst-cr-combine.py F185W 2004
#+end_src

#+RESULTS:
: Found 2 files with FILTER=F185W YEAR=2004

#+begin_src sh
python ../scripts/hst-cr-combine.py F487N 1997
#+end_src

#+RESULTS:
: Found 2 files with FILTER=F487N YEAR=1997

#+begin_src sh
python ../scripts/hst-cr-combine.py F502N 1997
#+end_src

#+RESULTS:
: Found 2 files with FILTER=F502N YEAR=1997

#+begin_src sh
python ../scripts/hst-cr-combine.py F547M 1997
#+end_src

#+RESULTS:
: Found 2 files with FILTER=F547M YEAR=1997

***** Emission line fluxes
+ To correct for atomic continuum, we can use the results for Saturn nebula from Rubin:2002
+ That gives Ha, Hb, and the two [O III] lines
  + Where 4363 is corrected for H gamma as well as continuum
+ Unfortunately, they don't do [N II] from f658n, but we can get that from O'Dell & Doi (ODell:1999a)
**** Ratio images
***** DONE Alignment of individual images
CLOSED: [2020-04-19 Sun 20:28]
+ Use the central star
+ Use auto-centroid feature of DS9 regions
  + Parameters: iterations=100, radius=2
+ Note entirely repeatable, so need to average over a few tries
  + Use this [[id:CCD7AFF0-BFA3-4C29-87F2-2E43FE470F02][script]] to get the coords from DS9
+ F656N-1997
  |               x |               y |
  |-----------------+-----------------|
  |       385.30111 |       385.61402 |
  |       385.62125 |       385.53761 |
  |       385.59211 |       385.45621 |
  |       385.48541 |       385.25522 |
  |       385.36123 |       385.44643 |
  |-----------------+-----------------|
  | 385.47 +/- 0.06 | 385.46 +/- 0.06 |
  #+TBLFM: @7$1..@7$2=vmeane(@I..@II);f2
+ F658N-1998 - this one has a bit more variation
  |               x |               y |
  |-----------------+-----------------|
  |       924.41408 |       895.99711 |
  |       925.10859 |       895.43239 |
  |       924.51009 |       895.29264 |
  |       924.61649 |       895.38887 |
  |       924.60215 |         895.991 |
  |       924.88464 |       895.18547 |
  |       925.13396 |       895.76236 |
  |-----------------+-----------------|
  | 924.75 +/- 0.11 | 895.58 +/- 0.13 |
  #+TBLFM: @9$1..@9$2=vmeane(@I..@II);f2
+ F502N-1997 - very good precision on this one
  |               x |               y |
  |-----------------+-----------------|
  |        385.4094 |       385.56198 |
  |       385.29831 |       385.49116 |
  |       385.31258 |       385.35069 |
  |       385.33187 |       385.52835 |
  |       385.23617 |       385.39349 |
  |       385.40693 |       385.50351 |
  |        385.3669 |       385.40962 |
  |-----------------+-----------------|
  | 385.34 +/- 0.02 | 385.46 +/- 0.03 |
  #+TBLFM: @9$1..@9$2=vmeane(@I..@II);f2
+ F487N-1997
  |               x |               y |
  |-----------------+-----------------|
  |       385.52888 |       385.34763 |
  |       385.51526 |       385.33171 |
  |       385.57225 |       385.13733 |
  |       385.24543 |       385.35822 |
  |       385.24678 |       385.66455 |
  |       385.67088 |       385.46378 |
  |       385.56283 |       385.66382 |
  |-----------------+-----------------|
  | 385.48 +/- 0.06 | 385.42 +/- 0.07 |
  #+TBLFM: @9$1..@9$2=vmeane(@I..@II);f2
+ F547M-1997 is saturated - use crossed spikes method - no error estimate
  | 385.0 | 385.1 |
+ F375N-1997
  |               x |               y |
  |-----------------+-----------------|
  |       384.85562 |       384.81427 |
  |       384.86558 |       384.42606 |
  |       385.20188 |       384.77356 |
  |       385.03787 |       384.46952 |
  |       385.24552 |       384.82536 |
  |       384.95943 |       384.79848 |
  |       385.19087 |       384.73964 |
  |-----------------+-----------------|
  | 385.05 +/- 0.06 | 384.69 +/- 0.06 |
  #+TBLFM: @9$1..@9$2=vmeane(@I..@II);f2
+ F437N-1997 also saturated - do the best we can
  | 385.0 | 384.5 |
+ F502N-1998
  |               x |               y |
  |-----------------+-----------------|
  |       924.37568 |       895.54559 |
  |       924.60996 |       895.44372 |
  |       924.34605 |        895.6802 |
  |       924.56385 |       895.61718 |
  |        924.4597 |       895.59542 |
  |        924.2446 |       895.34909 |
  |       924.28903 |       895.36786 |
  |-----------------+-----------------|
  | 924.41 +/- 0.05 | 895.51 +/- 0.05 |
  #+TBLFM: @9$1..@9$2=vmeane(@I..@II);f2
+ F555W-1998 also suffers from saturation
| 925.0 | 896.0 |
+ F185W-2004 has a single saturated pixel - assume that is the star
  | 374.0 | 377.0 |
+ Summary of star pixel positions in the original images
  #+name: hst-star-xy-pixels-and-bg
  | F656N-1997    | 385.47 | 385.46 |   0.0000 |
  | F502N-1997    | 385.24 | 385.26 |   0.0006 |
  | F487N-1997    | 385.18 | 385.22 |  -0.0013 |
  | F547M-1997    |  385.0 |  385.1 |   0.0014 |
  | F375N-1997    | 385.05 | 384.69 |  -0.0011 |
  | F437N-1997-cr |  385.0 |  384.7 | -0.00001 |
  | F658N-1998    | 924.75 | 895.58 |   -0.009 |
  | F502N-1998    | 924.51 | 895.61 |   -0.005 |
  | F555W-1998    |  924.9 | 895.75 |   -0.006 |
  | F185W-2004    |  374.0 |  377.0 |   -0.001 |
+ Now with 4th column that is the BG value (negative in many cases)
  + We subtract this from the images at the same time as doing the re-projection below
  + Note that this may mean subtracting part of the outer halo for [O III] and H lines
  + Change of strategy [2020-04-20 Mon]
    + Set the zero point to be the halo contour that is circular just outside the lobes
+ Changes
  + F487N-1997 : y -0.2 pix, x -0.3 pix
  + F502N-1997 : y -0.2, x -0.1
  + F437N-1997 : y +0.2, x +0.0
  + F502N-1998 : y +0.1 x +0.1
  + F555W-1998 : y -0.25 x -0.1
+ [2020-04-20 Mon 20:15] More tweaks
  + Some of the zero levels are still not right, which becomes obvious when we look at the binned ratios
  + F502N-1998 still has negative values in halo of -0.002
    - change bg value to -0.005
  + F502N-1997 has positive values of 0.002 in the halo
    - change BG to positive value
  + F487N-1997 looks like it has -0.0002 in halo
    - change bg value to -0.0013
  + F656N-1997 has 0.001 in the halo
    - change bg value to zero
  + F547M-1997 has 0.0004 in halo
    - change bg value to 0.0014
  + F555W-1998 has -0.004 in halo
    - change bg value to -0.006
  + F437N-1997 has 0.00005 in halo
    - change bg value to -0.00001


****** Script to get XY position of all regions in active frame
:PROPERTIES:
:ID:       CCD7AFF0-BFA3-4C29-87F2-2E43FE470F02
:END:
  #+begin_src sh :results verbatim
  xpaget ds9 regions -format xy -system image 
  #+end_src

  #+RESULTS:
  : 924.28903 895.36786

***** DONE Re-projection to a common grid
CLOSED: [2020-04-19 Sun 20:28]
+ Reproject all the images to the WCS of F656N-1997
+ Use the star pixel positions from above to align at the sub-pixel level
#+begin_src python :var TAB=hst-star-xy-pixels-and-bg ONLY="F437N-1997-cr"
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from reproject import reproject_interp

  datadir = Path("../data/hst-cr-combine")

  # First image in the table is the reference image, F656N
  filter0, x0, y0, bg0 = TAB[0]
  hdu0 = fits.open(datadir / f"turtle-{filter0}.fits")["SCI"]
  hdu0.data -= bg0
  # Convert to flux units
  hdu0.data *= hdu0.header["PHOTFLAM"]

  w0 = WCS(hdu0.header)
  # RA, DEC components of star according to reference image
  # Pixels are converted from 1-based to 0-based indexing 
  ra0, dec0 = w0.pixel_to_world_values(x0 - 1, y0 - 1)

  # Put all the new files in a sub-folder
  outdir = datadir / "reproject"
  outdir.mkdir(exist_ok=True)

  # Save a copy of the reference image
  hdu0.writeto(
      outdir / f"turtle-{filter0}-reproject.fits",
      overwrite=True,
  )

  # Loop over all the other images
  for filter1, x1, y1, bg1 in TAB[1:]:
      if not filter1 == ONLY:
          # option to skip all but one
          continue
      hdu1 = fits.open(datadir / f"turtle-{filter1}.fits")["SCI"]
      # Simply force the reference pixel to be the star
      hdu1.header["CRPIX1"] = x1
      hdu1.header["CRPIX2"] = y1
      # And use the RA, DEC that we determined from the reference image
      hdu1.header["CRVAL1"] = float(ra0)
      hdu1.header["CRVAL2"] = float(dec0)
      # Note that there is no need to use the WCS machinery here

      hdu1.data -= bg1
      hdu1.data *= hdu1.header["PHOTFLAM"]

      # Now we can safely reproject the image onto the grid of the reference image
      newdata, _ = reproject_interp(hdu1, hdu0.header)
      # Re-use the same header *except* for the WCS part, which needs to
      # come from the reference image
      newheader = hdu1.header.copy()
      newheader.update(w0.to_header())
      fits.PrimaryHDU(header=newheader, data=newdata).writeto(
          outdir / f"turtle-{filter1}-reproject.fits",
          overwrite=True,
      )

#+end_src

#+RESULTS:
: None

***** DONE Taking the ratio of the re-projected images
CLOSED: [2020-04-19 Sun 20:27]
#+name: pairs-for-ratios
| R658-656 | F658N-1998 | F656N-1997 |
| R375-502 | F375N-1997 | F502N-1997 |
| R502-502 | F502N-1998 | F502N-1997 |
| R437-502 | F437N-1997 | F502N-1997 |
| R487-547 | F487N-1997 | F547M-1997 |
| R502-487 | F502N-1997 | F487N-1997 |
| R656-487 | F656N-1997 | F487N-1997 |
| R502-555 | F502N-1998 | F555W-1998 |
| R375-658 | F375N-1997 | F658N-1998 |
| R502-547 | F502N-1997 | F547M-1997 |

#+begin_src python :results silent :var TAB=pairs-for-ratios
  from pathlib import Path
  import numpy as np
  from astropy.io import fits

  datadir = Path("../data/hst-cr-combine/reproject")
  for rname, fname1, fname2 in TAB:
      hdu1 = fits.open(datadir / f"turtle-{fname1}-reproject.fits")["SCI"]
      hdu2 = fits.open(datadir / f"turtle-{fname2}-reproject.fits")["SCI"]
      ratio = hdu1.data / hdu2.data
      fits.PrimaryHDU(header=hdu1.header, data=ratio).writeto(
          datadir / f"turtle-{rname}.fits",
          overwrite=True
      )
#+end_src

***** DONE Notes and adjustments
CLOSED: [2020-04-19 Sun 20:29]
+ [2020-04-18 Sat]
  + In general these are better than the first naive attempts
  + But they could be improved
  + Start with the 1997 ones
    + R656-487 :: F656N-1997  F487N-1997
      - This one first since it includes the H\alpha reference image
      - Small shifts in F487N-1997 fix it
    + R502-487 :: F502N-1997 F487N-1997
      - Also solved with even smaller shifts
    + R375-502 :: F375N-1997 F502N-1997
      - No need to change
    + R437-502 :: F437N-1997  F502N-1997
      - A small shift in y
    + R487-547 :: F487N-1997 F547M-1997
      - no change necessaet
  + Now the 1998 ones
    + R658-656 :: F658N-1998 F656N-1997
      - seems fine
    + R502-502 :: F502N-1998 F502N-1997
      - small shift
      - still a residual at S shell - expansion?
    + R502-555 :: F502N-1998 F555W-1998


***** Flux calibration and correction for cross-contamination between filters
+ First step is to use the ~PHOTFLAM~ keyword to convert count/s in erg/s/cm^2/AA
  + Note that to first order, ~PHOTFLAM~ is inversely proportional to the filter width
  + This is why it is so low for F547M
+ Extra steps are needed for an emission line
  + Correction for transmission at line wavelength versus peak transmission
    + Potentially informed by spectrophotometry (e.g., STIS)
  + Multiplication ~RECTW~ to get line flux: erg/s/cm^2
  + Subtraction of contaminating continuum and lines
+ We need to know the effective (rectangular) width of the filters ~RECTW~
  | Filter |  W_eff |
  |--------+--------|
  | F185W  |  370.7 |
  | F375N  |   30.0 |
  | F437N  |   31.8 |
  | F487N  |   33.9 |
  | F502N  |   35.8 |
  | F547M  | 627.56 |
  | F555W  | 1427.6 |
  | F656N  |   28.3 |
  | F658N  |   39.2 |
+ So, for Hb for example we have:
  + Continuum estimation from Hb itself
    + Continuum flux is 6.53e-4 per \AA times Hb from Rubin:2002a
    + Filter width is 33.9 \AA, so continuum is 0.0221367 Hb
    + Taking into account the efficiency correction below then gives the conversion:
      + Hb (1 + 0.0221367) = 0.969 F487N
      + => Hb = 0.94801 F487N
      + This almost exactly the same as Rubin
  + /Alternative/ continuum estimation from F547M
    + Interpolating on the other values, I get 6.21e-4 Hb per \AA for the continuum in F547M
    + So the F547M continuum needs to be scaled for other filters as follows:
      | F437N | 6.91e-4 | 1.113 |
      | F487N | 6.53e-4 | 1.052 |
      | F502N | 6.45e-4 | 1.039 |
      | F547M | 6.21e-4 | 1.000 |
      | F656N | 5.65e-4 | 0.910 |
      #+TBLFM: $3=$2/6.21e-4;f3
    + Comparing filter widths, W(547M)/W(487N) = 18.51
    + So we predict that the 0.0221367 Hb continuum level should give F547M/F487N = 0.0221367 / 1.052 = 0.02104 if other efficiencies are equal
    + We actually find that F547M/F487N = 0.033, so that suggests 50% line contamination
      + Alternatively, scattered continuum
      + If it is mainly [O III], then 487/547 should go down when 502/487 goes up
      + This does seem to be the case, approximately
    + *Conclusions*: best use theoretical scaling with Hb for the continuum, rather than F547M
+ STIS calibration from Rubin:2002a
  + By comparing STIS and WFPC2, they get overall efficiency correction factors as follows:
    | F487N |  0.969 |
    | F656N | 0.9643 |
    | F437N |  1.089 |
    | F502N |  1.043 |
  + These multiply the observed counts
+ So, the 5007/Hb ratio can be easily calculated by just using the Rubin equations, together with the widths above:
  + 5007/Hb = (1.041/0.9482) (35.8/33.9) (F502N/F487N) = 1.159 (F502N/F487N)
  + Assuming that F502N and F487N are already in F_\lambda units
+ Rubin does the heliocentric correction to estimate the H\gamma contamination of F437N
  + We estimate a topocentric velocity of -55 km/s so H gamma is at 4341.2 \AA (vacuum)
    + This is from [[id:7E76623E-8C5F-4635-A8CA-BA29675E0C02][Test the heliocentric correction machinery]]
  + This gives a transmission of 0.0007 according to the filter curve
  + Whereas the peak transmission is 0.0304 at 4368 \AA
  + Observed [O III] wave is 4364 (1 - 55/3e5) = 4363.2 where transmission is 0.0297
  + So H gamma transmission is 0.02357 times [O III] transmission
  + Intrinsic Hb/Hg ratio is 2.13
  + Observed 4364/5007 is 0.008
  + Observed 5007/Hb is 6
  + So we expect Hg/4364 = Hg/Hb Hb/5007 5007/4364 = 1 / (2.13 6 0.008) = 9.78
  + So we expect that about 20% of F437N signal is in fact Hb
  + But we estimate it using 0.02357 Hb / 2.13 = 0.01107 Hb
+ Atomic continuum emission at 4364 is 6.91e-4 Hb per \AA
  + (basically 1/EW with wavelength dependence)
  + So with W = 31.8 this gives 0.02197 Hb
+ So adding together the H gamma and continuum means a total of 0.03304 Hb
  + But then we need to reduce it slightly due to reddening
  + Note that Rubin got something very similar
    + They got 0.03218 F487N, but they have Hb = 0.9482 F487N, so this is 0.03394
    + Slightly higher than our value because their lines are less blue-shifted
  + The Reddening factor in the H gamma correction is 10**(-0.124 CHB) = 0.9636 if we take a constant CHB = 0.13
  + So our final equation is I4364 = 1.089 F437N - 0.03019 F487N
  + We also have I5008 = 1.041 F502N, W437 = 31.8, W502 = 35.8
  + So 4364/5008 = (31.8 / 35.8) (1.089 F437N - 0.03019 F487N) / (1.041 F502N) = (0.9292 F437N - 0.02576 F487N) / F502N
  + But that is observed ratio - we need to correct that for reddening too between 5007 and 4363
    + With CCM87 reddening with chb=0.13, pyneb gives 1.058 as the extra factor (~RC.getCorr(4363)/RC.getCorr(5007)~)
  + So *Finally* we get the intrinsic 4364/5008 = (0.9831 F437N - 0.02725 F487N) / F502N
+ We can do the same for [N II] contamination of Ha and vice versa
  + All the narrow-band observations were in April, so similar heliocentric correction
    | wav, air | wav, vac | wav(-55 km/s) |  T(656N) |  T(658N) | TT(656N) | TT(658N) |
    |----------+----------+---------------+----------+----------+----------+----------|
    |  6548.04 |  6549.85 |       6548.65 | 4.161e-2 |        0 |   0.3628 |   0.0000 |
    |  6562.80 |  6564.61 |       6563.41 | 1.139e-1 |   5.2e-3 |   0.9930 |   0.0446 |
    |  6583.46 |  6585.28 |       6584.07 |   4.2e-3 | 1.147e-1 |   0.0366 |   0.9845 |
    |----------+----------+---------------+----------+----------+----------+----------|
    |     Peak |          |          0.00 | 1.147e-1 | 1.165e-1 |   1.0000 |   1.0000 |
    #+TBLFM: $3=$2 (1 - 55 $km/$c);f2::$6=$4/@5$4;f4::$7=$5/@5$5;f4
  + So relative contribution of Ha to F658N is 0.04534 (I_6563 / I_6583)
  + And relative contribution of [N II] to F656N is (4.2e-3 + (1/3) 4.161e-2) / 1.139e-1
    + => 0.1586 (I_6583 / I_6563), where the majority comes from the 6548 component (assuming 3:1 doublet ratio)
  + So if R = I_6583 / I_6563
  + Then F656N W656N = I_6563 (1 + C_656N + 0.1586 R) : (A)
  + And F658N W658N =  I_6583 (1 + C_658N / R + 0.04534 / R) : (B)
  + Where C_656N, C_658N are the continuum contributions to each filter per Ha
  + Then if we take (B)/(A) we get
    + (R + C_658N + 0.04534) = r (1 + C_656N + 0.1586 R)
    + where r = (F658N W658N) / (F656N W656N) = 1.385 F658N / F656N using 39.2, 28.3 for the widths
    + => R = [(1 + C_656N) r - (C_658N + 0.04534)] / [1 - 0.1586 r]
  + Observed values of r are [0.04 .. 0.5]
  + C_656N = 28.3 5.65e-4 (Hb/Ha) = 0.00561 if we take Ha/Hb = 2.85
  + C_658N = 39.2 5.65e-4 (Hb/Ha) = 0.00777
  + => R = [1.00561 r - 0.05311] / [1 - 0.1586 r]
  + Table of values:
    |    r |      R |
    |------+--------|
    | 0.05 | -0.003 |
    | 0.10 |  0.048 |
    | 0.20 |  0.153 |
    | 0.50 |  0.488 |
    #+TBLFM: $2=(1.00561 $1 - 0.05311) / (1 - 0.1586 $1) ;f3
  + Note that it goes negative!
    + This is because there is a minimum value of r, when R = 0
    + r_min = (C_658N + 0.04534) / (1 + C_656N) = (0.00777 + 0.04534) / (1 + 0.00561) = 0.05281
    + In this situation, there is only continuum and Ha in the two filters
    + Averaging over a small box, the smallest value we get is 0.030 for the ratio of F_\lambda
    + This is 0.0415 after multiplying by the rectangular widths
    + This means that Ha contribution to F658N  must be less than the 0.0446 of peak transmission that I calculated above
      + Reducing it by 20% is equivalent to about 0.5 \AA in the transmission curve, or 20 km/s
      + This seems well within the margin of error
  + What about ODell:1999a?
    + The Ha-line correction term for S([N II]) is -0.0384 divided by ratio of raw counts F658N/F656N
    + So, I need to undo the ~PHOTFLAM~ multiplication!
      | F658N | 2.057664E-16 |
      | F656N | 2.903543E-16 |
    + So F_\lambda Ratio in F658N/F656N = (2.057664/2.903543) = 0.7087 times Counts/s Ratio
    + So we should multiply Bob's constant by 0.7087 to get it in terms of F_\lambda and then again by 1.385 to get it in terms of F_line (since the peak transmissions are nearly the same, these two factors should approximately cancel out - and they do: 0.9815)
    + This gives 0.03769
    + If we use that in the equation for r_min, we get 0.0452 on an F_line scale, or 0.03264 on an F_\lambda scale
      + We still get observed values a bit smaller than this
  + There is also Ueta:2019a, although they seem to be using air instead of vacuum wavelengths
    + The quadratic programming method is a way of solving the matrix equation while avoiding that measurement errors give negative ratios (for instance)
    + They take the transmission co-efficients as given
    + They get a minimum ratio of 10**-1.477 = 0.03573
  + We will use the values from ODell:1999a
    + Corrected version of equation
      + R = [1.393 658/656 - 0.0452] / [1 - 0.2197 658/656]
      + Note, minimum allowed value of 658/656 is 0.0452/1.393 = 0.03245





***** Multigrids of the HST images
+ I looked at the other two HDUs in the original files (WHT and CTX)
  + Not much use: WHT is roughly constant, except for some bad columns, CTX seems to be the number of the chip PC1, WFC2, etc
+ I can't be bothered to re-download the data so we will just work with what we have
+ Base it on what we did for the slits here: [[id:66ACAB44-11C6-4C73-B066-D03D8C7FAC8D][Multibinning]]
  + But why are we not using the more recent tetrablok version?
  + I will try using that instead


#+BEGIN_SRC sh :results verbatim :dir ../data/hst-cr-combine/reproject
  mdir=/Users/will/Dropbox/dust-wave-case-studies
  files=turtle-F*-reproject.fits
  for f in $files; do
      python $mdir/tetrabloks-map.py $f
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-F185W-2004-reproject-bin001.fits
Saving turtle-F185W-2004-reproject-bin002.fits
Saving turtle-F185W-2004-reproject-bin004.fits
Saving turtle-F185W-2004-reproject-bin008.fits
Saving turtle-F185W-2004-reproject-bin016.fits
Saving turtle-F185W-2004-reproject-bin032.fits
Saving turtle-F375N-1997-reproject-bin001.fits
Saving turtle-F375N-1997-reproject-bin002.fits
Saving turtle-F375N-1997-reproject-bin004.fits
Saving turtle-F375N-1997-reproject-bin008.fits
Saving turtle-F375N-1997-reproject-bin016.fits
Saving turtle-F375N-1997-reproject-bin032.fits
Saving turtle-F437N-1997-cr-reproject-bin001.fits
Saving turtle-F437N-1997-cr-reproject-bin002.fits
Saving turtle-F437N-1997-cr-reproject-bin004.fits
Saving turtle-F437N-1997-cr-reproject-bin008.fits
Saving turtle-F437N-1997-cr-reproject-bin016.fits
Saving turtle-F437N-1997-cr-reproject-bin032.fits
Saving turtle-F437N-1997-reproject-bin001.fits
Saving turtle-F437N-1997-reproject-bin002.fits
Saving turtle-F437N-1997-reproject-bin004.fits
Saving turtle-F437N-1997-reproject-bin008.fits
Saving turtle-F437N-1997-reproject-bin016.fits
Saving turtle-F437N-1997-reproject-bin032.fits
Saving turtle-F487N-1997-reproject-bin001.fits
Saving turtle-F487N-1997-reproject-bin002.fits
Saving turtle-F487N-1997-reproject-bin004.fits
Saving turtle-F487N-1997-reproject-bin008.fits
Saving turtle-F487N-1997-reproject-bin016.fits
Saving turtle-F487N-1997-reproject-bin032.fits
Saving turtle-F502N-1997-reproject-bin001.fits
Saving turtle-F502N-1997-reproject-bin002.fits
Saving turtle-F502N-1997-reproject-bin004.fits
Saving turtle-F502N-1997-reproject-bin008.fits
Saving turtle-F502N-1997-reproject-bin016.fits
Saving turtle-F502N-1997-reproject-bin032.fits
Saving turtle-F502N-1998-reproject-bin001.fits
Saving turtle-F502N-1998-reproject-bin002.fits
Saving turtle-F502N-1998-reproject-bin004.fits
Saving turtle-F502N-1998-reproject-bin008.fits
Saving turtle-F502N-1998-reproject-bin016.fits
Saving turtle-F502N-1998-reproject-bin032.fits
Saving turtle-F547M-1997-reproject-bin001.fits
Saving turtle-F547M-1997-reproject-bin002.fits
Saving turtle-F547M-1997-reproject-bin004.fits
Saving turtle-F547M-1997-reproject-bin008.fits
Saving turtle-F547M-1997-reproject-bin016.fits
Saving turtle-F547M-1997-reproject-bin032.fits
Saving turtle-F555W-1998-reproject-bin001.fits
Saving turtle-F555W-1998-reproject-bin002.fits
Saving turtle-F555W-1998-reproject-bin004.fits
Saving turtle-F555W-1998-reproject-bin008.fits
Saving turtle-F555W-1998-reproject-bin016.fits
Saving turtle-F555W-1998-reproject-bin032.fits
Saving turtle-F656N-1997-reproject-bin001.fits
Saving turtle-F656N-1997-reproject-bin002.fits
Saving turtle-F656N-1997-reproject-bin004.fits
Saving turtle-F656N-1997-reproject-bin008.fits
Saving turtle-F656N-1997-reproject-bin016.fits
Saving turtle-F656N-1997-reproject-bin032.fits
Saving turtle-F658N-1998-reproject-bin001.fits
Saving turtle-F658N-1998-reproject-bin002.fits
Saving turtle-F658N-1998-reproject-bin004.fits
Saving turtle-F658N-1998-reproject-bin008.fits
Saving turtle-F658N-1998-reproject-bin016.fits
Saving turtle-F658N-1998-reproject-bin032.fits
#+end_example


****** Ratios of the binned images
#+begin_src python :results silent :var TAB=pairs-for-ratios
  from pathlib import Path
  import numpy as np
  from astropy.io import fits

  datadir = Path("../data/hst-cr-combine/reproject")
  for rname, fname1, fname2 in TAB:
      for binning in "002", "004", "016":
          hdu1 = fits.open(
              datadir / f"turtle-{fname1}-reproject-bin{binning}.fits"
          )["SCALED"]
          hdu2 = fits.open(
              datadir / f"turtle-{fname2}-reproject-bin{binning}.fits"
          )["SCALED"]
          ratio = hdu1.data / hdu2.data
          fits.PrimaryHDU(header=hdu1.header, data=ratio).writeto(
              datadir / f"turtle-{rname}-bin{binning}.fits",
              overwrite=True
          )
#+end_src


****** Combine multigrid images for ratios
+ This is based on [[file:~/Dropbox/dust-wave-case-studies/tetrabloks-combine-sigori.py]]


#+BEGIN_SRC python :tangle ../scripts/turtle-hst-multibin-combine.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  import regions as rg

  FLUXSCALE = 3e-16               # approx PHOTFLAM for Ha

  datadir = Path("../data/hst-cr-combine/reproject")
  nlist = [1, 2, 4, 8, 16, 32]
  nmax = max(nlist)

  win = rg.read_ds9(datadir / "turtle-viewport.reg")[0]

  # do an outer envelope mask based on H alpha or [N II] 
  fn = datadir / "turtle-F656N-1997-reproject-bin002.fits"
  hdu = fits.open(fn)["SCALED"]
  hamask = hdu.data > 0.008*FLUXSCALE

  fn = datadir / "turtle-F658N-1998-reproject-bin004.fits"
  hdu = fits.open(fn)["SCALED"]
  niimask = hdu.data > 0.02*FLUXSCALE*2/3


  for ratname, bandA, bandB, minA, minB in [
          ["R502-487", "F502N-1997", "F487N-1997", 0.6, 0.6],
          ["R656-487", "F656N-1997", "F487N-1997", 0.6, 1.2],
          ["R437-502", "F437N-1997-cr", "F502N-1997", 0.08, 0.1],
          ["R658-656", "F658N-1998", "F656N-1997", 0.2, 0.1],
          ["R502-502", "F502N-1998", "F502N-1997", 0.6, 0.6],
          ["R375-502", "F375N-1997", "F502N-1997", 0.03, 0.1],
          ["R375-658", "F375N-1997", "F658N-1998", 0.05, 0.2],
          ["R487-547", "F487N-1997", "F547M-1997", 0.5, 0.06],
          ["R502-547", "F502N-1997", "F547M-1997", 0.1, 0.05],
          ["R502-555", "F502N-1998", "F555W-1998", 0.3, 0.1],
  ]:
      outimA, outimB = None, None
      # Correct limits since we have now put in flux units
      minA *= FLUXSCALE
      minB *= FLUXSCALE
    
      for n in reversed(nlist):
          fnA = datadir / f"turtle-{bandA}-reproject-bin{n:03d}.fits"
          fnB = datadir / f"turtle-{bandB}-reproject-bin{n:03d}.fits"


          hduA = fits.open(fnA)["SCALED"]
          hduB = fits.open(fnB)["SCALED"]
          if outimA is None:
              hdr = hduA.header
              outimA = np.empty_like(hduA.data)
              outimB = np.empty_like(hduA.data)

          # Minimum flux requirement
          mask = (n**2 * hduA.data > minA) & (n**2 * hduB.data > minB)
          outimA[mask] = hduA.data[mask]
          outimB[mask] = hduB.data[mask]



      # Cut off the image at the border of the original diamond window
      winmask = win.to_pixel(WCS(hduA.header)).to_mask()
      mask = ~winmask.to_image(hduA.data.shape).astype(bool)
      outimA[mask] = np.nan
      outimB[mask] = np.nan

      # Apply the outer envelope mask
      if "658" in ratname or "375" in ratname:
          # Low-ionization lines use the [N II] mask
          outimA[~niimask] = np.nan
          outimB[~niimask] = np.nan
      else:
          # Others use the Ha mask
          outimA[~hamask] = np.nan
          outimB[~hamask] = np.nan

      ratio = outimA / outimB
      out_fn =  datadir / f"turtle-{ratname}-multibin.fits"
      fits.PrimaryHDU(header=hdr, data=ratio).writeto(out_fn, overwrite=True)
#+END_SRC

#+RESULTS:
: None


#+begin_src sh :dir ../data/hst-cr-combine/reproject
xpaset -p rebinned backup $PWD/line-ratios-multibin.bck
#+end_src

#+RESULTS:

And another version that does a refined 4364/5007 ratio

#+BEGIN_SRC python :tangle ../scripts/turtle-hst-multibin-oiii-ratio.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.convolution import convolve_fft, Gaussian2DKernel
  import regions as rg

  FLUXSCALE = 3e-16               # approx PHOTFLAM for Ha

  datadir = Path("../data/hst-cr-combine/reproject")
  nlist = [1, 2, 4, 8, 16, 32]
  nmax = max(nlist)

  win = rg.read_ds9(datadir / "turtle-viewport.reg")[0]

  # do an outer envelope mask based on H alpha or [N II] 
  fn = datadir / "turtle-F502N-1997-reproject-bin001.fits"
  hdu = fits.open(fn)["SCALED"]
  # Convolve to give a nice smooth boundary
  kernel = Gaussian2DKernel(x_stddev=3)
  hamask = convolve_fft(hdu.data, kernel) > 7e-18

  ratname = "R4363-5007"
  bandA, bandB, bandC = "F437N-1997-cr", "F502N-1997", "F487N-1997"
  minA, minB = 0.05, 0.04
  outimA, outimB = None, None
  # Correct limits since we have now put in flux units
  minA *= FLUXSCALE
  minB *= FLUXSCALE

  for n in reversed(nlist):
      fnA = datadir / f"turtle-{bandA}-reproject-bin{n:03d}.fits"
      fnB = datadir / f"turtle-{bandB}-reproject-bin{n:03d}.fits"
      fnC = datadir / f"turtle-{bandC}-reproject-bin{n:03d}.fits"


      hduA = fits.open(fnA)["SCALED"]
      hduB = fits.open(fnB)["SCALED"]
      hduC = fits.open(fnC)["SCALED"]
      if outimA is None:
          hdr = hduA.header
          outimA = np.empty_like(hduA.data)
          outimB = np.empty_like(hduA.data)
          outimC = np.empty_like(hduA.data)

      # Minimum flux requirement
      mask = (n**2 * hduA.data > minA) & (n**2 * hduB.data > minB)
      outimA[mask] = hduA.data[mask]
      outimB[mask] = hduB.data[mask]
      outimC[mask] = hduC.data[mask]



  # Cut off the image at the border of the original diamond window
  winmask = win.to_pixel(WCS(hduA.header)).to_mask()
  mask = ~winmask.to_image(hduA.data.shape).astype(bool)
  outimA[mask] = np.nan
  outimB[mask] = np.nan
  outimC[mask] = np.nan

  # Apply the outer envelope mask
  # Others use the Ha mask
  outimA[~hamask] = np.nan
  outimB[~hamask] = np.nan
  outimC[~hamask] = np.nan

  # This is the final intrinsic auroral-nebula ratio for [O III] Taking
  # into account reddening (CHB=0.13) and contamination of the F437N
  # filter by H gamma and atomic continuum
  ratio = (0.9831*outimA - 0.02725*outimC)/ outimB
  out_fn =  datadir / f"turtle-{ratname}-multibin.fits"
  fits.PrimaryHDU(header=hdr, data=ratio).writeto(out_fn, overwrite=True)
#+END_SRC

#+RESULTS:
: None

And finally a refined [N II] 6583/H\alpha 6563 ratio 

#+begin_src sh :results verbatim :dir ../data/hst-cr-combine/reproject 
xpaset -p ratios regions save $PWD/turtle-viewport-nii.reg
#+end_src

#+RESULTS:

#+BEGIN_SRC python :tangle ../scripts/turtle-hst-multibin-nii-ratio.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.convolution import convolve_fft, Gaussian2DKernel
  import regions as rg

  FLUXSCALE = 3e-16               # approx PHOTFLAM for Ha

  datadir = Path("../data/hst-cr-combine/reproject")
  nlist = [1, 2, 4, 8, 16, 32]
  nmax = max(nlist)

  win = rg.read_ds9(datadir / "turtle-viewport-nii.reg")[0]

  # do an outer envelope mask based on H alpha or [N II] 
  fn = datadir / "turtle-F658N-1998-reproject-bin001.fits"
  hdu = fits.open(fn)["SCALED"]
  # Convolve to give a nice smooth boundary
  kernel = Gaussian2DKernel(x_stddev=5)
  hamask = convolve_fft(hdu.data, kernel) > 0e-19

  ratname = "R6583-6563"
  bandA, bandB = "F658N-1998", "F656N-1997"
  minA, minB = 0.25, 0.2
  outimA, outimB = None, None
  # Correct limits since we have now put in flux units
  minA *= FLUXSCALE
  minB *= FLUXSCALE

  for n in reversed(nlist):
      fnA = datadir / f"turtle-{bandA}-reproject-bin{n:03d}.fits"
      fnB = datadir / f"turtle-{bandB}-reproject-bin{n:03d}.fits"


      hduA = fits.open(fnA)["SCALED"]
      hduB = fits.open(fnB)["SCALED"]
      if outimA is None:
          hdr = hduA.header
          outimA = np.empty_like(hduA.data)
          outimB = np.empty_like(hduA.data)

      # Minimum flux requirement
      #hduA.data += 1e-19
      mask = (n**2 * hduA.data > minA) & (n**2 * hduB.data > minB)
      outimA[mask] = hduA.data[mask]
      outimB[mask] = hduB.data[mask]



  # Cut off the image at the border of the original diamond window
  winmask = win.to_pixel(WCS(hduA.header)).to_mask()
  mask = ~winmask.to_image(hduA.data.shape).astype(bool)
  outimA[mask] = np.nan
  outimB[mask] = np.nan

  # Apply the outer envelope mask
  # Others use the Ha mask
  outimA[~hamask] = np.nan
  outimB[~hamask] = np.nan

  # This is the final intrinsic auroral-nebula ratio for [O III] Taking
  # into account reddening (CHB=0.13) and contamination of the F437N
  # filter by H gamma and atomic continuum
  r = outimA/outimB
  ratio = (1.393*r - 0.0452)/(1 - 0.2197*r)
  out_fn =  datadir / f"turtle-{ratname}-multibin.fits"
  fits.PrimaryHDU(header=hdr, data=ratio).writeto(out_fn, overwrite=True)
#+END_SRC

#+RESULTS:
: None


***** Look at differences instead of ratios

****** F547M minus F487N
+ *Conclusion* Yes it is likely that [N II] 5755 can explain the excess emission in F547M
+ This is to look and see if there is any excess (non-recombination) continuum anywhere, which might explain some of the F437N signal in the faint parts
+ From comparing contours, it looks like F547M - F487N/29.5 should eliminate most of the atomic continuum
#+begin_src python
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  datadir = Path("../data/hst-cr-combine/reproject")

  hduA = fits.open(datadir / "turtle-F547M-1997-reproject.fits")["SCI"]
  hduB = fits.open(datadir / "turtle-F487N-1997-reproject.fits")["SCI"]
  hduA.data -= hduB.data/31.5
  hduA.writeto(datadir / "diff-F547M-F487N-reproject.fits", overwrite=True)
#+end_src

#+RESULTS:
: None
+ That shows excess emission associated with knot complexes
  + But nothing significant in the IS and lobes (except for N knot)
  + This could be scattered continuum, or could be a line - but the only low-ionization line is [N II] 5755 and that should be very weak
  + The peak contribution is about 10% of the total F547M, which has W = 627.56 \AA
  + That implies an equivalent width of about 60 \AA
  + H\beta has EW = 1500 \AA, so we want a line with intensity I = 100 60 / 1500 = 4.0 on a scale of H\beta = 100
  + [N II] 5755 has I = 0.5 according to Delgado-Inglada:2009a, *but* this is an average over the slit
    + Their average [N II] 6583 / Ha is 23.7 / 345 = 0.069
    + We have it varying from 0.1 \to 0.7 in the knot complexes
    + So it is expected that [N II] 5755 should be 10x brighter relative to H\beta


****** F437N minus F502N 
#+begin_src python
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  datadir = Path("../data/hst-cr-combine/reproject")

  hduA = fits.open(datadir / "turtle-F437N-1997-cr-reproject.fits")["SCI"]
  hduB = fits.open(datadir / "turtle-F502N-1997-reproject.fits")["SCI"]
  hduC = fits.open(datadir / "turtle-F487N-1997-reproject.fits")["SCI"]
  hduA.data = 0.9831*hduA.data - 0.02725*hduC.data - 0.005*hduB.data
  hduA.writeto(datadir / "diff-F437N-F502N-reproject.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

+ Conclusions 
  - There is some indication of excess emission
    - Associated with N(W) Red complex
      - This is only a change from 0.0055 to 0.0065 in the ratio
    - And N peanut shell rim
    - And some outer stuff - ESE intermediate shell, for instance
  - But none of these are very convincing

***** Take profiles through the nebula
+ We can't use the save dialogs since it keeps crashing
+ So use XPA instead

#+begin_src sh :dir ../data/hst-cr-combine/reproject
xpaset -p ratios backup $PWD/oiii-profiles-check.bck
#+end_src

#+begin_src sh :results verbatim :dir ../data/hst-cr-combine/reproject 
xpaset -p ratios regions system wcs
xpaset -p ratios regions save $PWD/F437N-cosmic-rays.reg 
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim :dir ../data/hst-cr-combine 
/Users/will/Dropbox/spotless/spotless --method thresh --threshold 10.0 --include-regions-from-file reproject/F437N-cosmic-rays.reg --verbose --hdu-name SCI turtle-F437N-1997
#+end_src

#+RESULTS:
: Finding bad pixels by the 'thresh' method
: Regions from reproject/F437N-cosmic-rays.reg added to bad pixels
: Number of bad pixels: 3273 (0.145% of total)
: Number of distinct bad pixel objects found: 231
: Number of objects skipped:  53
: Replacement of bad pixels complete

#+begin_src sh :results verbatim :dir ../data/hst-cr-combine/reproject 
xpaset -p ratios regions load $PWD/F437N-cosmic-rays.reg 
#+end_src

#+RESULTS:


***** BPT diagrams and similar
+ [O III]/Hb vs [N II]/Ha
+ [O II]/[N II] vs [N II]/Ha
***** Conclusions from the line ratios
+ [O II]/[N II] is primarily a density indicator for the low-ionization gas
  + Assuming that O^+/O and N^+/N have similar distributions
  + Highest density is in N knot complexes and SE and NW knots
  + Lower density in SE red complex
  + This is in agreement with densities from Ha measurements
+ 4363/5007 shows interesting structure
  + But may be affected by H gamma contamination
  + Inner ring is clearly due to continuum contamination
+ 4861/cont shows drops at knot positions
  + Might indicate dust-scattered continuum
  + Now I suspect that this is contamination by [N II] 5755
+ 5007/4861 has small variations (< 20% in bright nebula)
  + But they are significant
  + Peaks in outer edge of peanut shells
  + Higher near brightness maximum
  + But locally anti-correlated with [N II]/Ha
  + Minima at positions of brightest knots
  + Highest in the intermediate shell
  + 5007/cont is very similar
    + Especially F502N/F547M, but also F502N/F555W
** Log of Mezcal observations by year

| 1998 |  5 | Zedillo  |
| 1999 |  0 | Zedillo  |
| 2000 |  0 | Zedillo  |
| 2001 |  0 | Fox      |
| 2002 |  0 | Fox      |
| 2003 | 10 | Fox      |
| 2004 |  6 | Fox      |
| 2005 |  3 | Fox      |
| 2006 |  0 | Fox      |
| 2007 |  0 | Calderón |
| 2008 |  0 | Calderón |
| 2009 |  0 | Calderón |
| 2010 |  0 | Calderón |
| 2011 |  2 | Calderón |
| 2012 |  0 | Calderón |
| 2013 |  3 | EPN      |
| 2014 |  0 | EPN      |
| 2015 | 11 | EPN      |
| 2016 |  0 | EPN      |
| 2017 |  0 | EPN      |
| 2018 |  0 | EPN      |
| 2019 |  1 | AMLO     |

| Zedillo    |  5 |
| Fox        | 19 |
| Calderón   |  2 |
| Peña Nieto | 14 |
| AMLO       |  1 |
** Proper motions

*** [N II]
+ Make difference and ratio image
+ Multiply 1998 by 1.95 so that the mean brightness is the same
#+begin_src python
  from astropy.io import fits
  h1 = fits.open("../propermotions/nii/n6210n2008sm.fits")[0]
  h2 = fits.open("../propermotions/nii/n6210n1998sm.fits")[0]
  h2.data *= 1.95
  ratio = h1.data/h2.data
  diff = h1.data - h2.data
  h1.data = ratio
  h1.writeto("../propermotions/nii/ratio-2008-1998.fits", overwrite=True)
  h1.data = diff
  h1.writeto("../propermotions/nii/diff-2008-1998.fits", overwrite=True)
  h2.writeto("../propermotions/nii/n6210n-rescaled-1998.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

*** [O III]
#+begin_src python
  from astropy.io import fits
  from reproject import reproject_interp

  h1 = fits.open("../propermotions/oiii/oiii-ago1997-original.fits")['SCI']
  h1.header["CRPIX1"] = 1197.87
  h1.header["CRVAL1"] = 251.1230789
  h1.header["CRPIX2"] = 1160.8
  h1.header["CRVAL2"] = 23.7999977
  h2 = fits.open("../propermotions/oiii/oiii-ene2008-original.fits")['SCI']
  h2.header["CRPIX1"] = 1031.90
  h2.header["CRVAL1"] = 251.1230789
  h2.header["CRPIX2"] = 970.35
  h2.header["CRVAL2"] = 23.7999977

  newdata, _ = reproject_interp(h2, h1.header)
  newdata /= 0.95
  h1.writeto(
      "../propermotions/oiii/oiii-ago1997-correct.fits",
      overwrite=True,
  )
  fits.PrimaryHDU(header=h1.header, data=newdata).writeto(
      "../propermotions/oiii/oiii-ene2008-correct.fits",
      overwrite=True,
  )
#+end_src

#+RESULTS:
: None


Find difference and ratio images

#+begin_src python
  from astropy.io import fits
  h1 = fits.open("../propermotions/oiii/oiii-ago1997-correct.fits")['SCI']
  h2 = fits.open("../propermotions/oiii/oiii-ene2008-correct.fits")['SCI']

  diff = h2.data - h1.data
  ratio = h2.data / h1.data

  h1.data = diff
  h1.writeto("../propermotions/oiii/diff-oiii-2008-1997.fits", overwrite=True)
  h1.data = ratio
  h1.writeto("../propermotions/oiii/ratio-oiii-2008-1997.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

Do some unsharp masking



*** Different techniques for proper motions

**** Broad classes of methods
1. Cross correlation methods
2. Self-similar scaling
   - Looking for minimum in RMS difference
3. X-Y shifts of small areas
   - Also look for minimum in RMS difference
4. More complicated algorithms
   - e.g., FLCT
   - Fisher:2008a


**** Trying out FLCT

+ I do adjustments to the y velocity in order to improve the consistency between the two lines
+ First move so tha region around star has zero velocity
+ Then further adjustments by hand in order to improve the consistency between the two lines and make things more symmetric
  + Add 0.1 pixel/cadence to [O III]
  + Subtract 0.1 pixel/cadence to [N II]
+ So the systematic uncertainty of about +/- 0.15 pix is probably the dominant error



First for [O III]

#+begin_src python :results output
  import sys
  sys.path.append("../../../Source/pyflct")
  import os
  import numpy as np
  import pyflct
  from astropy.io import fits
  from astropy.wcs import WCS

  os.environ["PATH"] = ":".join((os.environ["PATH"], "/Users/will/.local/bin"))

  h1 = fits.open("../propermotions/oiii/oiii-ago1997-correct.fits")['SCI']
  h2 = fits.open("../propermotions/oiii/oiii-ene2008-correct.fits")['SCI']

  xslice, yslice = slice(970, 1430), slice(880, 1440)
  data1 = h1.data[yslice, xslice]
  data2 = h2.data[yslice, xslice]

  vx, vy, vm = pyflct.flct(data1.T, data2.T,
                           deltat=1.0, deltas=1.0, sigma=10.0,
                           thresh=0.1/data1.max(),
  )
  vx[vm==0] = np.nan
  vy[vm==0] = np.nan

  # Position of star
  ra0, dec0 = 251.1230789, 23.7999977
  w = WCS(h1).slice((yslice, xslice))
  j0, i0 = w.world_to_array_index_values(ra0, dec0)
  # Correct for any shift of star
  vx -= vx[i0-3:i0+3, j0-3:j0+3].mean()
  vy -= vy[i0-3:i0+3, j0-3:j0+3].mean()
  # And a final by-hand shift to make things be more symmetric
  vy += 0.2

  newhdr = w.to_header()

  fits.PrimaryHDU(header=newhdr, data=data1).writeto(
      "../propermotions/oiii/oiii-ago1997-win.fits", overwrite=True)
  fits.PrimaryHDU(header=newhdr, data=data2).writeto(
      "../propermotions/oiii/oiii-ene2008-win.fits", overwrite=True)
  fits.PrimaryHDU(header=newhdr, data=vx.T).writeto(
      "../propermotions/oiii/oiii-velx-win.fits", overwrite=True)
  fits.PrimaryHDU(header=newhdr, data=vy.T).writeto(
      "../propermotions/oiii/oiii-vely-win.fits", overwrite=True)
#+end_src

#+RESULTS:
#+begin_example
flct: Version 1.07     Copyright: 2007-2018 University of California
flct: small endian machine; i/o will be byteswapped
flct: infile = testin.dat
flct: outfile = testout.dat
flct: column major order assumed for data arrays
flct: deltat = 1
flct: deltas = 1
flct: sigma = 10
flct: threshold image value for LCT is 0.000498
flct: bias correction not enabled
flct: complex.h is not included
flct: from input file, nx = 460, ny = 560
flct: nominal sliding box size = 40
flct: relative threshold in abs. units = 0.12458
flct: progress  i = 0 out of 559flct: progress  i = 1 out of 559flct: progress  i = 2 out of 559flct: progress  i = 3 out of 559flct: progress  i = 4 out of 559flct: progress  i = 5 out of 559flct: progress  i = 6 out of 559flct: progress  i = 7 out of 559flct: progress  i = 8 out of 559flct: progress  i = 9 out of 559flct: progress  i = 10 out of 559flct: progress  i = 11 out of 559flct: progress  i = 12 out of 559flct: progress  i = 13 out of 559flct: progress  i = 14 out of 559flct: progress  i = 15 out of 559flct: progress  i = 16 out of 559flct: progress  i = 17 out of 559flct: progress  i = 18 out of 559flct: progress  i = 19 out of 559flct: progress  i = 20 out of 559flct: progress  i = 21 out of 559flct: progress  i = 22 out of 559flct: progress  i = 23 out of 559flct: progress  i = 24 out of 559flct: progress  i = 25 out of 559flct: progress  i = 26 out of 559flct: progress  i = 27 out of 559flct: progress  i = 28 out of 559flct: progress  i = 29 out of 559flct: progress  i = 30 out of 559flct: progress  i = 31 out of 559flct: progress  i = 32 out of 559flct: progress  i = 33 out of 559flct: progress  i = 34 out of 559flct: progress  i = 35 out of 559flct: progress  i = 36 out of 559flct: progress  i = 37 out of 559flct: progress  i = 38 out of 559flct: progress  i = 39 out of 559flct: progress  i = 40 out of 559flct: progress  i = 41 out of 559flct: progress  i = 42 out of 559flct: progress  i = 43 out of 559flct: progress  i = 44 out of 559flct: progress  i = 45 out of 559flct: progress  i = 46 out of 559flct: progress  i = 47 out of 559flct: progress  i = 48 out of 559flct: progress  i = 49 out of 559flct: progress  i = 50 out of 559flct: progress  i = 51 out of 559flct: progress  i = 52 out of 559flct: progress  i = 53 out of 559flct: progress  i = 54 out of 559flct: progress  i = 55 out of 559flct: progress  i = 56 out of 559flct: progress  i = 57 out of 559flct: progress  i = 58 out of 559flct: progress  i = 59 out of 559flct: progress  i = 60 out of 559flct: progress  i = 61 out of 559flct: progress  i = 62 out of 559flct: progress  i = 63 out of 559flct: progress  i = 64 out of 559flct: progress  i = 65 out of 559flct: progress  i = 66 out of 559flct: progress  i = 67 out of 559flct: progress  i = 68 out of 559flct: progress  i = 69 out of 559flct: progress  i = 70 out of 559flct: progress  i = 71 out of 559flct: progress  i = 72 out of 559flct: progress  i = 73 out of 559flct: progress  i = 74 out of 559flct: progress  i = 75 out of 559flct: progress  i = 76 out of 559flct: progress  i = 77 out of 559flct: progress  i = 78 out of 559flct: progress  i = 79 out of 559flct: progress  i = 80 out of 559flct: progress  i = 81 out of 559flct: progress  i = 82 out of 559flct: progress  i = 83 out of 559flct: progress  i = 84 out of 559flct: progress  i = 85 out of 559flct: progress  i = 86 out of 559flct: progress  i = 87 out of 559flct: progress  i = 88 out of 559flct: progress  i = 89 out of 559flct: progress  i = 90 out of 559flct: progress  i = 91 out of 559flct: progress  i = 92 out of 559flct: progress  i = 93 out of 559flct: progress  i = 94 out of 559flct: progress  i = 95 out of 559flct: progress  i = 96 out of 559flct: progress  i = 97 out of 559flct: progress  i = 98 out of 559flct: progress  i = 99 out of 559flct: progress  i = 100 out of 559flct: progress  i = 101 out of 559flct: progress  i = 102 out of 559flct: progress  i = 103 out of 559flct: progress  i = 104 out of 559flct: progress  i = 105 out of 559flct: progress  i = 106 out of 559flct: progress  i = 107 out of 559flct: progress  i = 108 out of 559flct: progress  i = 109 out of 559flct: progress  i = 110 out of 559flct: progress  i = 111 out of 559flct: progress  i = 112 out of 559flct: progress  i = 113 out of 559flct: progress  i = 114 out of 559flct: progress  i = 115 out of 559flct: progress  i = 116 out of 559flct: progress  i = 117 out of 559flct: progress  i = 118 out of 559flct: progress  i = 119 out of 559flct: progress  i = 120 out of 559flct: progress  i = 121 out of 559flct: progress  i = 122 out of 559flct: progress  i = 123 out of 559flct: progress  i = 124 out of 559flct: progress  i = 125 out of 559flct: progress  i = 126 out of 559flct: progress  i = 127 out of 559flct: progress  i = 128 out of 559flct: progress  i = 129 out of 559flct: progress  i = 130 out of 559flct: progress  i = 131 out of 559flct: progress  i = 132 out of 559flct: progress  i = 133 out of 559flct: progress  i = 134 out of 559flct: progress  i = 135 out of 559flct: progress  i = 136 out of 559flct: progress  i = 137 out of 559flct: progress  i = 138 out of 559flct: progress  i = 139 out of 559flct: progress  i = 140 out of 559flct: progress  i = 141 out of 559flct: progress  i = 142 out of 559flct: progress  i = 143 out of 559flct: progress  i = 144 out of 559flct: progress  i = 145 out of 559flct: progress  i = 146 out of 559flct: progress  i = 147 out of 559flct: progress  i = 148 out of 559flct: progress  i = 149 out of 559flct: progress  i = 150 out of 559flct: progress  i = 151 out of 559flct: progress  i = 152 out of 559flct: progress  i = 153 out of 559flct: progress  i = 154 out of 559flct: progress  i = 155 out of 559flct: progress  i = 156 out of 559flct: progress  i = 157 out of 559flct: progress  i = 158 out of 559flct: progress  i = 159 out of 559flct: progress  i = 160 out of 559flct: progress  i = 161 out of 559flct: progress  i = 162 out of 559flct: progress  i = 163 out of 559flct: progress  i = 164 out of 559flct: progress  i = 165 out of 559flct: progress  i = 166 out of 559flct: progress  i = 167 out of 559flct: progress  i = 168 out of 559flct: progress  i = 169 out of 559flct: progress  i = 170 out of 559flct: progress  i = 171 out of 559flct: progress  i = 172 out of 559flct: progress  i = 173 out of 559flct: progress  i = 174 out of 559flct: progress  i = 175 out of 559flct: progress  i = 176 out of 559flct: progress  i = 177 out of 559flct: progress  i = 178 out of 559flct: progress  i = 179 out of 559flct: progress  i = 180 out of 559flct: progress  i = 181 out of 559flct: progress  i = 182 out of 559flct: progress  i = 183 out of 559flct: progress  i = 184 out of 559flct: progress  i = 185 out of 559flct: progress  i = 186 out of 559flct: progress  i = 187 out of 559flct: progress  i = 188 out of 559flct: progress  i = 189 out of 559flct: progress  i = 190 out of 559flct: progress  i = 191 out of 559flct: progress  i = 192 out of 559flct: progress  i = 193 out of 559flct: progress  i = 194 out of 559flct: progress  i = 195 out of 559flct: progress  i = 196 out of 559flct: progress  i = 197 out of 559flct: progress  i = 198 out of 559flct: progress  i = 199 out of 559flct: progress  i = 200 out of 559flct: progress  i = 201 out of 559flct: progress  i = 202 out of 559flct: progress  i = 203 out of 559flct: progress  i = 204 out of 559flct: progress  i = 205 out of 559flct: progress  i = 206 out of 559flct: progress  i = 207 out of 559flct: progress  i = 208 out of 559flct: progress  i = 209 out of 559flct: progress  i = 210 out of 559flct: progress  i = 211 out of 559flct: progress  i = 212 out of 559flct: progress  i = 213 out of 559flct: progress  i = 214 out of 559flct: progress  i = 215 out of 559flct: progress  i = 216 out of 559flct: progress  i = 217 out of 559flct: progress  i = 218 out of 559flct: progress  i = 219 out of 559flct: progress  i = 220 out of 559flct: progress  i = 221 out of 559flct: progress  i = 222 out of 559flct: progress  i = 223 out of 559flct: progress  i = 224 out of 559flct: progress  i = 225 out of 559flct: progress  i = 226 out of 559flct: progress  i = 227 out of 559flct: progress  i = 228 out of 559flct: progress  i = 229 out of 559flct: progress  i = 230 out of 559flct: progress  i = 231 out of 559flct: progress  i = 232 out of 559flct: progress  i = 233 out of 559flct: progress  i = 234 out of 559flct: progress  i = 235 out of 559flct: progress  i = 236 out of 559flct: progress  i = 237 out of 559flct: progress  i = 238 out of 559flct: progress  i = 239 out of 559flct: progress  i = 240 out of 559flct: progress  i = 241 out of 559flct: progress  i = 242 out of 559flct: progress  i = 243 out of 559flct: progress  i = 244 out of 559flct: progress  i = 245 out of 559flct: progress  i = 246 out of 559flct: progress  i = 247 out of 559flct: progress  i = 248 out of 559flct: progress  i = 249 out of 559flct: progress  i = 250 out of 559flct: progress  i = 251 out of 559flct: progress  i = 252 out of 559flct: progress  i = 253 out of 559flct: progress  i = 254 out of 559flct: progress  i = 255 out of 559flct: progress  i = 256 out of 559flct: progress  i = 257 out of 559flct: progress  i = 258 out of 559flct: progress  i = 259 out of 559flct: progress  i = 260 out of 559flct: progress  i = 261 out of 559flct: progress  i = 262 out of 559flct: progress  i = 263 out of 559flct: progress  i = 264 out of 559flct: progress  i = 265 out of 559flct: progress  i = 266 out of 559flct: progress  i = 267 out of 559flct: progress  i = 268 out of 559flct: progress  i = 269 out of 559flct: progress  i = 270 out of 559flct: progress  i = 271 out of 559flct: progress  i = 272 out of 559flct: progress  i = 273 out of 559flct: progress  i = 274 out of 559flct: progress  i = 275 out of 559flct: progress  i = 276 out of 559flct: progress  i = 277 out of 559flct: progress  i = 278 out of 559flct: progress  i = 279 out of 559flct: progress  i = 280 out of 559flct: progress  i = 281 out of 559flct: progress  i = 282 out of 559flct: progress  i = 283 out of 559flct: progress  i = 284 out of 559flct: progress  i = 285 out of 559flct: progress  i = 286 out of 559flct: progress  i = 287 out of 559flct: progress  i = 288 out of 559flct: progress  i = 289 out of 559flct: progress  i = 290 out of 559flct: progress  i = 291 out of 559flct: progress  i = 292 out of 559flct: progress  i = 293 out of 559flct: progress  i = 294 out of 559flct: progress  i = 295 out of 559flct: progress  i = 296 out of 559flct: progress  i = 297 out of 559flct: progress  i = 298 out of 559flct: progress  i = 299 out of 559flct: progress  i = 300 out of 559flct: progress  i = 301 out of 559flct: progress  i = 302 out of 559flct: progress  i = 303 out of 559flct: progress  i = 304 out of 559flct: progress  i = 305 out of 559flct: progress  i = 306 out of 559flct: progress  i = 307 out of 559flct: progress  i = 308 out of 559flct: progress  i = 309 out of 559flct: progress  i = 310 out of 559flct: progress  i = 311 out of 559flct: progress  i = 312 out of 559flct: progress  i = 313 out of 559flct: progress  i = 314 out of 559flct: progress  i = 315 out of 559flct: progress  i = 316 out of 559flct: progress  i = 317 out of 559flct: progress  i = 318 out of 559flct: progress  i = 319 out of 559flct: progress  i = 320 out of 559flct: progress  i = 321 out of 559flct: progress  i = 322 out of 559flct: progress  i = 323 out of 559flct: progress  i = 324 out of 559flct: progress  i = 325 out of 559flct: progress  i = 326 out of 559flct: progress  i = 327 out of 559flct: progress  i = 328 out of 559flct: progress  i = 329 out of 559flct: progress  i = 330 out of 559flct: progress  i = 331 out of 559flct: progress  i = 332 out of 559flct: progress  i = 333 out of 559flct: progress  i = 334 out of 559flct: progress  i = 335 out of 559flct: progress  i = 336 out of 559flct: progress  i = 337 out of 559flct: progress  i = 338 out of 559flct: progress  i = 339 out of 559flct: progress  i = 340 out of 559flct: progress  i = 341 out of 559flct: progress  i = 342 out of 559flct: progress  i = 343 out of 559flct: progress  i = 344 out of 559flct: progress  i = 345 out of 559flct: progress  i = 346 out of 559flct: progress  i = 347 out of 559flct: progress  i = 348 out of 559flct: progress  i = 349 out of 559flct: progress  i = 350 out of 559flct: progress  i = 351 out of 559flct: progress  i = 352 out of 559flct: progress  i = 353 out of 559flct: progress  i = 354 out of 559flct: progress  i = 355 out of 559flct: progress  i = 356 out of 559flct: progress  i = 357 out of 559flct: progress  i = 358 out of 559flct: progress  i = 359 out of 559flct: progress  i = 360 out of 559flct: progress  i = 361 out of 559flct: progress  i = 362 out of 559flct: progress  i = 363 out of 559flct: progress  i = 364 out of 559flct: progress  i = 365 out of 559flct: progress  i = 366 out of 559flct: progress  i = 367 out of 559flct: progress  i = 368 out of 559flct: progress  i = 369 out of 559flct: progress  i = 370 out of 559flct: progress  i = 371 out of 559flct: progress  i = 372 out of 559flct: progress  i = 373 out of 559flct: progress  i = 374 out of 559flct: progress  i = 375 out of 559flct: progress  i = 376 out of 559flct: progress  i = 377 out of 559flct: progress  i = 378 out of 559flct: progress  i = 379 out of 559flct: progress  i = 380 out of 559flct: progress  i = 381 out of 559flct: progress  i = 382 out of 559flct: progress  i = 383 out of 559flct: progress  i = 384 out of 559flct: progress  i = 385 out of 559flct: progress  i = 386 out of 559flct: progress  i = 387 out of 559flct: progress  i = 388 out of 559flct: progress  i = 389 out of 559flct: progress  i = 390 out of 559flct: progress  i = 391 out of 559flct: progress  i = 392 out of 559flct: progress  i = 393 out of 559flct: progress  i = 394 out of 559flct: progress  i = 395 out of 559flct: progress  i = 396 out of 559flct: progress  i = 397 out of 559flct: progress  i = 398 out of 559flct: progress  i = 399 out of 559flct: progress  i = 400 out of 559flct: progress  i = 401 out of 559flct: progress  i = 402 out of 559flct: progress  i = 403 out of 559flct: progress  i = 404 out of 559flct: progress  i = 405 out of 559flct: progress  i = 406 out of 559flct: progress  i = 407 out of 559flct: progress  i = 408 out of 559flct: progress  i = 409 out of 559flct: progress  i = 410 out of 559flct: progress  i = 411 out of 559flct: progress  i = 412 out of 559flct: progress  i = 413 out of 559flct: progress  i = 414 out of 559flct: progress  i = 415 out of 559flct: progress  i = 416 out of 559flct: progress  i = 417 out of 559flct: progress  i = 418 out of 559flct: progress  i = 419 out of 559flct: progress  i = 420 out of 559flct: progress  i = 421 out of 559flct: progress  i = 422 out of 559flct: progress  i = 423 out of 559flct: progress  i = 424 out of 559flct: progress  i = 425 out of 559flct: progress  i = 426 out of 559flct: progress  i = 427 out of 559flct: progress  i = 428 out of 559flct: progress  i = 429 out of 559flct: progress  i = 430 out of 559flct: progress  i = 431 out of 559flct: progress  i = 432 out of 559flct: progress  i = 433 out of 559flct: progress  i = 434 out of 559flct: progress  i = 435 out of 559flct: progress  i = 436 out of 559flct: progress  i = 437 out of 559flct: progress  i = 438 out of 559flct: progress  i = 439 out of 559flct: progress  i = 440 out of 559flct: progress  i = 441 out of 559flct: progress  i = 442 out of 559flct: progress  i = 443 out of 559flct: progress  i = 444 out of 559flct: progress  i = 445 out of 559flct: progress  i = 446 out of 559flct: progress  i = 447 out of 559flct: progress  i = 448 out of 559flct: progress  i = 449 out of 559flct: progress  i = 450 out of 559flct: progress  i = 451 out of 559flct: progress  i = 452 out of 559flct: progress  i = 453 out of 559flct: progress  i = 454 out of 559flct: progress  i = 455 out of 559flct: progress  i = 456 out of 559flct: progress  i = 457 out of 559flct: progress  i = 458 out of 559flct: progress  i = 459 out of 559flct: progress  i = 460 out of 559flct: progress  i = 461 out of 559flct: progress  i = 462 out of 559flct: progress  i = 463 out of 559flct: progress  i = 464 out of 559flct: progress  i = 465 out of 559flct: progress  i = 466 out of 559flct: progress  i = 467 out of 559flct: progress  i = 468 out of 559flct: progress  i = 469 out of 559flct: progress  i = 470 out of 559flct: progress  i = 471 out of 559flct: progress  i = 472 out of 559flct: progress  i = 473 out of 559flct: progress  i = 474 out of 559flct: progress  i = 475 out of 559flct: progress  i = 476 out of 559flct: progress  i = 477 out of 559flct: progress  i = 478 out of 559flct: progress  i = 479 out of 559flct: progress  i = 480 out of 559flct: progress  i = 481 out of 559flct: progress  i = 482 out of 559flct: progress  i = 483 out of 559flct: progress  i = 484 out of 559flct: progress  i = 485 out of 559flct: progress  i = 486 out of 559flct: progress  i = 487 out of 559flct: progress  i = 488 out of 559flct: progress  i = 489 out of 559flct: progress  i = 490 out of 559flct: progress  i = 491 out of 559flct: progress  i = 492 out of 559flct: progress  i = 493 out of 559flct: progress  i = 494 out of 559flct: progress  i = 495 out of 559flct: progress  i = 496 out of 559flct: progress  i = 497 out of 559flct: progress  i = 498 out of 559flct: progress  i = 499 out of 559flct: progress  i = 500 out of 559flct: progress  i = 501 out of 559flct: progress  i = 502 out of 559flct: progress  i = 503 out of 559flct: progress  i = 504 out of 559flct: progress  i = 505 out of 559flct: progress  i = 506 out of 559flct: progress  i = 507 out of 559flct: progress  i = 508 out of 559flct: progress  i = 509 out of 559flct: progress  i = 510 out of 559flct: progress  i = 511 out of 559flct: progress  i = 512 out of 559flct: progress  i = 513 out of 559flct: progress  i = 514 out of 559flct: progress  i = 515 out of 559flct: progress  i = 516 out of 559flct: progress  i = 517 out of 559flct: progress  i = 518 out of 559flct: progress  i = 519 out of 559flct: progress  i = 520 out of 559flct: progress  i = 521 out of 559flct: progress  i = 522 out of 559flct: progress  i = 523 out of 559flct: progress  i = 524 out of 559flct: progress  i = 525 out of 559flct: progress  i = 526 out of 559flct: progress  i = 527 out of 559flct: progress  i = 528 out of 559flct: progress  i = 529 out of 559flct: progress  i = 530 out of 559flct: progress  i = 531 out of 559flct: progress  i = 532 out of 559flct: progress  i = 533 out of 559flct: progress  i = 534 out of 559flct: progress  i = 535 out of 559flct: progress  i = 536 out of 559flct: progress  i = 537 out of 559flct: progress  i = 538 out of 559flct: progress  i = 539 out of 559flct: progress  i = 540 out of 559flct: progress  i = 541 out of 559flct: progress  i = 542 out of 559flct: progress  i = 543 out of 559flct: progress  i = 544 out of 559flct: progress  i = 545 out of 559flct: progress  i = 546 out of 559flct: progress  i = 547 out of 559flct: progress  i = 548 out of 559flct: progress  i = 549 out of 559flct: progress  i = 550 out of 559flct: progress  i = 551 out of 559flct: progress  i = 552 out of 559flct: progress  i = 553 out of 559flct: progress  i = 554 out of 559flct: progress  i = 555 out of 559flct: progress  i = 556 out of 559flct: progress  i = 557 out of 559flct: progress  i = 558 out of 559flct: progress  i = 559 out of 559flct: mean value of gamma^2/sigma^2 = 0.251837

flct: finished
#+end_example


Now for [N II]

#+begin_src python :results output
  import sys
  sys.path.append("../../../Source/pyflct")
  import os
  import numpy as np
  import pyflct
  from astropy.io import fits
  from astropy.wcs import WCS

  os.environ["PATH"] = ":".join((os.environ["PATH"], "/Users/will/.local/bin"))

  h1 = fits.open("../propermotions/nii/n6210n-rescaled-1998.fits")[0]
  h2 = fits.open("../propermotions/nii/n6210n2008sm.fits")[0]

  data1 = h1.data
  data2 = h2.data

  vx, vy, vm = pyflct.flct(data1.T, data2.T,
                           deltat=1.0, deltas=1.0, sigma=10.0,
                           thresh=0.03/data1.max(),
  )
  vx[vm==0] = np.nan
  vy[vm==0] = np.nan
  # Position of star
  ra0, dec0 = 251.1230789, 23.7999977
  w = WCS(h1.header)
  j0, i0 = w.world_to_array_index_values(ra0, dec0)
  # Correct for any shift of star 
  # At this point, arrays are still in (x, y) format
  vx -= vx[i0-3:i0+3, j0-3:j0+3].mean()
  vy -= vy[i0-3:i0+3, j0-3:j0+3].mean()
  # And a final by-hand shift to make things be more symmetric
  vy -= 0.1

  newhdr = h1.header

  fits.PrimaryHDU(header=newhdr, data=vx.T).writeto(
      "../propermotions/nii/nii-velx-win.fits", overwrite=True)
  fits.PrimaryHDU(header=newhdr, data=vy.T).writeto(
      "../propermotions/nii/nii-vely-win.fits", overwrite=True)
#+end_src

#+RESULTS:
#+begin_example
flct: Version 1.07     Copyright: 2007-2018 University of California
flct: small endian machine; i/o will be byteswapped
flct: infile = testin.dat
flct: outfile = testout.dat
flct: column major order assumed for data arrays
flct: deltat = 1
flct: deltas = 1
flct: sigma = 10
flct: threshold image value for LCT is 0.005372
flct: bias correction not enabled
flct: complex.h is not included
flct: from input file, nx = 310, ny = 310
flct: nominal sliding box size = 40
flct: relative threshold in abs. units = 0.0299977
flct: progress  i = 0 out of 309flct: progress  i = 1 out of 309flct: progress  i = 2 out of 309flct: progress  i = 3 out of 309flct: progress  i = 4 out of 309flct: progress  i = 5 out of 309flct: progress  i = 6 out of 309flct: progress  i = 7 out of 309flct: progress  i = 8 out of 309flct: progress  i = 9 out of 309flct: progress  i = 10 out of 309flct: progress  i = 11 out of 309flct: progress  i = 12 out of 309flct: progress  i = 13 out of 309flct: progress  i = 14 out of 309flct: progress  i = 15 out of 309flct: progress  i = 16 out of 309flct: progress  i = 17 out of 309flct: progress  i = 18 out of 309flct: progress  i = 19 out of 309flct: progress  i = 20 out of 309flct: progress  i = 21 out of 309flct: progress  i = 22 out of 309flct: progress  i = 23 out of 309flct: progress  i = 24 out of 309flct: progress  i = 25 out of 309flct: progress  i = 26 out of 309flct: progress  i = 27 out of 309flct: progress  i = 28 out of 309flct: progress  i = 29 out of 309flct: progress  i = 30 out of 309flct: progress  i = 31 out of 309flct: progress  i = 32 out of 309flct: progress  i = 33 out of 309flct: progress  i = 34 out of 309flct: progress  i = 35 out of 309flct: progress  i = 36 out of 309flct: progress  i = 37 out of 309flct: progress  i = 38 out of 309flct: progress  i = 39 out of 309flct: progress  i = 40 out of 309flct: progress  i = 41 out of 309flct: progress  i = 42 out of 309flct: progress  i = 43 out of 309flct: progress  i = 44 out of 309flct: progress  i = 45 out of 309flct: progress  i = 46 out of 309flct: progress  i = 47 out of 309flct: progress  i = 48 out of 309flct: progress  i = 49 out of 309flct: progress  i = 50 out of 309flct: progress  i = 51 out of 309flct: progress  i = 52 out of 309flct: progress  i = 53 out of 309flct: progress  i = 54 out of 309flct: progress  i = 55 out of 309flct: progress  i = 56 out of 309flct: progress  i = 57 out of 309flct: progress  i = 58 out of 309flct: progress  i = 59 out of 309flct: progress  i = 60 out of 309flct: progress  i = 61 out of 309flct: progress  i = 62 out of 309flct: progress  i = 63 out of 309flct: progress  i = 64 out of 309flct: progress  i = 65 out of 309flct: progress  i = 66 out of 309flct: progress  i = 67 out of 309flct: progress  i = 68 out of 309flct: progress  i = 69 out of 309flct: progress  i = 70 out of 309flct: progress  i = 71 out of 309flct: progress  i = 72 out of 309flct: progress  i = 73 out of 309flct: progress  i = 74 out of 309flct: progress  i = 75 out of 309flct: progress  i = 76 out of 309flct: progress  i = 77 out of 309flct: progress  i = 78 out of 309flct: progress  i = 79 out of 309flct: progress  i = 80 out of 309flct: progress  i = 81 out of 309flct: progress  i = 82 out of 309flct: progress  i = 83 out of 309flct: progress  i = 84 out of 309flct: progress  i = 85 out of 309flct: progress  i = 86 out of 309flct: progress  i = 87 out of 309flct: progress  i = 88 out of 309flct: progress  i = 89 out of 309flct: progress  i = 90 out of 309flct: progress  i = 91 out of 309flct: progress  i = 92 out of 309flct: progress  i = 93 out of 309flct: progress  i = 94 out of 309flct: progress  i = 95 out of 309flct: progress  i = 96 out of 309flct: progress  i = 97 out of 309flct: progress  i = 98 out of 309flct: progress  i = 99 out of 309flct: progress  i = 100 out of 309flct: progress  i = 101 out of 309flct: progress  i = 102 out of 309flct: progress  i = 103 out of 309flct: progress  i = 104 out of 309flct: progress  i = 105 out of 309flct: progress  i = 106 out of 309flct: progress  i = 107 out of 309flct: progress  i = 108 out of 309flct: progress  i = 109 out of 309flct: progress  i = 110 out of 309flct: progress  i = 111 out of 309flct: progress  i = 112 out of 309flct: progress  i = 113 out of 309flct: progress  i = 114 out of 309flct: progress  i = 115 out of 309flct: progress  i = 116 out of 309flct: progress  i = 117 out of 309flct: progress  i = 118 out of 309flct: progress  i = 119 out of 309flct: progress  i = 120 out of 309flct: progress  i = 121 out of 309flct: progress  i = 122 out of 309flct: progress  i = 123 out of 309flct: progress  i = 124 out of 309flct: progress  i = 125 out of 309flct: progress  i = 126 out of 309flct: progress  i = 127 out of 309flct: progress  i = 128 out of 309flct: progress  i = 129 out of 309flct: progress  i = 130 out of 309flct: progress  i = 131 out of 309flct: progress  i = 132 out of 309flct: progress  i = 133 out of 309flct: progress  i = 134 out of 309flct: progress  i = 135 out of 309flct: progress  i = 136 out of 309flct: progress  i = 137 out of 309flct: progress  i = 138 out of 309flct: progress  i = 139 out of 309flct: progress  i = 140 out of 309flct: progress  i = 141 out of 309flct: progress  i = 142 out of 309flct: progress  i = 143 out of 309flct: progress  i = 144 out of 309flct: progress  i = 145 out of 309flct: progress  i = 146 out of 309flct: progress  i = 147 out of 309flct: progress  i = 148 out of 309flct: progress  i = 149 out of 309flct: progress  i = 150 out of 309flct: progress  i = 151 out of 309flct: progress  i = 152 out of 309flct: progress  i = 153 out of 309flct: progress  i = 154 out of 309flct: progress  i = 155 out of 309flct: progress  i = 156 out of 309flct: progress  i = 157 out of 309flct: progress  i = 158 out of 309flct: progress  i = 159 out of 309flct: progress  i = 160 out of 309flct: progress  i = 161 out of 309flct: progress  i = 162 out of 309flct: progress  i = 163 out of 309flct: progress  i = 164 out of 309flct: progress  i = 165 out of 309flct: progress  i = 166 out of 309flct: progress  i = 167 out of 309flct: progress  i = 168 out of 309flct: progress  i = 169 out of 309flct: progress  i = 170 out of 309flct: progress  i = 171 out of 309flct: progress  i = 172 out of 309flct: progress  i = 173 out of 309flct: progress  i = 174 out of 309flct: progress  i = 175 out of 309flct: progress  i = 176 out of 309flct: progress  i = 177 out of 309flct: progress  i = 178 out of 309flct: progress  i = 179 out of 309flct: progress  i = 180 out of 309flct: progress  i = 181 out of 309flct: progress  i = 182 out of 309flct: progress  i = 183 out of 309flct: progress  i = 184 out of 309flct: progress  i = 185 out of 309flct: progress  i = 186 out of 309flct: progress  i = 187 out of 309flct: progress  i = 188 out of 309flct: progress  i = 189 out of 309flct: progress  i = 190 out of 309flct: progress  i = 191 out of 309flct: progress  i = 192 out of 309flct: progress  i = 193 out of 309flct: progress  i = 194 out of 309flct: progress  i = 195 out of 309flct: progress  i = 196 out of 309flct: progress  i = 197 out of 309flct: progress  i = 198 out of 309flct: progress  i = 199 out of 309flct: progress  i = 200 out of 309flct: progress  i = 201 out of 309flct: progress  i = 202 out of 309flct: progress  i = 203 out of 309flct: progress  i = 204 out of 309flct: progress  i = 205 out of 309flct: progress  i = 206 out of 309flct: progress  i = 207 out of 309flct: progress  i = 208 out of 309flct: progress  i = 209 out of 309flct: progress  i = 210 out of 309flct: progress  i = 211 out of 309flct: progress  i = 212 out of 309flct: progress  i = 213 out of 309flct: progress  i = 214 out of 309flct: progress  i = 215 out of 309flct: progress  i = 216 out of 309flct: progress  i = 217 out of 309flct: progress  i = 218 out of 309flct: progress  i = 219 out of 309flct: progress  i = 220 out of 309flct: progress  i = 221 out of 309flct: progress  i = 222 out of 309flct: progress  i = 223 out of 309flct: progress  i = 224 out of 309flct: progress  i = 225 out of 309flct: progress  i = 226 out of 309flct: progress  i = 227 out of 309flct: progress  i = 228 out of 309flct: progress  i = 229 out of 309flct: progress  i = 230 out of 309flct: progress  i = 231 out of 309flct: progress  i = 232 out of 309flct: progress  i = 233 out of 309flct: progress  i = 234 out of 309flct: progress  i = 235 out of 309flct: progress  i = 236 out of 309flct: progress  i = 237 out of 309flct: progress  i = 238 out of 309flct: progress  i = 239 out of 309flct: progress  i = 240 out of 309flct: progress  i = 241 out of 309flct: progress  i = 242 out of 309flct: progress  i = 243 out of 309flct: progress  i = 244 out of 309flct: progress  i = 245 out of 309flct: progress  i = 246 out of 309flct: progress  i = 247 out of 309flct: progress  i = 248 out of 309flct: progress  i = 249 out of 309flct: progress  i = 250 out of 309flct: progress  i = 251 out of 309flct: progress  i = 252 out of 309flct: progress  i = 253 out of 309flct: progress  i = 254 out of 309flct: progress  i = 255 out of 309flct: progress  i = 256 out of 309flct: progress  i = 257 out of 309flct: progress  i = 258 out of 309flct: progress  i = 259 out of 309flct: progress  i = 260 out of 309flct: progress  i = 261 out of 309flct: progress  i = 262 out of 309flct: progress  i = 263 out of 309flct: progress  i = 264 out of 309flct: progress  i = 265 out of 309flct: progress  i = 266 out of 309flct: progress  i = 267 out of 309flct: progress  i = 268 out of 309flct: progress  i = 269 out of 309flct: progress  i = 270 out of 309flct: progress  i = 271 out of 309flct: progress  i = 272 out of 309flct: progress  i = 273 out of 309flct: progress  i = 274 out of 309flct: progress  i = 275 out of 309flct: progress  i = 276 out of 309flct: progress  i = 277 out of 309flct: progress  i = 278 out of 309flct: progress  i = 279 out of 309flct: progress  i = 280 out of 309flct: progress  i = 281 out of 309flct: progress  i = 282 out of 309flct: progress  i = 283 out of 309flct: progress  i = 284 out of 309flct: progress  i = 285 out of 309flct: progress  i = 286 out of 309flct: progress  i = 287 out of 309flct: progress  i = 288 out of 309flct: progress  i = 289 out of 309flct: progress  i = 290 out of 309flct: progress  i = 291 out of 309flct: progress  i = 292 out of 309flct: progress  i = 293 out of 309flct: progress  i = 294 out of 309flct: progress  i = 295 out of 309flct: progress  i = 296 out of 309flct: progress  i = 297 out of 309flct: progress  i = 298 out of 309flct: progress  i = 299 out of 309flct: progress  i = 300 out of 309flct: progress  i = 301 out of 309flct: progress  i = 302 out of 309flct: progress  i = 303 out of 309flct: progress  i = 304 out of 309flct: progress  i = 305 out of 309flct: progress  i = 306 out of 309flct: progress  i = 307 out of 309flct: progress  i = 308 out of 309flct: progress  i = 309 out of 309flct: mean value of gamma^2/sigma^2 = 0.195261

flct: finished
#+end_example

#+begin_src python :results output
import os
os.environ["PATH"] = ":".join((os.environ["PATH"], "/Users/will/.local/bin"))
os.system("echo $PATH")
os.system("which flct")
#+end_src

#+RESULTS:
: /Users/will/Source/google-cloud-sdk/bin:/usr/local/texlive/2017/bin/x86_64-darwin:/Users/will/anaconda/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/opt/X11/bin:/Users/will/Source/google-cloud-sdk/bin:/usr/local/texlive/2017/bin/x86_64-darwin:/Users/will/anaconda/bin:/Users/will/.local/bin
: /Users/will/.local/bin/flct

**** Convert velocities into radial and non-radial part
#+begin_src python
  from astropy.io import fits
  from astropy.wcs import WCS
  import numpy as np

  # Position of star
  ra0, dec0 = 251.1230789, 23.7999977

  for line in "nii", "oiii":
      hvx = fits.open(f"../propermotions/{line}/{line}-velx-win.fits")[0]
      hvy = fits.open(f"../propermotions/{line}/{line}-vely-win.fits")[0]

      Vx, Vy = hvx.data, hvy.data
      ny, nx = hvx.data.shape
      w = WCS(hvx.header)
      j0, i0 = w.world_to_array_index_values(ra0, dec0)
      X, Y = np.meshgrid(np.arange(nx) - i0, np.arange(ny) - j0)
      R = np.hypot(X, Y)
      rx = X/R
      ry = Y/R
      V = np.hypot(Vx, Vy)
      Vr = Vx*rx + Vy*ry
      Vth = -Vx*ry + Vy*rx
      theta = np.degrees(np.arccos(Vr/V))

      fits.PrimaryHDU(header=hvx.header, data=Vr).writeto(
          f"../propermotions/{line}/{line}-Vr-win.fits", overwrite=True,
      )
      fits.PrimaryHDU(header=hvx.header, data=V).writeto(
          f"../propermotions/{line}/{line}-V-win.fits", overwrite=True,
      )
      fits.PrimaryHDU(header=hvx.header, data=Vth).writeto(
          f"../propermotions/{line}/{line}-Vth-win.fits", overwrite=True,
      )
      fits.PrimaryHDU(header=hvx.header, data=theta).writeto(
          f"../propermotions/{line}/{line}-theta-win.fits", overwrite=True,
      )
#+end_src

#+RESULTS:
: None




**** Conversion to physical velocities
+ Assume D = 2 kpc
+ Then 10 mas/yr = 10 0.001 2000 1.49597870691e13 / 1.0e5 3.15576e7 = 95 km/s
+ And 1 mpc = 0.1 arcsec
+ We get velocities of order 5 to 6 mas/yr in the main shell along the major axis
  + So about 50 km/s
+ Compare with results of Schonberner:2018a, Table 2
  + They use a magnification method and get M = 1.0085 between the two epochs for [O III] and M = 1.0090 for [N II]
  + This is from reducing the residuals in the main shell
  + They also get 1.0055 for the [N II] knots
  + This agrees with our results that the [N II]-bright material is slower
  + They give dt = 10.45 years for [O III] and 11.55 for [N II]
    + That agrees with us for [O III], but not for [N II] where the file names say 1998 and 2008
    + [ ] Check dates in original file
  + Radius of shell is 67 pixels to SE and 72 pixels to NNW
    + So scale of 1.0085 is 0.0085 67 = 0.57 pixels
    + We get 0.64 +/- 0.05 for the SE shell, so more or less consistent
    + And 0.44 +/- 0.04 for the NNW shell, as opposed to their value of 0.0085 72 = 0.61
    + Comparing averages:
      + 0.5 (0.57 + 0.61) = 0.59
      + 0.5 (0.64 + 0.44) = 0.54
    + So that is better, and suggests we could maybe do a further adjustment to Vy

**** Figures of the PM velocity field

[O III]
#+begin_src python :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.io import fits
  from astropy.wcs import WCS

  figfile = "../figs/oiii-propermotions.pdf"

  hdu = fits.open("../propermotions/oiii/oiii-ago1997-win.fits")[0]
  w = WCS(hdu)
  im = hdu.data
  vx = fits.open("../propermotions/oiii/oiii-velx-win.fits")[0].data
  vy = fits.open("../propermotions/oiii/oiii-vely-win.fits")[0].data
  vx[abs(vx) > 3.0] = np.nan
  vy[abs(vy) > 3.0] = np.nan
  ny, nx = im.shape
  X, Y = np.meshgrid(np.arange(nx), np.arange(ny))

  fig, ax = plt.subplots(figsize=(5, 5), subplot_kw=dict(projection=w))
  im[im < 0.0] = 1e-6
  ax.imshow(np.log10(im), vmin=-2.0, vmax=None, origin="lower", cmap="viridis")
  # A faint version for the faint emission
  step = slice(None, None, 10), slice(None, None, 10)
  vx[im < 0.08] = np.nan
  ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
            units="xy", scale=0.1, width=0.5, minshaft=2.0, color="w", alpha=0.2)
  step = slice(None, None, 5), slice(None, None, 5)
  vx[im < 0.5] = np.nan
  ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
            units="xy", scale=0.1, width=0.5, minshaft=2.0, color="w", alpha=0.4)
  # A bright version for the bright emission
  vx[im < 3.0] = np.nan
  Q = ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
            units="xy", scale=0.08, width=0.7, minshaft=2.0, color="w", alpha=1.0)
  ax.quiverkey(Q, 0.1, 0.1, 1.0,
               "10 mas / yr", labelcolor="w",
               fontproperties=dict(size=5))
  ax.text(0.05, 0.95, "[O III] proper motions", color="w", transform=ax.transAxes)
  fig.tight_layout(rect=(0.15, 0.05, 1.0, 1.0))
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:../figs/oiii-propermotions.pdf]]

[N II]
#+begin_src python :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.io import fits
  from astropy.wcs import WCS

  figfile = "../figs/nii-propermotions.pdf"

  hdu = fits.open("../propermotions/nii/n6210n2008sm.fits")[0]
  w = WCS(hdu)
  im = hdu.data
  vx = fits.open("../propermotions/nii/nii-velx-win.fits")[0].data
  vy = fits.open("../propermotions/nii/nii-vely-win.fits")[0].data
  vx[abs(vx) > 1.0] = np.nan
  vy[abs(vy) > 1.0] = np.nan
  ny, nx = im.shape
  X, Y = np.meshgrid(np.arange(nx), np.arange(ny))


  fig, ax = plt.subplots(figsize=(5, 5), subplot_kw=dict(projection=w))
  im[im < 0.0] = 0.0
  ax.imshow(np.sqrt(im), vmin=0.0, vmax=None, origin="lower", cmap="viridis")
  step = slice(None, None, 5), slice(None, None, 5)
  # A faint version for the faint emission
  vx[im < 0.02] = np.nan
  ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
            units="xy", scale=0.1, width=0.5, minshaft=2.0, color="w", alpha=0.4)
  # A bright version for the bright emission
  vx[im < 0.1] = np.nan
  Q = ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
                units="xy", scale=0.08, width=0.7, minshaft=2.0, color="w", alpha=1.0)
  ax.quiverkey(Q, 0.1, 0.1, 1.0,
               "10 mas / yr", labelcolor="w",
               fontproperties=dict(size=5))
  ax.text(0.05, 0.95, "[N II] proper motions", color="w", transform=ax.transAxes)
  fig.tight_layout(rect=(0.15, 0.05, 1.0, 1.0))
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:../figs/nii-propermotions.pdf]]

** Basic data on NGC 6210
+ Coordinates
  + (RA, Dec) = (16 44 29.5195973292, +23 47 59.491267229) sexagesimal
  + (RA, Dec) = (251.122998321, 23.7998586853) degrees
+ Radial velocity: -35 km/s

** Weak lines in spectra
:PROPERTIES:
:ID:       EC2AD06F-94C3-403B-B1BE-7EF4F0D67EA1
:END:
+ He II 6560.10
  + Clearly seen on slits that pass through core of nebula
  + Small velocity splitting of only +/- 10 km/s
+ C II 6578.15
  + Weaker than the He II, but extends to a bit larger radii
  + Slightly larger velocity splitting
  + Also has a night sky component
+ He I 5015.68
  + In the [O III] spectrum
  + I think this is really a line
  + But we also have some optical ghosts
    + 5002 - definitely a ghost
    + 4996
+ [Fe IV] 6739.8
  + To the red end of the [S II] spectrum
  + Shows the inner shell only

    
** Original data files
+ [[file:~/Dropbox/Papers/LL-Objects/NGC6210/]]


** Plan of action
+ [2/6] Follow what I did for the Owl Nebula
  1. [X] Add WCS to image+slits
  2. [X] Make a median image and then use it to get slit positions
  3. [ ] Flux calibration using the median image
  4. [ ] At same time find offsets along slit
  5. [ ] Add WCS info to PV images
  6. [ ] Construct spectral maps (with tetrablock algorithm)


** Return to project: Ensenada [2019-11-29 Fri]
+ What have I done, and what do I need to do?
+ /Done/
  + Screenshots of isovel images, overlaid on contours of integrated emission
  + [O III], [N II], Ha
  + These were laid out by hand in ds9
+ /Todo/
  + Reproduce the same images, but publication quality
  + Try removing the horizontal slits, to see if it makes any difference
  + Calculate moment maps

** [0/0] Median image
CLOSED: [2019-05-28 Tue 08:56]
+ We need to add WCS info to all of them
  + [X] Use astrometry.net
+ Most are Ha + [N II] image + slit
+ ~spm165~ is just an image and is saturated
  + [ ] Fix it - it is wrapping around the integers to negative values, so we just have to add 65536 to the negative pixels
+ Some are [O III] images
+ Others are properly saturated, but one is deep enough to show the halo well
  + ~spm238~ although it has artefacts from the central star
    + This is also [O III] and is 600s
  + ~spm306~ very deep [O III] exposure of halo knots (1800s = 0.5 hr)
  + ~spm303~ also very deep [O III] (1800s) but of S halo, which is very smooth and structureless
  + ~spm350~ very deep [O III] (1800s) of W halo - shows N Halo Knots
  + ~spm358~ very deep [O III] (1800s) of E halo - shows E halo knots

#+begin_src python :return table
  import pathlib
  from astropy.io import fits

  datadir = pathlib.Path("../data/imslit")
  files = datadir.glob("*-wcs.fits")

  table = [
      ["name", "filter", "exposure", "ccd", "date"],
      None
  ]
  for f in reversed(sorted(files)):
      hdu, = fits.open(f)
      ccd = hdu.header.get("CAMERA", hdu.header.get("DETECTOR")) 
      data = [
          f.stem,
          hdu.header.get("FILTER"),
          float(hdu.header.get("EXPTIME"))/1000,
          ccd,
          hdu.header.get("DATE-OBS"),
      ]
      table.append(data)
#+end_src

#+RESULTS:
| name             | filter     | exposure | ccd      |       date |
|------------------+------------+----------+----------+------------|
| spm414_bcr-wcs   | OIII 90A   |     15.0 | SITE3    | 2003-10-18 |
| spm407_bcr-wcs   | SII 90A    |    100.0 | SITE3    | 2004-06-16 |
| spm358_bcr-wcs   | OIII 90A   |   1800.0 | SITE3    | 2004-06-15 |
| spm350_bcr-wcs   | OIII 90A   |   1800.0 | SITE3    | 2004-06-15 |
| spm331_bcr-wcs   | Ha 90A     |    300.0 | SITE3    | 2003-10-17 |
| spm328_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-10-17 |
| spm306_bcr-wcs   | OIII 90A   |   1800.0 | SITE3    | 2004-06-14 |
| spm303_bcr-wcs   | OIII 90A   |   1800.0 | SITE3    | 2004-06-14 |
| spm296_bcr-wcs   | OIII 90A   |    100.0 | SITE3    | 2004-06-14 |
| spm293_bcr-wcs   | OIII 90A   |    100.0 | SITE3    | 2004-06-14 |
| spm256_bcr-wcs   | OIII 90A   |    100.0 | SITE3    | 2004-06-13 |
| spm251_bcr-wcs   | OIII 90A   |    100.0 | SITE3    | 2004-06-13 |
| spm242_bcr-wcs   | OIII 90A   |    100.0 | SITE3    | 2004-06-13 |
| spm238_bcr-wcs   | OIII 90A   |    600.0 | SITE3    | 2004-06-13 |
| spm236_bcr-wcs   | OIII 90A   |    120.0 | SITE3    | 2004-06-13 |
| spm229_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-10-16 |
| spm223_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-10-16 |
| spm165_bcr-wcs   | Ha 90A     |     30.0 | SITE3    | 2003-06-06 |
| spm134_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm127_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm124_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm121_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm118_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm116-2_bcr-wcs | OIII 60A   |    100.0 | E2V-4240 | 2011-05-21 |
| spm115_bcr-wcs   | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm111_cr-wcs    | Ha 90A     |    100.0 | E2V-4240 | 2011-05-21 |
| spm110_u-wcs     | Ha 90A     |    100.0 | SITE3    | 2003-06-05 |
| spm021_b-wcs     | Ha 90A     |      0.1 | e2vm2    | 2013-07-06 |
| spm019_b-wcs     | Ha 90A     |      0.1 | e2vm2    | 2013-07-06 |
| spm0190o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-20 |
| spm0185o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-20 |
| spm0183o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-20 |
| spm017_b-wcs     | Ha 90A     |      0.1 | e2vm2    | 2013-07-06 |
| spm0178o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-20 |
| spm0177o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-20 |
| spm0172o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-20 |
| spm0128o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-19 |
| spm0123o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-19 |
| spm0121o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-19 |
| spm0120o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-19 |
| spm0115o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-19 |
| spm0114o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-19 |
| spm0109o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-19 |
| spm0061o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-18 |
| spm0056o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-18 |
| spm0053o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-18 |
| spm004_b-wcs     | Ha 90A     |      0.3 | e2vm2    | 2013-07-06 |
| spm0048o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-18 |
| spm0047o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-18 |
| spm0042o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-18 |
| spm0041o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-18 |
| spm003_b-wcs     | Ha 90A     |     0.03 | e2vm2    | 2013-07-06 |
| spm0036o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-18 |
| spm0035o_b-wcs   | OIII 60A   |      0.1 | e2vm2    | 2015-08-18 |
| spm0030o_b-wcs   | Ha 90A     |      0.1 | e2vm2    | 2015-08-18 |
| obj1017_bcr-wcs  | pos5       |     0.06 | TK 1K    |   28/06/98 |
| obj1012_bcr-wcs  | ha+n2      |     0.06 | TK 1K    |   28/06/98 |
| obj1009_bcr-wcs  | Ha+n2      |     0.06 | TK 1K    |   28/06/98 |
| obj1006_bcr-wcs  | Han2       |     0.06 | TK 1K    |   28/06/98 |
| obj1002_bcr-wcs  | Ha+NII6580 |     0.06 | TK 1K    |   28/06/98 |

Make a co-added image of all the Ha exposures with the e2vm2 chip

#+begin_src python
  import pathlib
  from astropy.io import fits
  from reproject import reproject_interp

  datadir = pathlib.Path("../data/imslit")
  files = datadir.glob("*-wcs.fits")

  hafiles = []
  for f in files:
      hdu, = fits.open(f)
      if "e2vm2" in hdu.header.get("DETECTOR", "") and "Ha" in hdu.header.get("FILTER"):
          hafiles.append(f)


  hdu0, = fits.open(hafiles[0])
  image = hdu0.data
  for f in hafiles[1:]:
      hdu, = fits.open(f)
      data, _ = reproject_interp(hdu, hdu0.header)
      image += data

  hdu0.data = image
  for i, f in enumerate(hafiles):
      hdu0.header[f"HAFILE{i:02d}"] = f.stem
  hdu0.writeto(datadir / "stacked-ha.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

#+begin_src python
  import pathlib
  from astropy.io import fits
  from reproject import reproject_interp

  datadir = pathlib.Path("../data/imslit")
  files = datadir.glob("*-wcs.fits")

  o3files = []
  for f in files:
  hdu, = fits.open(f)
      if "e2vm2" in hdu.header.get("DETECTOR", "") and "OIII" in hdu.header.get("FILTER"):
          o3files.append(f)


  hdu0, = fits.open(o3files[0])
  image = hdu0.data
  for f in o3files[1:]:
      hdu, = fits.open(f)
      data, _ = reproject_interp(hdu, hdu0.header)
      image += data

  hdu0.data = image
  for i, f in enumerate(o3files):
      hdu0.header[f"O3FILE{i:02d}"] = f.stem
  hdu0.writeto(datadir / "stacked-oiii.fits", overwrite=True)
#+end_src

#+RESULTS:
: None


*** DONE Astrometry of image+slit exposures
CLOSED: [2019-05-26 Sun 17:53]
**** First test with astrometry.net
+ Based on what I did with \sigma Ori in [[id:B5B60BC7-5392-4245-93D6-8D17A6B56E5E][WCS solution from command line astrometry.net tools]]
+ Need to find the right index files
  + ICRS coords: 251.1230, 23.7999
  + Annoyingly, this falls at boundary of HEALPIX tiles, so we need ~10~ and ~31~ for the small scales
  + I am just getting scales ~00~ \to ~04~, which covers 2 to 11 arcmin.  Since the FOV is only 5 arcmin, this should be more than enough
  + Downloading from http://data.astrometry.net/5000/
    + The ~00~ scales are the biggest and take 15 min each
  + Copied to [[file:~/Work/astrometry/data/][file:~/Work/astrometry/data/]]
  + What should plate scale be?
    + FOV is 6.5 arcmin from Meaburn:2003a
    + Image size is 1024 pixels in all that I looked at
    + 6.5 60 / 1024 = 0.381 so try the range 0.35 \to 0.4
  + Test command - run in Terminal for safety
    #+begin_src sh :dir ../data/imslit :eval no 
      D=~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015
      solve-field --ra 251.1230 --dec 23.7999 --radius 1.0 --scale-units arcsecperpix --scale-low 0.35 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' $D/spm0030o_b.fits 
    #+end_src
  + That worked, but it wrote output to Teresa's shared Dropbox folder
    + Fix it using ~--dir .~ option
    + Try again with ~0035~
    + That worked fine, although the alignment is not perfect
    + If this turns out to be a problem I could try one or more of the following
      1. [X] Use ~--no-tweak~ setting to avoid using SIP polynomial
         - *yes* - that worked much better
         - and there should not be much need for distortion correction since nebula is much smaller than CCD
         - We also need to add ~--overwrite~ option in order to re-do the same image
      2. Maybe increase ~--odds-to-solve~ (default 1e9)
      3. Maybe play with ~--code-tolerance~ or ~--pixel-error~ but I am not sure what these mean (need to read Lang:2010a more carefully).
**** Production run with astrometry.net
+ First, need to get a list of all the image+slit files
***** ~solve-astrometry-imslit.sh~
#+name: imslit-list-2015
+ spm0030
+ spm0035
+ spm0036
+ spm0041
+ spm0042
+ spm0047
+ spm0048
+ spm0053
+ spm0056
+ spm0061
+ spm0109
+ spm0114
+ spm0115
+ spm0120
+ spm0121
+ spm0123
+ spm0128
+ spm0172
+ spm0177
+ spm0178
+ spm0183
+ spm0185
+ spm0190

Note that we need to use the ~${var[*]}~ syntax to access whole of array

#+header: :var files=imslit-list-2015
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 1.0 --scale-units arcsecperpix --scale-low 0.35 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/${f}o_b.fits
  done
#+end_src
***** ~solve-astrometry-imslit-failed.sh~
Some of these did not solve - see [[file:astrometry-imslit-2015.log]]

#+name: imslit-failed-2015
+ 0053
+ 0061
+ 0128
+ 0183
+ 0190

What do these have in common?
****** Try again with some modifications

Reduce required odds from 1e9 to 1e6

#+header: :var files=imslit-failed-2015
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-failed.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 1.0 --scale-units arcsecperpix --scale-low 0.35 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/spm${f}o_b.fits --odds-to-solve 1e6
  done
#+end_src

Some of these succeeded this time, and the solutions are totally fine
+ [X] 0053
+ 0061
+ 0128
+ 0183
+ [X] 0190

Reduce required odds still further

+ [X] 0061 (worked with 1e3)
+ [X] 0183 (worked with 30)
+ [X] 0128 (finally with 15, and increasing ~code-tol~ from 0.01 to 0.03)


#+name: imslit-stubborn-2015
+ 0128

#+header: :var files=imslit-stubborn-2015
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-stubborn.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 0.1 --scale-units arcsecperpix --scale-low 0.35 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/spm${f}o_b.fits --odds-to-solve 15 --quad-size-min 0.03 --code-tol 0.03 -v
  done
#+end_src


****** Example of successful run
#+begin_example
  Reading input file 1 of 1: "/Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0030o_b.fits"...
  Extracting sources...
  simplexy: found 44 sources.
  Solving...
  system: No such file or directory
  engine.c:79:engine_autoindex_search_paths: Warning: failed to open index directory: "/usr/local/Cellar/astrometry-net/0.76_2/data"

  Reading file "./spm0030o_b.axy"...
  Only searching for solutions within 1 degrees of RA,Dec (251.123,23.7999)
    log-odds ratio 31.3066 (3.94724e+13), 19 match, 1 conflict, 20 distractors, 71 index.
    RA,Dec = (251.122,23.7979), pixel scale 0.35018 arcsec/pix.
    Hit/miss:   Hit/miss: -++++--+--+c---++--+-+--++-+----+-+++-++(best)++++
  Field 1: solved with index index-5000-10.fits.
  Field 1 solved: writing to file ./spm0030o_b.solved to indicate this.
  Field: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0030o_b.fits
  Field center: (RA,Dec) = (251.121851, 23.797830) deg.
  Field center: (RA H:M:S, Dec D:M:S) = (16:44:29.244, +23:47:52.188).
  Field size: 5.51533 x 5.92387 arcminutes
  Field rotation angle: up is -87.8426 degrees E of N
  Field parity: pos
  Creating new FITS file "./spm0030o_b-wcs.fits"...
  Creating index object overlay plot...
  Creating annotation plot...
  Your field contains:
    NGC 6210
#+end_example
****** Examples of failed runs
******* 0053
#+begin_example
  Reading input file 1 of 1: "/Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0053o_b.fits"...
  Extracting sources...
  simplexy: found 46 sources.
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:25: RuntimeWarning: divide by zero encountered in log
    logpoisson = k*np.log(mean) - mean - np.array([sum(np.arange(kk)) for kk in k])
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:25: RuntimeWarning: invalid value encountered in multiply
    logpoisson = k*np.log(mean) - mean - np.array([sum(np.arange(kk)) for kk in k])
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:26: RuntimeWarning: invalid value encountered in less
    badbins = occupied[logpoisson < logcut]
  Solving...
  system: No such file or directory
  engine.c:79:engine_autoindex_search_paths: Warning: failed to open index directory: "/usr/local/Cellar/astrometry-net/0.76_2/data"

  Reading file "./spm0053o_b.axy"...
  Only searching for solutions within 1 degrees of RA,Dec (251.123,23.7999)
  Field 1 did not solve (index index-5000-10.fits).
  Field: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0053o_b.fits
  Did not solve (or no WCS file was written).
#+end_example
******* 0061
#+begin_example
  Reading input file 1 of 1: "/Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0061o_b.fits"...
  Extracting sources...
  simplexy: found 51 sources.
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:25: RuntimeWarning: divide by zero encountered in log
    logpoisson = k*np.log(mean) - mean - np.array([sum(np.arange(kk)) for kk in k])
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:25: RuntimeWarning: invalid value encountered in multiply
    logpoisson = k*np.log(mean) - mean - np.array([sum(np.arange(kk)) for kk in k])
  /usr/local/Cellar/astrometry-net/0.76_2/libexec/lib/python3.7/site-packages/astrometry/util/removelines.py:26: RuntimeWarning: invalid value encountered in less
    badbins = occupied[logpoisson < logcut]
  Solving...
  system: No such file or directory
  engine.c:79:engine_autoindex_search_paths: Warning: failed to open index directory: "/usr/local/Cellar/astrometry-net/0.76_2/data"

  Reading file "./spm0061o_b.axy"...
  Only searching for solutions within 1 degrees of RA,Dec (251.123,23.7999)
  Field 1 did not solve (index index-5000-10.fits).
  Field: /Users/will/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/spm0061o_b.fits
  Did not solve (or no WCS file was written).
#+end_example
***** ~solve-astrometry-imslit-missing.sh~
And some were missing 

#+name: imslit-missing-2015
+ 0042
+ 0047

#+header: :var files=imslit-missing-2015
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-missing.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 1.0 --scale-units arcsecperpix --scale-low 0.35 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/spm${f}o_b.fits
  done
#+end_src

Missing ones now got from Tere, and they worked
***** ~solve-astrometry-imslit-varias.sh~

#+name: imslit-list-varias
+ obj1002_bcr 
+ obj1006_bcr 
+ obj1009_bcr 
+ obj1012_bcr 
+ obj1017_bcr 
+ spm110_u
+ spm115_bcr 
+ spm118_bcr 
+ spm121_bcr 
+ spm124_bcr 
+ spm127_bcr 
+ spm134_bcr 
+ spm165_bcr 
+ spm223_bcr 
+ spm229_bcr 
+ spm318_bcr 
+ spm328_bcr 
+ spm331_bcr 
+ spm414_bcr 
+ spm236_bcr 
+ spm238_bcr 
+ spm242_bcr 
+ spm251_bcr 
+ spm256_bcr 
+ spm293_bcr 
+ spm296_bcr 
+ spm302_bcr 
+ spm303_bcr 
+ spm305_bcr 
+ spm306_bcr 
+ spm350_bcr 
+ spm358_bcr 
+ spm407_bcr
+ spm111_bcr
+ spm116_bcr
+ spm003_b
+ spm004_b
+ spm017_b

These have 512x512 arrays, so image pixels are bigger.  Use all the loose tolerances from the start

#+header: :var files=imslit-list-varias
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-varias.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 0.1 --scale-units arcsecperpix --scale-low 0.5 --scale-high 0.8 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/${f}.fits --odds-to-solve 1e6 --quad-size-min 0.01 --code-tol 0.03
  done
#+end_src

Six failed with the more stringent limits.  Three we will try with looser limits

#+name: imslit-failed-varias
+ obj1002_bcr
+ obj1006_bcr
+ spm293_bcr
#+header: :var files=imslit-failed-varias
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-varias-failed.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 0.1 --scale-units arcsecperpix --scale-low 0.5 --scale-high 0.8 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/${f}.fits --odds-to-solve 1e3 --quad-size-min 0.01 --code-tol 0.03
  done
#+end_src


But with 4 it is because the plate scale is smaller
#+name: imslit-1024-varias
+ spm003_b
+ spm004_b
+ spm017_b
+ spm019_b
+ spm021_b
+ spm111_cr
#+header: :var files=imslit-1024-varias
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-varias-1024.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  for f in ${files[*]}; do
      solve-field --ra 251.1230 --dec 23.7999 --radius 0.1 --scale-units arcsecperpix --scale-low 0.3 --scale-high 0.4 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/${f}.fits --odds-to-solve 1e6 --quad-size-min 0.03 --code-tol 0.01
  done
#+end_src

+ [2019-06-04 Tue 18:20] Got extra file from Tere that was missing ~spm116-2~
  + I need to remove the bias myself
    + Measured to be median of 856
  + Also needed to remove cosmic rays in order for astrometry to work
    + All sorted now


Remove bias from file

#+begin_src python :results output :dir ~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  from astropy.io import fits
  hdulist = fits.open("spm116-2.fits")
  hdulist.info()
  hdu = hdulist[0]
  hdu.data = hdu.data.astype(float) - 856
  hdu.writeto("spm116-2_b.fits", overwrite=True)
#+end_src

#+RESULTS:
: Filename: spm116-2.fits
: No.    Name      Ver    Type      Cards   Dimensions   Format
:   0  PRIMARY       1 PrimaryHDU      30   (1076, 1024)   int16   

Remove cosmic rays 
#+begin_src python :results output :dir ~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  from astropy.io import fits
  from astroscrappy import detect_cosmics
  hdulist = fits.open("spm116-2_b.fits")
  hdulist.info()
  hdu = hdulist[0]
  mask, newdata = detect_cosmics(hdu.data)
  hdu.data = newdata
  hdu.writeto("spm116-2_bcr.fits", overwrite=True)
#+end_src

#+RESULTS:
: Filename: spm116-2_b.fits
: No.    Name      Ver    Type      Cards   Dimensions   Format
:   0  PRIMARY       1 PrimaryHDU      30   (1076, 1024)   float64   



#+name: imslit-missed
+ spm116-2_bcr
#+header: :var files=imslit-missed
#+begin_src sh :tangle ../scripts/solve-astrometry-imslit-varias-missed.sh :eval no
  D=~/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas
  for f in ${files[*]}; do
      solve-field -v --ra 251.1230 --dec 23.7999 --radius 0.1 --scale-units arcsecperpix --scale-low 0.3 --scale-high 0.7 --dir . --new-fits '%s-wcs.fits' --no-tweak --overwrite $D/${f}.fits --odds-to-solve 1e2 --code-tol 0.03
  done
#+end_src

This finally worked

*** DONE Combining the image + slits
CLOSED: [2019-05-28 Tue 08:57]
+ We do this separately for [O III] and Ha+[N II]
+ [4/4] Steps
  1. [X] Make a common grid for all images
     + Try 0.3 arcsec pixels and 512x512
  2. [X] Then scale all to a common min/max
     - This and the previous step are done in [[id:4FA9561B-6694-4D6F-98DE-320EB1FEAB0E][Re-gridding images]]
     - We use the median of top-right corner (slice: [420:, 420:]) for the background
     - We use the median of the central 18x18 arcsec portion (slice: [230:290, 230:290]) for the normalization
     - Final pixel values range up to about 10
  3. [X] Calculate median image
     - This is done in [[id:E0D99541-C96F-4927-8809-7912F10CB724][Combining into median image and divide by it]]
  4. [X] And take ratio of each individual to the median
+ Unfortunately, although this worked, the results are not very pretty
  + It will be difficult to automatically find the slits
  + Maybe I should use Teresa's results (/no, not necessary - now I have found slit positions by hand/)
**** Re-gridding images
:PROPERTIES:
:ID:       4FA9561B-6694-4D6F-98DE-320EB1FEAB0E
:END:

This should be run from top-level folder

#+header: :var tab=pos-ha
#+begin_src python :tangle ../scripts/regrid-images-ha.py :colnames no 
  import numpy as np
  from scipy.interpolate import griddata
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.table import Table
  #
  # First set up WCS for the output image
  # We use capital letters for the output variables
  #

  NX, NY = 512, 512
  # 0.5 arcsec pixels
  dRA, dDec = -0.3/3600., 0.3/3600.
  # Center on central star of NGC 6210
  RA0, Dec0 = 251.122998321, 23.7998586853
  W = WCS(naxis=2)
  W.wcs.cdelt = [dRA, dDec]
  W.wcs.crpix = [0.5*(1 + NX), 0.5*(1 + NY)]
  W.wcs.crval = [RA0, Dec0]
  W.wcs.ctype = ['RA---TAN', 'DEC--TAN']

  outimage = np.zeros((NY, NX))
  # Create world coord arrays for output image
  II, JJ = np.meshgrid(np.arange(NX), np.arange(NY))
  RA, Dec = W.all_pix2world(II, JJ, 0)

  #
  # Read in the list of slits
  #
  table = Table(rows=tab[1:], names=tab[0])

  for i, row in enumerate(table):
      hdu, = fits.open(f"data/imslit/{row['imslit']}-wcs.fits")
      # image = (hdu.data - row['bias']) / (row['core'] - row['bias'])
      image = hdu.data
      outfilename = f'data/imslit-ha/imslit-{i:02d}.fits'
      ny, nx = image.shape
      #hdu.header.remove('@EPOCH')
      w = WCS(hdu.header)
      # Create world coord arrays for input image
      ii, jj = np.meshgrid(np.arange(nx), np.arange(ny))
      ra, dec = w.all_pix2world(ii, jj, 0)
      # Do the interpolation
      points = np.array(list(zip(ra.ravel(), dec.ravel())))
      xi = np.array(list(zip(RA.ravel(), Dec.ravel())))
      outimage = griddata(points, image.ravel(), xi, method='nearest').reshape((NY, NX))
      bg = np.nanmedian(outimage[420:, 420:])
      core = np.nanmedian(outimage[230:290, 230:290])
      print(core, bg)
      outimage = (outimage - bg)/(core - bg)
      # Save the output image
      fits.PrimaryHDU(header=W.to_header(), data=outimage).writeto(outfilename, overwrite=True)




#+end_src


#+header: :var tab=pos-oiii
#+begin_src python :tangle ../scripts/regrid-images-oiii.py :colnames no 
  import numpy as np
  from scipy.interpolate import griddata
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.table import Table


  #
  # First set up WCS for the output image
  # We use capital letters for the output variables
  #

  NX, NY = 512, 512
  # 0.5 arcsec pixels
  dRA, dDec = -0.3/3600., 0.3/3600.
  # Center on central star of NGC 6210
  RA0, Dec0 = 251.122998321, 23.7998586853
  W = WCS(naxis=2)
  W.wcs.cdelt = [dRA, dDec]
  W.wcs.crpix = [0.5*(1 + NX), 0.5*(1 + NY)]
  W.wcs.crval = [RA0, Dec0]
  W.wcs.ctype = ['RA---TAN', 'DEC--TAN']

  outimage = np.zeros((NY, NX))
  # Create world coord arrays for output image
  II, JJ = np.meshgrid(np.arange(NX), np.arange(NY))
  RA, Dec = W.all_pix2world(II, JJ, 0)

  #
  # Read in the list of slits
  #
  table = Table(rows=tab[1:], names=tab[0])

  for i, row in enumerate(table):
      hdu, = fits.open(f"data/imslit/{row['imslit']}-wcs.fits")
      # image = (hdu.data - row['bias']) / (row['core'] - row['bias'])
      image = hdu.data
      outfilename = f'data/imslit-oiii/imslit-{i:02d}.fits'
      ny, nx = image.shape
      #hdu.header.remove('@EPOCH')
      w = WCS(hdu.header)
      # Create world coord arrays for input image
      ii, jj = np.meshgrid(np.arange(nx), np.arange(ny))
      ra, dec = w.all_pix2world(ii, jj, 0)
      # Do the interpolation
      points = np.array(list(zip(ra.ravel(), dec.ravel())))
      xi = np.array(list(zip(RA.ravel(), Dec.ravel())))
      outimage = griddata(points, image.ravel(), xi, method='nearest').reshape((NY, NX))
      bg = np.nanmedian(outimage[420:, 420:])
      core = np.nanmedian(outimage[230:290, 230:290])
      print(core, bg)
      outimage = (outimage - bg)/(core - bg)
      # Save the output image
      fits.PrimaryHDU(header=W.to_header(), data=outimage).writeto(outfilename, overwrite=True)

#+end_src
**** Combining into median image and divide by it
:PROPERTIES:
:ID:       E0D99541-C96F-4927-8809-7912F10CB724
:END:
#+BEGIN_SRC python :eval no :tangle ../scripts/medianize_images.py
  import sys
  import os
  import glob
  import numpy as np
  from astropy.io import fits

  try:
      datapath = sys.argv[1]
      fnlist = glob.glob(f"{datapath}/imslit-??.fits")
  except:
      sys.exit(f"Usage: {sys.argv[0]} DATAPATH")

  imlist = []
  for fitsname in fnlist:
      hdu, = fits.open(fitsname)
      imlist.append(hdu.data)
  imstack = np.dstack(imlist)
  median = np.median(imstack, axis=-1)
  fits.PrimaryHDU(header=hdu.header,
                  data=median).writeto(f'{datapath}/imslit-median.fits', overwrite=True)

  ratcombo = np.zeros_like(median)
  combo = np.zeros_like(median)
  for im, fn in zip(imlist, fnlist):
      combo = combo + im
      head, tail = os.path.split(fn)
      outname = os.path.join(head, tail.replace('imslit', 'imslit-ratio'))
      ratio = im/median
      ratcombo = ratcombo + ratio
      fits.PrimaryHDU(header=hdu.header,
                      data=ratio).writeto(outname, overwrite=True)
  fits.PrimaryHDU(header=hdu.header,
                  data=ratcombo).writeto(f'{datapath}/imslit-ratcombo.fits',
                                         overwrite=True)
  fits.PrimaryHDU(header=hdu.header,
                  data=combo).writeto(f'{datapath}/imslit-combo.fits',
                                      overwrite=True)

#+END_SRC

**** H\alpha + [N II] positions
:PROPERTIES:
:ID:       BE8A01A9-0999-44B5-8A51-E8E4B37960F9
:END:
+ 30 positions in total
+ ~wa = 1~ wavelength is first axis (fits order) in PV spec
+ ~wa = 2~ wavelength is second axis (fits order) in PV spec
+ ~ij = 1~ slit is vertical in I+S, so ~islit~ is along x-axis
+ ~ij = 2~ slit is horizontal in I+S, so ~islit~ is along y-axis
+ ~s = -1~ means that slit axis in I+S is reversed with respect to PV image
+ *Note*
  - spm0172o_b is clearly at an angle to the image axis (of 0.5 deg)

#+name: pos-ha
| spec          | imslit      |     run |    t | wa | islit | ij |  s | id |
|---------------+-------------+---------+------+----+-------+----+----+----|
| obj1003_bcrx  | obj1002_bcr | 1998-06 |   60 |  1 |   390 |  1 |  1 | o  |
| obj1007_bcrx  | obj1006_bcr | 1998-06 |  300 |  1 |   388 |  1 |  1 | n  |
| obj1010_bcrx  | obj1009_bcr | 1998-06 | 1200 |  1 |   388 |  1 |  1 | m  |
| obj1015_bcrx  | obj1012_bcr | 1998-06 | 1200 |  1 | 390.5 |  1 |  1 | p  |
| obj1018_bcrx  | obj1017_bcr | 1998-06 | 1200 |  1 | 390.5 |  1 |  1 | q  |
| spm112_bcrx   | spm110_u    | 2003-06 | 1800 |  1 |   257 |  1 |  1 | f  |
| spm116_bcrx   | spm115_bcr  | 2003-06 | 1800 |  1 |   263 |  1 |  1 | e  |
| spm119_bcrx   | spm118_bcr  | 2003-06 | 1800 |  1 |   265 |  1 |  1 | d  |
| spm122_bcrx   | spm121_bcr  | 2003-06 | 1800 |  1 |   267 |  1 |  1 | h  |
| spm125_bcrx   | spm124_bcr  | 2003-06 | 1800 |  1 | 269.5 |  1 |  1 | i  |
| spm130_bcrx   | spm127_bcr  | 2003-06 | 1800 |  1 | 272.5 |  1 |  1 | k  |
| spm135_bcrx   | spm134_bcr  | 2003-06 | 1800 |  1 | 277.5 |  1 |  1 | b  |
| spm224_bcrx   | spm223_bcr  | 2003-10 | 1800 |  1 | 294.5 |  1 |  1 | t  |
| spm230_bcrx   | spm229_bcr  | 2003-10 | 1800 |  1 | 294.5 |  1 |  1 | v  |
| spm329_bcrx   | spm328_bcr  | 2003-10 | 1800 |  1 |   273 |  1 |  1 | w  |
| spm112-2_bcrx | spm111_cr   | 2011-05 | 1800 |  2 |   531 |  2 |  1 | g  |
| spm018-bcrx   | spm017_b    | 2013-07 | 1800 |  1 |   505 |  2 | -1 | c  |
| spm020-bcrx   | spm019_b    | 2013-07 | 1800 |  1 |   483 |  2 | -1 | i  |
| spm023-bcrx   | spm021_b    | 2013-07 | 1800 |  1 |   496 |  2 | -1 | j  |
| spm0031o_bcrx | spm0030o_b  | 2015-08 |  900 |  2 |   485 |  2 |  1 | c  |
| spm0037o_bcrx | spm0036o_b  | 2015-08 |  900 |  2 |   484 |  2 |  1 | d  |
| spm0043o_bcrx | spm0042o_b  | 2015-08 |  900 |  2 |   481 |  2 |  1 | e  |
| spm0049o_bcrx | spm0048o_b  | 2015-08 |  900 |  2 |   480 |  2 |  1 | f  |
| spm0057o_bcrx | spm0056o_b  | 2015-08 |  900 |  2 |   476 |  2 |  1 | g  |
| spm0110o_bcrx | spm0109o_b  | 2015-08 | 1200 |  2 | 490.5 |  2 |  1 | b  |
| spm0116o_bcrx | spm0115o_b  | 2015-08 | 1800 |  2 | 485.5 |  2 |  1 | a  |
| spm0124o_bcrx | spm0123o_b  | 2015-08 | 1200 |  2 |   478 |  2 |  1 | i  |
| spm0173o_bcrx | spm0172o_b  | 2015-08 |  900 |  2 |   493 |  2 |  1 | h  |
| spm0179o_bcrx | spm0178o_b  | 2015-08 | 1800 |  2 | 489.5 |  2 |  1 | j  |
| spm0186o_bcrx | spm0185o_b  | 2015-08 | 1800 |  2 | 515.5 |  2 |  1 | k  |
**** [O III] positions
+ Now including short exposures as well because some of the long ones are saturated
#+name: pos-oiii
| spec              | imslit       |     run |    t | wa | islit | ij |  s | id |
|-------------------+--------------+---------+------+----+-------+----+----+----|
| spm243-244_bcrx   | spm242_bcr   | 2004-06 |  120 |  1 |   275 |  1 |  1 | r* |
| spm252_bcrx       | spm251_bcr   | 2004-06 |  120 |  1 |   280 |  1 |  1 | s* |
| spm257_bcrx       | spm256_bcr   | 2004-06 |  120 |  1 |   285 |  1 |  1 | u* |
| spm244_bcrx       | spm242_bcr   | 2004-06 | 1800 |  1 |   275 |  1 |  1 | r  |
| spm253_bcrx       | spm251_bcr   | 2004-06 | 1800 |  1 |   280 |  1 |  1 | s  |
| spm258_bcrx       | spm256_bcr   | 2004-06 | 1800 |  1 |   285 |  1 |  1 | u  |
| spm294_bcrx_oiii  | spm293_bcr   | 2004-06 | 1800 |  1 |   262 |  1 |  1 | a  |
| spm297_bcrx       | spm296_bcr   | 2004-06 | 1800 |  1 |   265 |  1 |  1 | l  |
| spm114_bcrx_oiii  | spm116-2_bcr | 2011-05 |  600 |  2 |   532 |  2 |  1 | g  |
| spm0033_bcrx_oiii | spm0035o_b   | 2015-08 |  900 |  2 |   485 |  2 |  1 | c  |
| spm0039_bcrx_oiii | spm0041o_b   | 2015-08 |  900 |  2 |   482 |  2 |  1 | d  |
| spm0045o_bcrx     | spm0047o_b   | 2015-08 |  900 |  2 |   479 |  2 |  1 | e  |
| spm0051_bcrx_oiii | spm0053o_b   | 2015-08 |  900 |  2 |   476 |  2 |  1 | f  |
| spm0059_oiii      | spm0061o_b   | 2015-08 |  900 |  1 |   475 |  2 | -1 | g  |
| spm0112_bcrx_oiii | spm0114o_b   | 2015-08 | 1200 |  2 |   486 |  2 |  1 | b  |
| spm0118_bcrx_oiii | spm0120o_b   | 2015-08 | 1800 |  2 | 479.5 |  2 |  1 | a  |
| spm0126_bcrx_oiii | spm0128o_b   | 2015-08 | 1200 |  2 | 476.5 |  2 |  1 | i  |
| spm0175o_bcrx     | spm0177o_b   | 2015-08 |  900 |  2 | 489.5 |  2 |  1 | h  |
| spm0181_bcrx_oiii | spm0183o_b   | 2015-08 | 1800 |  2 |   482 |  2 |  1 | j  |
| spm0188_oiii      | spm0190o_b   | 2015-08 | 1800 |  1 |   512 |  2 | -1 | k  |


**** [S II] exposure
| spec   | imslit |     run |    t | wa | islit | ij | ID |
|--------+--------+---------+------+----+-------+----+----|
| spm408 | spm407 | 2004-06 | 1800 |  1 |   269 |  1 | s  |

**** Write tables to files for later use

First the H\alpha slits

#+name: save-slit-table
#+begin_src python :results file :return path :colnames no :var INTAB=pos-ha FN="ha-slits.tab"
  from astropy.table import Table
  path = f"../data/{FN}"
  Table(rows=INTAB[1:], names=INTAB[0]).write(path, format="ascii.tab")
#+end_src

#+RESULTS: save-slit-table
[[file:../data/ha-slits.tab]]

Second, the [O III] slits

#+call: save-slit-table(pos-oiii, "oiii-slits.tab")

#+RESULTS:
[[file:../data/oiii-slits.tab]]

** [1/1] Relative photometric calibration of the slits
*** DONE Obtain reference profiles from the median image
CLOSED: [2019-05-31 Fri 13:43]
+ [2/2] Steps
  1. [X] Find position of slit on median image
     - ~islit~ from the [[id:BE8A01A9-0999-44B5-8A51-E8E4B37960F9][H\alpha + {N II} positions]] table gives the pixel position perpendicular to slit (give or take a small tilt)
       - We have now written these to ascii files, such as [[file:~/Dropbox/Teresa-Turtle/data/ha-slits.tab]]
     - We can use the star (Ra, Dec) to find (i0, j0) pixel position for star
     - We then have a reference point on the slit (islit, j0), which is closest approach to the star
       - With small modification for ~ij = 2~ since then ~islit~ is in j-direction
  2. [X] With that info, we should be able to make a version of the ~find_slit_coords()~ function, as in the Owl project ([[id:4D50A4AB-80B1-4872-899F-8637EC758AB3][World coords from slit pixels]])
     - Do we even need the star position?
     - No, since we just get the world coords of all the pixels along the slit
*** Compare the slit profiles with the reference profiles
+ In the Owl project, everything was all lumped together, but I am going to do things in stages
+ We don't know what ~shift~ values to use between the im+slit and the PV image, so we will plot the profile comparisons first
+ And first, we will just do Ha + [N II]
+ We will probably have to do it several times, in order to get the ~shift~ values
+ We can have a first guess by collapsing down the image and PV and looking at the location of maximum

#+begin_src python :tangle ../scripts/compare-slit-profiles.py
  import os
  import sys
  import numpy as np
  import astropy
  from astropy.table import Table, Row, hstack
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.wcs.utils import pixel_to_skycoord
  from astropy import units as u
  from astropy.coordinates import SkyCoord
  import seaborn as sns
  import turtle_utils
  from turtle_utils import (
      slit_profile,
      extract_full_profile_from_pv,
      extract_slit_profile_from_imslit,
      get_orig_folder,
      find_slit_coords,
      subtract_sky_and_trim,
      make_three_plots,
      extract_line_and_regularize,
      make_slit_wcs,
  )

  try:
      choice = int(sys.argv[1])
  except:
      choice = None

  restwavs = {'ha': 6562.79, 'nii': 6583.45, 'nii_s': 6548.05}

  # Position of star
  RA0, Dec0 = 251.122998321, 23.7998586853

  saturation = 6e4


  sns.set_palette('RdPu_d', 3)

  table1 = Table.read('data/ha-slits.tab', format="ascii.tab")
  table2 =  Table.read('data/align-ha.tab', format="ascii.tab")
  # The align-ha table takes precedence if islit has been modified
  table1.remove_column("islit")
  # We already have spec in the ha-slits table
  table2.remove_column("spec") 
  table = hstack([table1, table2], join_type="exact")

  # Photometric reference image
  photom, = fits.open('data/imslit-ha/imslit-median.fits')
  wphot = WCS(photom.header)
  turtle_utils.VERBOSE = 1
  neighbors = [-2, -1, 1, 2]
  for row in table:
      if choice is not None and row["id"] != choice:
          # If we asked for a single spectrum, then skip all others
          continue
      spec_hdu, = fits.open(get_orig_folder(row["run"]) + "/" + row["spec"] + ".fits")
      im_hdu, = fits.open("data/imslit/" + row["imslit"] + "-wcs.fits")
      # Mask out saturated pixels with NaN
      spec_hdu.data[spec_hdu.data > saturation] = np.nan
      # trim the edge or arrays since sometimes the outer pixels contain garbage
      spec_hdu.data = subtract_sky_and_trim(spec_hdu.data, row)
      spec_profile = extract_full_profile_from_pv(
          spec_hdu,
          wavaxis=row["wa"],
          bandwidth=90.0,
          linedict=restwavs)
      imslit_profile = extract_slit_profile_from_imslit(im_hdu.data, row)
      print(row)
      jslit = np.arange(len(spec_profile))
      # jslit0_spec = np.average(jslit, weights=spec_profile)
      # jslit0_imslit = np.average(jslit, weights=imslit_profile)
      # jslit0_spec = np.nanargmax(spec_profile)
      # jslit0_imslit = np.nanargmax(imslit_profile)
      jslit0_spec = row["j0_s"]
      jslit0_imslit = row["j0_i"]
      print(jslit0_spec, jslit0_imslit, 'shift =', row["shift"])
      slit_coords = find_slit_coords(row, im_hdu.header, spec_hdu.header)
      calib_profile = slit_profile(slit_coords['RA'], slit_coords['Dec'],
                                   photom.data, wphot)


      # Look at neighboring slit positions
      nb_calib_profiles = {}
      for nb in neighbors:
          nbrow = Table(row)[0]   # This is the trick to get a copy of the row
          nbrow["islit"] += nb
          nb_slit_coords = find_slit_coords(nbrow, im_hdu.header, spec_hdu.header)
          nb_calib_profiles[nb] = slit_profile(
              nb_slit_coords['RA'], nb_slit_coords['Dec'], photom.data, wphot)


      # Offset in arcsec along the slit
      slit_points = (np.arange(len(spec_profile)) - jslit0_spec)*slit_coords["ds"]
      # Extra correction for optical halos that show up at +/- 40 arcsec
      halo_mask = np.abs(np.abs(slit_points) - 40.0) < 10.0
      halo_correction = np.median(spec_profile[halo_mask])
      spec_profile -= halo_correction

      # Take a window about profile peak to normalize spec_profile
      jslice0 = slice(jslit0_spec-20, jslit0_spec+20)
      # propagate saturated pixels to the calibration profile
      calib_profile_nan = calib_profile.copy()
      calib_profile_nan[~np.isfinite(spec_profile)] = np.nan
      rat0 = np.nansum(spec_profile[jslice0])/np.nansum(calib_profile_nan[jslice0])
      print('Coarse calibration: ratio =', rat0)
      spec_profile /= rat0


      # Make a figure comparing the profiles
      plt_prefix = f"figs/{row.index:03d}-calib"
      ratio = make_three_plots(spec_profile, calib_profile, plt_prefix,
                               slit_points=slit_points,
                               neighbors=nb_calib_profiles, db=row, sdb=slit_coords)

      # Write out the flux-calibrated spectra
      spec_hdu.data -= halo_correction
      spec_hdu.data /= rat0
      save_prefix = f"data/pvextract/{row.index:03d}-{row['spec']}"
      # The default header has minimal changes from the original
      pvheader = fits.Header(spec_hdu.header, copy=True)

      for lineid, wav0 in restwavs.items():
          pvdata, contdata, wavs = extract_line_and_regularize(
              spec_hdu.data, WCS(spec_hdu.header), wav0, row)
          pvdata = pvdata[None, :, :]
          contdata = contdata[None, :, :]

          # Create a fancy WCS object for slit coordinates (and a simple one too)
          wslit, wsimp = make_slit_wcs(row, slit_coords, wavs, jslit0_spec)
          # Set the rest wavelength for this line
          wslit.wcs.restwav = (wav0*u.Angstrom).to(u.m).value
          pvheader.update(wsimp.to_header())
          pvheader.update(wslit.to_header(key='A'))
          pvheader['WEIGHT'] = rat0

          pvfile = f"{save_prefix}-{lineid}.fits"
          fits.PrimaryHDU(header=pvheader,
                          data=pvdata).writeto(pvfile, overwrite=True)
          fits.PrimaryHDU(header=pvheader,
                          data=contdata).writeto(pvfile.replace(".fits",
                                                                "-cont.fits"),
                                                 overwrite=True)
#+end_src

+ [X] How to deal with saturation?
  + Done with NaNs
+ Manual changes to alignment along-slit (j0) and across-slit (islit) 
  + 05 j0_i from 268 \to 273
    + Much better in core
  + 06 j0_i from 272 \to 274 AND islit from 263 \to 262
  + 09 j0_i 264 \to 266 AND islit 269.5 \to 268.5
    + Now almost perfect!
  + 12 j0_i 268 \to 264
    + Still not good
  + 13 j0_i 187 -> 190
  + 16 j0_i 644 \to 544
  + 17 j0_i \to 620 and invert sense of axis AND islit 483 \to 481.5
  + 18 j0_i 512 \to 492 (enormous shift) islit 496 \to 500
    + Still not great
  + 19, 20, 21 good near peak - bad in faint parts
  + 22 j0_i 446 \to 447
    + good near peak - bad in faint parts
  + 23 j0_i 448 \to 450 AND islit 476 \to 474
    + Pretty good on left side, but not on right
  + 24 good as is
  + 26 j0_i 544 \to 543 AND islit 478 \to 476
  + 27 j0_i 546 \to 536 AND islit 493 \to 492
    + Another nearly perfect one!


#+name: align-ha
| id | spec          | islit | j0_s |  j0_i | shift |
|----+---------------+-------+------+-------+-------|
| 00 | obj1003_bcrx  |   390 |  336 |   252 |    84 |
| 01 | obj1007_bcrx  |   388 |  325 |   243 |    82 |
| 02 | obj1010_bcrx  |   388 |  327 |   243 |    84 |
| 03 | obj1015_bcrx  | 390.5 |  335 |   254 |    81 |
| 04 | obj1018_bcrx  | 390.5 |  336 |   252 |    84 |
| 05 | spm112_bcrx   |   257 |  316 | 272.5 |  43.5 |
| 06 | spm116_bcrx   |   262 |  318 |   274 |    44 |
| 07 | spm119_bcrx   |   265 |  317 |   271 |    46 |
| 08 | spm122_bcrx   |   266 |  321 | 274.5 |  46.5 |
| 09 | spm125_bcrx   | 268.5 |  314 |   266 |    48 |
| 10 | spm130_bcrx   | 272.5 |  325 |   271 |    54 |
| 11 | spm135_bcrx   | 277.5 |  313 |   260 |    53 |
| 12 | spm224_bcrx   | 294.5 |  329 |   264 |    65 |
| 13 | spm230_bcrx   | 294.5 |  250 |   190 |    60 |
| 14 | spm329_bcrx   |   273 |  321 |   264 |    57 |
| 15 | spm112-2_bcrx |   531 |  509 |   589 |   -80 |
| 16 | spm018-bcrx   |   505 |  508 |   602 |   -94 |
| 17 | spm020-bcrx   | 481.5 |  529 |   622 |   -93 |
| 18 | spm023-bcrx   |   500 |  533 |   640 |  -107 |
| 19 | spm0031o_bcrx |   485 |  331 |   451 |  -120 |
| 20 | spm0037o_bcrx |   484 |  325 |   443 |  -118 |
| 21 | spm0043o_bcrx |   481 |  324 |   446 |  -122 |
| 22 | spm0049o_bcrx |   480 |  324 |   448 |  -124 |
| 23 | spm0057o_bcrx |   474 |  330 |   450 |  -120 |
| 24 | spm0110o_bcrx | 490.5 |  414 |   537 |  -123 |
| 25 | spm0116o_bcrx | 485.5 |  425 |   541 |  -116 |
| 26 | spm0124o_bcrx |   476 |  419 |   543 |  -124 |
| 27 | spm0173o_bcrx |   492 |  412 |   536 |  -124 |
| 28 | spm0179o_bcrx | 489.5 |  410 |   527 |  -117 |
| 29 | spm0186o_bcrx | 515.5 |  398 |   523 |  -125 |
#+TBLFM: $6=$4 - $5

#+call: save-slit-table(align-ha, "align-ha.tab")

#+RESULTS:
[[file:../data/align-ha.tab]]

**** DONE Refinements to the flux calibrations
CLOSED: [2020-03-31 Tue 19:20]
+ [X] Faint slits: take into account that continuum bandwidth is 90\AA whereas I+S range is only 40\AA
  + This made no discernible difference
+ [X] Bright slits: take into account saturated pixels
  + Can spot them by looking at "Scale parameters" window in DS9
    + Peak in the pixel distribution around the saturation value
  + Saturated exposures
    |    |             |   Sat |  j1 |  j2 |
    |----+-------------+-------+-----+-----|
    | 05 | spm112_bcrx | 63000 | 309 | 322 |
    | 06 | spm116_bcrx | 63000 | 311 | 321 |
    | 08 | spm122_bcrx | 63000 | 317 | 325 |
    | 12 | spm224_bcrx | 63000 | 320 | 338 |
    | 13 | spm230_bcrx | 63000 | 240 | 258 |
    | 14 | spm329_bcrx | 63000 | 313 | 330 |
    + All are from 2003 with 1800 s exposures
  + Saturated [O III] exposures
    + spm244, spm253
+ [X] Try to deal better with the halo rings  
  + Cancelled





*** Do the same for [O III]
#+begin_src python :tangle ../scripts/compare-slit-profiles-oiii.py
  import os
  import sys
  import numpy as np
  import astropy
  from astropy.table import Table, Row, hstack
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.wcs.utils import pixel_to_skycoord
  from astropy import units as u
  from astropy.coordinates import SkyCoord
  import seaborn as sns
  import turtle_utils
  from turtle_utils import (
      slit_profile,
      extract_full_profile_from_pv,
      extract_slit_profile_from_imslit,
      get_orig_folder,
      find_slit_coords,
      subtract_sky_and_trim,
      make_three_plots,
      extract_line_and_regularize,
      make_slit_wcs,
  )

  try:
      choice = int(sys.argv[1])
  except:
      choice = None

  restwavs = {}

  # Position of star
  RA0, Dec0 = 251.122998321, 23.7998586853

  saturation = 6e4


  sns.set_palette('RdPu_d', 3)

  table1 = Table.read('data/oiii-slits.tab', format="ascii.tab")
  table2 =  Table.read('data/align-oiii.tab', format="ascii.tab")
  # The align-ha table takes precedence if islit has been modified
  table1.remove_column("islit")
  # We already have spec in the ha-slits table
  table2.remove_column("spec") 
  table = hstack([table1, table2], join_type="exact")



  # Photometric reference image
  photom, = fits.open('data/imslit-oiii/imslit-median.fits')
  wphot = WCS(photom.header)
  turtle_utils.VERBOSE = 1
  neighbors = [-2, -1, 1, 2]
  for row in table:
      if choice is not None and row["id"] != choice:
          # If we asked for a single spectrum, then skip all others
          continue
      spec_hdu, = fits.open(get_orig_folder(row["run"]) + "/" + row["spec"] + ".fits")
      im_hdu, = fits.open("data/imslit/" + row["imslit"] + "-wcs.fits")
      # Mask out saturated pixels with NaN
      spec_hdu.data[spec_hdu.data > saturation] = np.nan
      # trim the edge or arrays since sometimes the outer pixels contain garbage
      spec_hdu.data = subtract_sky_and_trim(spec_hdu.data, row)
      spec_profile = extract_full_profile_from_pv(
          spec_hdu,
          wavaxis=row["wa"],
          bandwidth=None,
          linedict=restwavs)
      imslit_profile = extract_slit_profile_from_imslit(im_hdu.data, row)
      print(row)
      jslit = np.arange(len(spec_profile))
      # jslit0_spec = np.average(jslit, weights=spec_profile)
      # jslit0_imslit = np.average(jslit, weights=imslit_profile)
      # 
      # 
      if row["j0_s"] >= 0:
          jslit0_spec = row["j0_s"]
          jslit0_imslit = row["j0_i"]
      else:
          # First time around, slit alignment with image is not yet determined
          # So just look for maxima in profiles as a first guess
          jslit0_spec = np.nanargmax(spec_profile)
          jslit0_imslit = np.nanargmax(imslit_profile)
          row["shift"] = jslit0_spec - jslit0_imslit
      print(jslit0_spec, jslit0_imslit, 'shift =', row["shift"])
      slit_coords = find_slit_coords(row, im_hdu.header, spec_hdu.header)
      calib_profile = slit_profile(slit_coords['RA'], slit_coords['Dec'],
                                   photom.data, wphot)


      # Look at neighboring slit positions
      nb_calib_profiles = {}
      for nb in neighbors:
          nbrow = Table(row)[0]   # This is the trick to get a copy of the row
          nbrow["islit"] += nb
          nb_slit_coords = find_slit_coords(nbrow, im_hdu.header, spec_hdu.header)
          nb_calib_profiles[nb] = slit_profile(
              nb_slit_coords['RA'], nb_slit_coords['Dec'], photom.data, wphot)


      # Offset in arcsec along the slit
      slit_points = (np.arange(len(spec_profile)) - jslit0_spec)*slit_coords["ds"]
      # Extra correction for bg from pixels > 60 arcsec from peak
      bg_mask = np.abs(np.abs(slit_points) - 60.0) < 10.0
      if np.any(bg_mask):
          bg_correction = np.mean(spec_profile[bg_mask])
      else:
          # If the slit is not long enough, just take the pixels near the ends
          bg_correction = (spec_profile[:5].mean() + spec_profile[-5:].mean())/2.0
      spec_profile -= bg_correction

      # Take a window about profile peak to normalize spec_profile
      jslice0 = slice(jslit0_spec-10, jslit0_spec+10)
      # propagate saturated pixels to the calibration profile
      calib_profile_nan = calib_profile.copy()
      calib_profile_nan[~np.isfinite(spec_profile)] = np.nan
      rat0 = np.nansum(spec_profile[jslice0])/np.nansum(calib_profile_nan[jslice0])
      print('Coarse calibration: ratio =', rat0)
      spec_profile /= rat0


      # Make a figure comparing the profiles
      plt_prefix = f"figs/{row.index:03d}-calib-oiii"
      ratio = make_three_plots(spec_profile, calib_profile, plt_prefix,
                               slit_points=slit_points,
                               neighbors=nb_calib_profiles,
                               db=row, sdb=slit_coords, linelabel="[O III]")

      # Write out the flux-calibrated spectra
      spec_hdu.data -= bg_correction
      spec_hdu.data /= rat0
      save_prefix = f"data/pvextract-oiii/{row.index:03d}-{row['spec']}"
      # The default header has minimal changes from the original
      pvheader = fits.Header(spec_hdu.header, copy=True)

      for lineid, wav0 in restwavs.items():
          pvdata, contdata, wavs = extract_line_and_regularize(
              spec_hdu.data, WCS(spec_hdu.header), wav0, row,
              dw=4.0, dwbg_in=3.0, dwbg_out=4.0)
          pvdata = pvdata[None, :, :]
          contdata = contdata[None, :, :]

          # Create a fancy WCS object for slit coordinates (and a simple one too)
          wslit, wsimp = make_slit_wcs(row, slit_coords, wavs, jslit0_spec)
          # Set the rest wavelength for this line
          wslit.wcs.restwav = (wav0*u.Angstrom).to(u.m).value
          pvheader.update(wsimp.to_header())
          pvheader.update(wslit.to_header(key='A'))
          pvheader['WEIGHT'] = rat0

          pvfile = f"{save_prefix}-{lineid}.fits"
          fits.PrimaryHDU(header=pvheader,
                          data=pvdata).writeto(pvfile, overwrite=True)
          fits.PrimaryHDU(header=pvheader,
                          data=contdata).writeto(pvfile.replace(".fits",
                                                                "-cont.fits"),
                                                 overwrite=True)
#+end_src

#+RESULTS:

First run through, try to determine j0_s, j0_i, and shift automatically

#+name: align-oiii
| id | spec              | islit | j0_s | j0_i | shift |
|----+-------------------+-------+------+------+-------|
| 00 | spm243-244_bcrx   |   275 |  368 |  316 |    52 |
| 01 | spm252_bcrx       |   280 |  363 |  308 |    55 |
| 02 | spm257_bcrx       |   285 |  329 |  271 |    58 |
| 03 | spm244_bcrx       |   275 |  355 |  304 |    51 |
| 04 | spm253_bcrx       |   280 |  360 |  304 |    56 |
| 05 | spm258_bcrx       |   285 |  330 |  271 |    59 |
| 06 | spm294_bcrx_oiii  |   262 |  133 |  238 |  -105 |
| 07 | spm297_bcrx       |   265 |  292 |  244 |    48 |
| 08 | spm114_bcrx_oiii  |   533 |   81 |  600 |  -519 |
| 09 | spm0033_bcrx_oiii | 485.5 |  200 |  444 |  -244 |
| 10 | spm0039_bcrx_oiii |   481 |  197 |  446 |  -249 |
| 11 | spm0045o_bcrx     |   479 |  323 |  447 |  -124 |
| 12 | spm0051_bcrx_oiii |   476 |  196 |  446 |  -250 |
| 13 | spm0059_oiii      |   475 |  168 |  418 |  -250 |
| 14 | spm0112_bcrx_oiii |   486 |  212 |  532 |  -320 |
| 15 | spm0118_bcrx_oiii |   482 |  221 |  548 |  -327 |
| 16 | spm0126_bcrx_oiii | 476.5 |  218 |  541 |  -323 |
| 17 | spm0175o_bcrx     | 489.5 |  410 |  529 |  -119 |
| 18 | spm0181_bcrx_oiii |   480 |  215 |  536 |  -321 |
| 19 | spm0188_oiii      |   508 |  176 |  502 |  -326 |
#+TBLFM: $6=$4 - $5

#+call: save-slit-table(align-oiii, "align-oiii.tab")

#+RESULTS:
[[file:../data/align-oiii.tab]]

+ 00 - j0_i 308 \to 318 and islit 275 \to 273
** Test the heliocentric correction machinery
:PROPERTIES:
:ID:       7E76623E-8C5F-4635-A8CA-BA29675E0C02
:END:
+ This is completely re-implemented using astropy.coordinates instead of pyslalib.slalib
+ These are largely similar to Teresa's values, but there are differences of up to 0.5 km/s
+ Although I managed to get the old method working as well
  + In the table, ~Helio~ is the astropy result while ~Helio2~ is the slalib result
  + Apart from the opposite sign convention, there are small differences.  Teresa's values seem more similar to the slalib ones (usually within 0.1 km/s)
+ *Conclusion* stick with slalib for now

#+BEGIN_SRC python :return outtab
  import sys
  import os
  import glob
  from astropy.io import fits
  import astropy.coordinates as coord
  from astropy.wcs import WCS
  from astropy.time import Time
  import astropy.units as u
  sys.path.append('/Users/will/Dropbox/OrionWest')
  from helio_utils import helio_topo_from_header

  outtab = [['File', 'Date', 'JD', 'ST', 'RA', 'Dec', 'Helio', 'Helio2'], None]
  speclist = list(glob.glob('../data/pvextract/0*-ha.fits')) + ["/Users/will/Dropbox/Papers/LL-Objects/NGC6210/Varias-temporadas/spm408_bcrx_sii.fits"]
  spm = coord.EarthLocation.of_site("spm")
  for fn in sorted(speclist):
      hdr = fits.open(fn)[0].header
      try: 
          w = WCS(hdr, key="A")
      except:
          w = WCS(hdr)
      try: 
          _, c = w.pixel_to_world(1, 1, 1)
      except:
          c = coord.SkyCoord(f"{hdr['RA']} {hdr['DEC']}", unit=(u.hourangle, u.deg))
      time = Time(w.wcs.dateobs)
      heliocorr = c.radial_velocity_correction(
          'barycentric', obstime=time, location=spm)
      try:
          heliocorr2 = helio_topo_from_header(hdr, usewcs='A')
      except:
          heliocorr2 = 0.0
      id_, _ = os.path.splitext(os.path.basename(fn))
      outtab.append([id_, time.iso.split()[0],
                     time.mjd,
                     hdr.get('ST'), hdr.get('RA'), hdr.get('DEC'),
                     '{:.2f}'.format(heliocorr.to(u.km/u.s).value),
                     '{:.2f}'.format(heliocorr2),
      ])
#+END_SRC

#+RESULTS:
| File                 |       Date |      JD |          ST |         RA |        Dec |  Helio | Helio2 |
|----------------------+------------+---------+-------------+------------+------------+--------+--------|
| 000-obj1003_bcrx-ha  | 1998-06-28 | 50992.0 |        None |   16:44:27 |  +23:49:18 | -10.23 |  10.96 |
| 001-obj1007_bcrx-ha  | 1998-06-28 | 50992.0 |        None |   16:44:27 |  +23:49:30 | -10.23 |  10.96 |
| 002-obj1010_bcrx-ha  | 1998-06-28 | 50992.0 |        None |   16:44:26 |  +23:49:41 | -10.23 |  10.96 |
| 003-obj1015_bcrx-ha  | 1998-06-28 | 50992.0 |        None |   16:44:26 |  +23:49:07 | -10.23 |  10.96 |
| 004-obj1018_bcrx-ha  | 1998-06-28 | 50992.0 |        None |   16:44:25 |  +23:49:00 | -10.23 |  10.96 |
| 005-spm112_bcrx-ha   | 2003-06-05 | 52795.0 |    12:52:39 | 16:44:33.1 |  +23:48:04 |  -2.70 |   2.72 |
| 006-spm116_bcrx-ha   | 2003-06-05 | 52795.0 |    13:39:05 | 16:44:34.6 |  +23:47:59 |  -2.70 |   2.77 |
| 007-spm119_bcrx-ha   | 2003-06-05 | 52795.0 |    14:19:50 | 16:44:33.2 |  +23:47:55 |  -2.70 |   2.81 |
| 008-spm122_bcrx-ha   | 2003-06-05 | 52795.0 |    15:00:09 | 16:44:33.4 |  +23:47:52 |  -2.70 |   2.87 |
| 009-spm125_bcrx-ha   | 2003-06-05 | 52795.0 |    15:40:59 | 16:44:33.6 |  +23:47:51 |  -2.70 |   2.93 |
| 010-spm130_bcrx-ha   | 2003-06-05 | 52795.0 |    16:58:37 | 16:44:37.3 |  +23:47:53 |  -2.70 |   3.06 |
| 011-spm135_bcrx-ha   | 2003-06-05 | 52795.0 |    17:33:41 | 16:44:39.6 |  +23:47:56 |  -2.70 |   3.11 |
| 012-spm224_bcrx-ha   | 2003-10-16 | 52928.0 |    20:14:28 | 16:44:35.5 |  +23:48:04 | -14.08 |  14.26 |
| 013-spm230_bcrx-ha   | 2003-10-16 | 52928.0 |    21:04:08 | 16:44:33.0 |  +23:48:17 | -14.08 |  14.30 |
| 014-spm329_bcrx-ha   | 2003-10-17 | 52929.0 |    21:03:29 | 16:44:41.7 |  +23:48:16 | -13.79 |  14.00 |
| 015-spm112-2_bcrx-ha | 2011-05-21 | 55702.0 |    13:13:44 | 16:44:58.3 |  +23:46:31 |   2.51 |  -2.50 |
| 016-spm018-bcrx-ha   | 2013-07-06 | 56479.0 |    16:47:45 | 16:45:07.1 | 23:46:20.0 | -12.53 |  12.90 |
| 017-spm020-bcrx-ha   | 2013-07-06 | 56479.0 |    17:26:00 | 16:45:05.8 | 23:46:20.0 | -12.53 |  12.96 |
| 018-spm023-bcrx-ha   | 2013-07-06 | 56479.0 |    18:04:36 | 16:45:05.9 | 23:46:21.0 | -12.53 |  13.02 |
| 019-spm0031o_bcrx-ha | 2015-08-18 | 57252.0 | 18:02:23.50 | 16:45:10.6 | 23:46:44.0 | -20.04 |  20.40 |
| 020-spm0037o_bcrx-ha | 2015-08-18 | 57252.0 | 18:54:04.96 | 16:45:09.9 | 23:46:45.0 | -20.04 |  20.47 |
| 021-spm0043o_bcrx-ha | 2015-08-18 | 57252.0 | 19:35:53.81 | 16:45:08.9 | 23:46:49.0 | -20.04 |  20.53 |
| 022-spm0049o_bcrx-ha | 2015-08-18 | 57252.0 | 20:13:41.00 | 16:45:08.1 | 23:46:54.0 | -20.04 |  20.57 |
| 023-spm0057o_bcrx-ha | 2015-08-18 | 57252.0 | 20:59:43.55 | 16:45:08.1 | 23:46:59.0 | -20.04 |  20.61 |
| 024-spm0110o_bcrx-ha | 2015-08-19 | 57253.0 | 17:48:56.19 | 16:45:08.7 | 23:46:43.0 | -20.10 |  20.44 |
| 025-spm0116o_bcrx-ha | 2015-08-19 | 57253.0 | 18:47:13.74 | 16:45:08.6 | 23:46:44.0 | -20.10 |  20.52 |
| 026-spm0124o_bcrx-ha | 2015-08-19 | 57253.0 | 20:19:25.85 | 16:45:05.1 | 23:46:52.0 | -20.10 |  20.63 |
| 027-spm0173o_bcrx-ha | 2015-08-20 | 57254.0 | 17:28:59.83 | 16:45:07.3 | 23:46:42.0 | -20.16 |  20.46 |
| 028-spm0179o_bcrx-ha | 2015-08-20 | 57254.0 | 18:15:15.41 | 16:45:06.5 | 23:46:41.0 | -20.16 |  20.53 |
| 029-spm0186o_bcrx-ha | 2015-08-20 | 57254.0 | 19:36:02.64 | 16:45:05.7 | 23:46:47.0 | -20.16 |  20.64 |
| spm408_bcrx_sii      | 2004-06-16 | 53172.0 |    15:59:28 |   16:44:37 |  +23:47:35 |  -6.61 |   0.00 |


Try the same but for the HST images
#+BEGIN_SRC python :return outtab
  import sys
  import os
  import glob
  from astropy.io import fits
  import astropy.coordinates as coord
  from astropy.wcs import WCS
  from astropy.time import Time
  import astropy.units as u
  sys.path.append('/Users/will/Dropbox/OrionWest')
  from helio_utils import helio_topo_from_header

  outtab = [['File', 'Date', 'JD', 'ST', 'RA', 'Dec', 'Helio', 'Helio2'], None]
  speclist = glob.glob('../data/hst-cr-combine/turtle-F*')
  spm = coord.EarthLocation.of_site("ctio")
  for fn in sorted(speclist):
      hdr = fits.open(fn)['SCI'].header
      w = WCS(hdr)
      c = w.pixel_to_world(1, 1)
      time = Time(hdr['DATE'])
      heliocorr = c.radial_velocity_correction(
          'barycentric', obstime=time, location=spm)
      heliocorr2 = 0.0 # helio_topo_from_header(hdr)
      id_, _ = os.path.splitext(os.path.basename(fn))
      outtab.append([id_, time.iso.split()[0],
                     time.mjd,
                     hdr.get('ST'), hdr.get('RA', 0.0), hdr.get('DEC', 0.0),
                     '{:.2f}'.format(heliocorr.to(u.km/u.s).value),
                     '{:.2f}'.format(heliocorr2),
      ])
#+END_SRC

#+RESULTS:
| File              |       Date |                 JD | ST   |  RA | Dec | Helio | Helio2 |
|-------------------+------------+--------------------+------+-----+-----+-------+--------|
| turtle-F185W-2004 | 2009-02-19 |  54881.48987268518 | None | 0.0 | 0.0 | 20.99 |   0.00 |
| turtle-F375N-1997 | 2009-04-08 | 54929.328877314816 | None | 0.0 | 0.0 | 15.36 |   0.00 |
| turtle-F437N-1997 | 2009-04-08 |  54929.32712962963 | None | 0.0 | 0.0 | 15.37 |   0.00 |
| turtle-F487N-1997 | 2009-04-08 |  54929.32780092592 | None | 0.0 | 0.0 | 15.37 |   0.00 |
| turtle-F502N-1997 | 2009-04-08 |  54929.32827546296 | None | 0.0 | 0.0 | 15.37 |   0.00 |
| turtle-F502N-1998 | 2009-04-09 |  54930.48694444444 | None | 0.0 | 0.0 | 14.74 |   0.00 |
| turtle-F547M-1997 | 2008-12-20 |  54820.21611111111 | None | 0.0 | 0.0 |  8.72 |   0.00 |
| turtle-F555W-1998 | 2008-12-26 |  54826.08001157407 | None | 0.0 | 0.0 | 10.40 |   0.00 |
| turtle-F656N-1997 | 2009-04-08 |  54929.32859953704 | None | 0.0 | 0.0 | 15.37 |   0.00 |
| turtle-F658N-1998 | 2009-04-09 | 54930.490115740744 | None | 0.0 | 0.0 | 14.73 |   0.00 |

So these are positive, which means that the observed velocity should be more blueshifted: -55 km/s for the F437N that may be contaminated by H gamma: 4342 (1 - 55/3e5) = 4341.2 \AA

** Write PV spectra with velocities and slit offsets
:PROPERTIES:
:ID:       2261B771-A00A-408E-9569-9E68079034EB
:END:
+ This is based on [[id:510C5A10-37E2-4C7B-9BB7-D63D01022A2D][Write PV spectra with WCS in arcsec relative to star]] from the Owl project
+ But it is more complicated since we have different PAs for the slits
  1. Find separation from star of all points
  2. Take minimum of these as reference point
  3. Slit axis is then separation from reference point
  4. Also record slit PA and slit offset (separation of reference point from star) and offset PA (perp to slit PA)
+ We want the slit axis to increase in direction ...
  + to N for nearly vertical slits
  + to E for nearly horizontal slits
+ *Update* [2020-03-27 Fri]
  + Add support for the weak lines
  + See [[id:EC2AD06F-94C3-403B-B1BE-7EF4F0D67EA1][Weak lines in spectra]]
  + However, this only works for He II, since C II and He I are outside of the wavelength window of their respective parent line ([N II] and [O III])

#+BEGIN_SRC python :tangle ../scripts/turtle-pv-relative.py
  import glob
  import sys
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.wcs.utils import pixel_to_skycoord, skycoord_to_pixel
  import astropy.units as u
  from astropy.coordinates import SkyCoord
  sys.path.append('/Users/will/Dropbox/OrionWest')
  from helio_utils import waves2vels

  # Center on central star of NGC 6210
  RA0, Dec0 = 251.122998321, 23.7998586853
  c0 = SkyCoord(RA0, Dec0, unit="deg")

  wav0_dict = {
      'oiii': 5006.84,
      'ha': 6562.79,
      'nii': 6583.45,
      'nii_s': 6548.05,
      'heii': 6560.10,
      'cii': 6578.15,
      'hei': 5015.68,
  }

  # Which spectrum file do we *really* need to look in?
  parent = {
      'oiii': 'oiii',
      'ha': 'ha',
      'nii': 'nii',
      'nii_s': 'nii_s',
      'heii': 'ha',
      'cii': 'nii',
      'hei': 'oiii',
  }

  try:
      lineid = sys.argv[1]
  except:
      sys.exit(f"Usage: {sys.argv[0]} {{{'|'.join(wav0_dict)}}}")

  datadir = "pvextract-oiii" if lineid in ["oiii", "hei"] else "pvextract"

  speclist = glob.glob(f'data/{datadir}/*-{parent[lineid]}.fits')
  # Rest wavelength in meters
  wav0 = 1e-10*wav0_dict[lineid]

  for fn in speclist:
      print('Processing', fn)
      spechdu, = fits.open(fn)
      wspec = WCS(spechdu.header, key='A')

      # Eliminate degenerate 3rd dimension from data array and trim off bad bits
      spec2d = spechdu.data[0]

      # Convert to heliocentric velocity
      [[wav1, _, _], [wav2, _, _]] = wspec.all_pix2world([[0, 0, 0], [1, 0, 0]], 0)
      [v1, v2] = waves2vels(np.array([wav1, wav2]), wav0, spechdu.header, usewcs="A")


      # sequence of pixels along the slit spatial axis
      ipixels = np.arange(wspec.array_shape[1])
      # sky coordinate that corresponds to each pixel
      coords = pixel_to_skycoord(ipixels, 0, wcs=wspec)
      # separation of each pixel from star
      radii = c0.separation(coords).to(u.arcsec).value
      # reference pixel has minimum separation from star
      iref = radii.argmin()
      cref = coords[iref]
      # slit offset is minimum of radii
      offset = radii.min()
      # but sign depends on PA
      pa_offset = c0.position_angle(cref)
      if np.sin(pa_offset) < 0.0:
          offset *= -1.0

      # separation from reference pixel gives coordinate along slit
      s = cref.separation(coords).to(u.arcsec).value
      # inter-pixel separation
      ds = np.abs(np.diff(s)).mean()
      # PA of slit
      pa = cref.position_angle(coords[-1])
      if np.cos(pa) < 0.0:
          # Make sure positive offset is to N
          ds *= -1.0
          # And flip slit PA to compensate
          pa += np.pi*u.rad

      wnew = WCS(naxis=2)
      wnew.wcs.ctype = ['VHEL', 'LINEAR']
      wnew.wcs.crpix = [1, iref+1]
      wnew.wcs.cunit = ['km/s', 'arcsec']
      wnew.wcs.crval = [v1.to('km/s').value, 0.0]
      wnew.wcs.cdelt = [(v2 - v1).to('km/s').value, ds]

      newsuffix = f"-PA{int(pa.to(u.deg).value)%360:03d}-sep{int(offset):+04d}"    
      newhdr = wnew.to_header()
      newhdr["PA"] = pa.to(u.deg).value, "Position angle of slit, degrees"
      newhdr["OFFSET"] = offset, "Perpendicular offset of slit from star, arcsec"
      newhdr["WEIGHT"] = spechdu.header["WEIGHT"]
      new_fn = fn.replace(f'data/{datadir}/', 'data/PVoffset/')
      new_fn = new_fn.replace(parent[lineid], lineid)
      new_fn = new_fn.replace('.fits', newsuffix + '.fits')
      print('Writing', new_fn)
      fits.PrimaryHDU(data=spec2d, header=newhdr).writeto(new_fn, overwrite=True)

#+END_SRC


** Finally make the spectral maps
+ Again, initially copied from Owl version
  + [[id:B7F104C4-6CAA-4462-81A9-FBCB4C86BDE2][Construct spectral maps @ teresa-owl.org]]
+ Output image is same as in [[id:4FA9561B-6694-4D6F-98DE-320EB1FEAB0E][Re-gridding images]] above
  + 512x512 with 0.3 arcsec pixels
+ To deal with saturated pixels:
  + Make an array of per-pixel weights
  + Set profile and weight to zeros wherever there are NaNs


#+BEGIN_SRC python :tangle ../scripts/turtle-spectral-map.py
  import glob
  import sys
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.wcs.utils import pixel_to_skycoord, skycoord_to_pixel
  import astropy.units as u
  sys.path.append('/Users/will/Dropbox/OrionWest')
  from helio_utils import helio_topo_from_header, vels2waves

  wav0_dict = {
      'oiii': 5006.84,
      'ha': 6562.79,
      'nii': 6583.45,
      'nii_s': 6548.05,
      'heii': 6560.10,
      'cii': 6578.15,
      'hei': 5015.68,
  }

  # Which spectrum file do we *really* need to look in?
  parent = {
      'oiii': 'oiii',
      'ha': 'ha',
      'nii': 'nii',
      'nii_s': 'nii_s',
      'heii': 'ha',
      'cii': 'nii',
      'hei': 'oiii',
  }


  try:
      line_id = sys.argv[1]
  except IndexError:
      print('Usage: {} LINE_ID [VRANGE [OUTPUT_FOLDER]]'.format(sys.argv[0]))

  try:
      vrange = sys.argv[2]
  except IndexError:
      vrange = None

  try:
      outdir = sys.argv[3]
  except IndexError:
      outdir = "maps"

  print("(line_id, vrange, outdir) = ", line_id, vrange, outdir)

  def waves2pixels(waves, w):
      n = len(waves)
      pixels, _, _ = w.all_world2pix(waves, [RA0]*n, [Dec0]*n, 0)
      return pixels.astype(int)

  datadir_dict = {
      # special cases
      "oiii": "data/pvextract-oiii",
  }
  datadir = datadir_dict.get(parent[line_id], "data/pvextract")

  # First set up WCS for the output image
  #
  NX, NY = 512, 512
  pixel_scale = 0.3               # arcsec
  dRA, dDec = -pixel_scale/3600., pixel_scale/3600.
  # Center on central star of NGC 6210
  RA0, Dec0 = 251.122998321, 23.7998586853
  w = WCS(naxis=2)
  w.wcs.cdelt = [dRA, dDec]
  w.wcs.crpix = [0.5*(1 + NX), 0.5*(1 + NY)]
  w.wcs.crval = [RA0, Dec0]
  w.wcs.ctype = ['RA---TAN', 'DEC--TAN']
  w.wcs.cunit = ['deg', 'deg']

  # Arrays to hold the output image
  outimage = np.zeros((NY, NX))
  outweights = np.zeros((NY, NX))

  # Use a slightly wider slit than is strictly accurate 
  slit_width = 1.0                
  slit_pix_width = slit_width/pixel_scale

  speclist = glob.glob(f'{datadir}/*-{parent[line_id]}.fits')

  # Window widths for line and BG
  dwline = 7.0*u.Angstrom

  for fn in speclist:
      print('Processing', fn)
      spechdu, = fits.open(fn)
      wspec = WCS(spechdu.header, key='A')

      # Trim to good portion of the slit
      goodslice = slice(None, None)

      # Find per-slit weight
      slit_weight = spechdu.header['WEIGHT']

      # Find sign of delta wavelength
      dwav = wspec.wcs.get_cdelt()[0]*wspec.wcs.get_pc()[0, 0]
      sgn = int(dwav/abs(dwav))         # Need to take slices backwards if this is negative

      # Eliminate degenerate 3rd dimension from data array and trim off bad bits
      spec2d = spechdu.data[0]

      # Change to get rest wavelength from dict instead of from FITS
      # header, so we can treat minor lines too
      wavrest = (wav0_dict[line_id]*u.Angstrom).to(u.m)

      # Find wavelength limits for line extraction window
      if vrange is None:
          # Original case: use a window of wavelength full width dwline
          waves =  wavrest + np.array([-0.5, 0.5])*dwline
      else:
          # Extract velocity limits from the vrange command line argument
          # vrange should be of a form like '-100+100' or '+020+030'
          v1, v2 = float(vrange[:4]), float(vrange[-4:])
          print('Velocity window:', v1, 'to', v2)
          waves = vels2waves([v1, v2], wavrest,  spechdu.header, usewcs="A")
      print('Wavelength window: {:.2f} to {:.2f}'.format(*waves.to(u.Angstrom)))

      # Find pixel indices for line extraction window
      i1, i2 = waves2pixels(waves, wspec)
      print('Pixel window:', i1, 'to', i2, 'in direction', sgn)

      # Extract profile for this wavelength or velocity window
      profile = spec2d[:, i1:i2:sgn].sum(axis=-1)

      # Find celestial coordinates for each pixel along the slit
      NS = len(profile)
      slit_coords = pixel_to_skycoord(range(NS), [0]*NS, wspec, 0)

      # Trim off bad parts of slit
      profile = profile[goodslice]
      slit_coords = slit_coords[goodslice]

      # Deal with NaNs in profile:
      # - Make an array of per-pixel weights
      wp = np.ones_like(profile)*slit_weight
      # - Set profile and weight to zeros wherever there are NaNs
      badmask = ~np.isfinite(profile)
      profile[badmask] = 0.0
      wp[badmask] = 0.0

      # Convert to pixel coordinates in output image
      xp, yp = skycoord_to_pixel(slit_coords, w, 0)

      for x, y, bright, wt in zip(xp, yp, profile, wp):
          # Find output pixels corresponding to corners of slit pixel
          # (approximate as square)
          i1 = int(0.5 + x - slit_pix_width/2)
          i2 = int(0.5 + x + slit_pix_width/2)
          j1 = int(0.5 + y - slit_pix_width/2)
          j2 = int(0.5 + y + slit_pix_width/2)
          # Make sure we don't go outside the output grid
          i1, i2 = max(0, i1), max(0, i2)
          i1, i2 = min(NX, i1), min(NX, i2)
          j1, j2 = max(0, j1), max(0, j2)
          j1, j2 = min(NY, j1), min(NY, j2)
          # Fill in the square
          outimage[j1:j2, i1:i2] += bright*wt
          outweights[j1:j2, i1:i2] += wt

  # Save everything as different images in a single fits file:
  # 1. The sum of the raw slits 
  # 2. The weights
  # 3. The slits normalized by the weights
  if vrange is None:
      label = line_id + '-allvels'
  else:
      label = line_id + vrange

  outfile = f'data/{outdir}/turtle-slits-{label}.fits'
  print("Writing to", outfile)
  fits.HDUList([
      fits.PrimaryHDU(),
      fits.ImageHDU(header=w.to_header(), data=outimage, name='slits'),
      fits.ImageHDU(header=w.to_header(), data=outweights, name='weight'),
      fits.ImageHDU(header=w.to_header(), data=outimage/outweights, name='scaled'),
      ]).writeto(outfile, overwrite=True)
#+END_SRC



*** Make the maps
#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps.sh :eval no
  ranges='+030+040 +020+030 +010+020 +000+010 -010+000 -020-010 -030-020 -040-030 -050-040 -060-050 -070-060 -080-070 -090-080'
  # blueranges='-030-010 -050-030 -070-050'
  # farblueranges='-090-070 -110-090 -130-110'
  # for vrange in $redranges $blueranges $farblueranges; do
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py ha $vrange
      python scripts/turtle-spectral-map.py nii $vrange
  done
#+END_SRC

Extras to widen the range
#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-extras.sh :eval no
  ranges='+040+050 -100-090 -110-100'
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py ha $vrange
      python scripts/turtle-spectral-map.py nii $vrange
  done
#+END_SRC

And wider channels of 20 km/s
#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-20.sh :eval no
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py ha $vrange maps20
      python scripts/turtle-spectral-map.py nii $vrange maps20
  done
#+END_SRC


And [O III]
#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-oiii-20.sh :eval no
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  # blueranges='-030-010 -050-030 -070-050'
  # farblueranges='-090-070 -110-090 -130-110'
  # for vrange in $redranges $blueranges $farblueranges; do
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py oiii $vrange maps-oiii-20
  done
#+END_SRC

And He II
#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-heii.sh :eval no
  ranges='-020+000 -040-020 -060-040 -080-060 -080+000'
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py heii $vrange maps20
  done
#+END_SRC

#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-heii-centered.sh :eval no
  ranges='-030-010 -050-030 -070-050'
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py heii $vrange maps20
  done
#+END_SRC

#+BEGIN_SRC sh :tangle ../scripts/make-isovel-maps-heii-wide-centered.sh :eval no
  ranges='-060-020'
  for vrange in $ranges; do
      python scripts/turtle-spectral-map.py heii $vrange maps20
  done
#+END_SRC


*** Look at some of the maps
Central velocities in Ha
#+BEGIN_SRC sh :dir ../data/maps :results silent
  DS9=velmaps
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-ha-030-020.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-ha-040-030.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-ha-050-040.fits[3]
#+END_SRC

Central velocities in [N II]
#+BEGIN_SRC sh :dir ../data/maps :results silent
  DS9=velmaps
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-030-020.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-040-030.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-050-040.fits[3]
#+END_SRC

Near red velocities in Ha
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-ha+000+010.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-ha-010+000.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-ha-020-010.fits[3]
#+END_SRC

Near red velocities in [N II]
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-nii+000+010.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-nii-010+000.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-nii-020-010.fits[3]
#+END_SRC

Blue velocities in Ha
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-ha-070-060.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-ha-080-070.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-ha-090-080.fits[3]
#+END_SRC

Blue velocities in [N II]
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-nii-070-060.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-nii-080-070.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-nii-090-080.fits[3]
#+END_SRC

Red velocities in [N II]
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-nii+030+040.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-nii+020+030.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-nii+010+020.fits[3]
#+END_SRC

Near blue velocities in [N II]
#+BEGIN_SRC sh :dir ../data/maps :results silent
xpaset -p ds9 rgb red
xpaset -p ds9 fits $PWD/turtle-slits-nii-050-040.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/turtle-slits-nii-060-050.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/turtle-slits-nii-070-060.fits[3]
#+END_SRC


Central velocities in [O III] - 20 km/s channels
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=velmaps
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-020+000.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-040-020.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-060-040.fits[3]
#+END_SRC

Blue velocities in [O III] - 20 km/s channels
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=velmaps
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-080-060.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-100-080.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-120-100.fits[3]
#+END_SRC

Red velocities in [O III] - 20 km/s channels
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=velmaps
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+040+060.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+020+040.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+000+020.fits[3]
#+END_SRC

+ Note that it is sometimes necessary to circumvent the XPA nameserver if it has stopped working
  + Instead of using the title of the DS9 instance, you can get its number from menu item File->XPA->Information
  + Use the value of XPA_METHOD

#+BEGIN_SRC sh :dir ../data/maps20 :results silent
  DS9=oiii-images
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-030-010.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-050-030.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-070-050.fits[3]
#+END_SRC


Central velocities in [N II] - 20 km/s channels
#+BEGIN_SRC sh :dir ../data/maps20 :results silent
  DS9=7f000001:49265
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-020+000.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-040-020.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-060-040.fits[3]
#+END_SRC





** Problematic slits
+ spm119 - I have it at ~sep = +008~ but it looks like it is between +007 and +004
+ 

** Discrete features in the spectra

*** Strange case of NW knot
:PROPERTIES:
:ID:       848F1AAD-9237-4C53-A96A-0D7831C8C018
:END:
+ This is red-shifted in [N II]: 
  - V = +17 in slit G
  - V = +19 in slit H
+ But no red-shifted [O III] components
  + *But yes there are!!!* although for some reason I never measured them
    - V = +13 in slit G
    - V = +10 in slit H
  + No, the reason is that the lobe flows deliberately omit features associated with the knot complexes, /except/ for the N knot
+ However, the N knot component looks like it might be the same as lobe system IV+ in slits I and J
*** Summary of flow axes between all features
+ There are at least 4 axes: A, B, C, D
  + Axis A
    + PA red \approx -30 - -20
    + PA blue \approx 150 - 160
    + Low inclination to plane of sky  
    + Includes:
      1. Fast peanut shell
      2. Lobe flow I+, VII+, VIII+ \to I-, VIII-
         - 
      3. Possibly: knot complexes SE Blue and N(W) Red
         - Alternatively, they could be axis D
      4. Possibly: The NW Knot, but see [[id:848F1AAD-9237-4C53-A96A-0D7831C8C018][above]]
         - Could also be axis D
      5. N knot (which is same as system I+)
  + Axis B
    + PA red \approx 70
    + PA blue \approx 250
    + Inclined by \approx 45 deg
    + Includes
      1. Inner shell B
      2. Intermediate shell
      3. Knot complexes: SW Red and NE Blue
  + Axis C
    + PA red = 175
    + PA blue = 355
    + Includes
      1. Lobe system II
  + Axis D
    + Includes:
      1. The NW Knot (probably)
      2. Knot complexes SE Blue and N(W) Red (probably)
      3. Lobe system IV
      4. 
  + Peanut shell has A and B
  + Intermediate shell has axis B
  + Knot complexes
**** Axis alignments
+ Put the coordinates in cartesian form, so we can take average
  + x : LOS : sin(i)
  + y : East : cos(i) sin(PA)
  + z : North : cos(i) cos(PA)
+ Working backwards
  + PA = arctan2(y, z)
  + i = arctan2(x, hypot(y, z))
+ N is the unit vector 
|     |   PA |   i | N                          | abs(N) |   \theta |
|-----+------+-----+----------------------------+--------+-----|
| A   |  -20 | +22 | [0.3746, -0.3171, 0.8713]  | 1.0000 | 19. |
| C   |  -10 | -26 | [-0.4384, -0.1561, 0.8851] | 1.0000 | 37. |
| D   |  -60 | +18 | [0.3090, -0.8236, 0.4755]  | 0.9999 | 32. |
|-----+------+-----+----------------------------+--------+-----|
| B   |  +65 | -40 | [-0.6428, 0.6943, 0.3237]  | 1.0000 | 97. |
|-----+------+-----+----------------------------+--------+-----|
| ACD |      |     | [0.0817, -0.4323, 0.7440]  | 0.8643 | 30. |
| ACD | -30. |  5. | [0.0945, -0.5002, 0.8608]  | 1.0001 | 0e0 |
#+TBLFM: $4=[sin($3), cos($3) sin($2), cos($3) cos($2)];f4::$5=rms($-1) sqrt(3);f4::$6=re(arccos($4 @7$4));f0::@6$4=reducer(add, @I..@II)/3;f4::@7$2=arctan2(mrow($4, 2), mrow($4, 3));f0::@7$3=arctan2(mrow($4, 1), hypot(mrow($4, 2), mrow($4, 3)));f0::@7$4=@-1/@-1$5;f4
+ The final row here is the average of the A, C, and D northern arms
+ \theta column gives angle between each axis and the \langle{}ACD\rangle average axis
+ For B, \theta = 90 deg, so very close to perpendicular
  + Within the errors, this is perpendicular
+ So the A, C, D have an average \theta = 27 +/- 5
+ Pair-wise angles
|   |                            | [0.3746, -0.3171, 0.8713] | [-0.6428, 0.6943, 0.3237] | [-0.4384, -0.1561, 0.8851] | [0.3090, -0.8236, 0.4755] |
|---+----------------------------+---------------------------+---------------------------+----------------------------+---------------------------|
| A | [0.3746, -0.3171, 0.8713]  |                         0 |                        79 |                         48 |                        37 |
| B | [-0.6428, 0.6943, 0.3237]  |                        79 |                         0 |                         62 |                        51 |
| C | [-0.4384, -0.1561, 0.8851] |                        48 |                        62 |                          0 |                        65 |
| D | [0.3090, -0.8236, 0.4755]  |                        37 |                        51 |                         65 |                         0 |
#+TBLFM: @2$3..@5$6=re(arccos(abs(@1 * $2))) ; %d
+ Neatening up:
  |  A |    |    |    |     |
  | 79 |  B |    |    |     |
  | 48 | 62 |  C |    |     |
  | 37 | 51 | 65 |  D |     |
  |----+----+----+----+-----|
  | 19 | 83 | 37 | 32 | ACD |
+ This is no longer so convincing:
  + Angles between B and A, C, D are [79, 62, 51] = 64 +/- 8
  + Pairwise angles between A, C, D are [48, 37, 65] = 50 +/- 8
  + Neither of these are significantly different from 60 (isotropic)
+ The knot complexes:
  |     |                          |   PA |   i | [sin(i), cos(i) sin(PA), cos(i) cos(PA)] | abs(N) |
  |-----+--------------------------+------+-----+------------------------------------------+--------|
  | \alpha   | NE Blue \to SW Red         |  -60 |  69 | [0.9336, -0.3104, 0.1792]                | 1.0000 |
  | \beta   | N(E) Red \to SW Faint Blue |   37 |  65 | [0.9063, 0.2543, 0.3375]                 | 1.0000 |
  | \gamma   | N(W) Red \to SE Blue       |  -50 |  56 | [0.8290, -0.4284, 0.3594]                | 1.0000 |
  |-----+--------------------------+------+-----+------------------------------------------+--------|
  | \alpha\beta\gamma | Average knot axis        |      |     | [0.8896, -0.1615, 0.2920]                | 0.9501 |
  |     |                          | -29. | 69. | [0.9363, -0.1700, 0.3073]                | 1.0000 |
  #+TBLFM: $5=[sin($4), cos($4) sin($3), cos($4) cos($3)];f4::$6=rms($-1) sqrt(3);f4::@5$5=reducer(add, @I..@II)/3;f4::@6$5=@-1/@-1$6;f4::@6$3=arctan2(mrow($5, 2), mrow($5, 3));f0::@6$4=arctan2(mrow($5, 1), hypot(mrow($5, 2), mrow($5, 3)));f0
  + Angles between knot complexes
    |     |                           | [0.9336, -0.3104, 0.1792] | [0.9063, 0.2543, 0.3375] | [0.8290, -0.4284, 0.3594] |
    |-----+---------------------------+---------------------------+--------------------------+---------------------------|
    | \alpha   | [0.9336, -0.3104, 0.1792] |                         0 |                       45 |                        32 |
    | \beta   | [0.9063, 0.2543, 0.3375]  |                        45 |                        0 |                        40 |
    | \gamma   | [0.8290, -0.4284, 0.3594] |                        32 |                       40 |                         0 |
    | \alpha\beta\gamma | [0.9363, -0.1700, 0.3073] |                        29 |                       24 |                        16 |
    #+TBLFM: @2$3..@5$5=re(arccos(@1 * $2)) ; %d
    + So for \alpha we had to invert the sign of axis so that it is close to the others
      + This is equivalent to taking the red arm for the all
      + Which makes sense to take either all red or all blue, since inclinations are high
    + So pairwise angles are [45, 32, 40] = 39 +/- 4
      + This seems highly statistically significant - much more so than for A, C, D
+ More pair-wise angles between B, ACD, and \alpha\beta\gamma
  |     |                           | [-0.6428, 0.6943, 0.3237] | [0.0945, -0.5002, 0.8608] | [0.9363, -0.1700, 0.3073] |
  |-----+---------------------------+---------------------------+---------------------------+---------------------------|
  | B   | [-0.6428, 0.6943, 0.3237] |                         0 |                        82 |                        51 |
  | ACD | [0.0945, -0.5002, 0.8608] |                        82 |                         0 |                        64 |
  | \alpha\beta\gamma | [0.9363, -0.1700, 0.3073] |                        51 |                        64 |                         0 |
  #+TBLFM: @2$3..@4$5=re(arccos(abs(@1 * $2))) ; %d
  + So, the knot superaxis is neither perpendicular nor parallel to the other 2
    + angle of 60 deg, which is what you typically expect
+ Now look at angles between individual knot axes and A, B, C, D
  |       |                           | [0.3746, -0.3171, 0.8713] | [-0.6428, 0.6943, 0.3237] | [-0.4384, -0.1561, 0.8851] | [0.3090, -0.8236, 0.4755] |             |
  |       |                           |                         A |                         B |                          C |                         D | A \to D       |
  |-------+---------------------------+---------------------------+---------------------------+----------------------------+---------------------------+-------------|
  | \alpha     | [0.9336, -0.3104, 0.1792] |                        52 |                        40 |                         78 |                        50 | 55 +/- 8.   |
  | \beta     | [0.9063, 0.2543, 0.3375]  |                        56 |                        72 |                         82 |                        76 | 72. +/- 6.  |
  | \gamma     | [0.8290, -0.4284, 0.3594] |                        40 |                        44 |                         88 |                        38 | 53. +/- 12. |
  | \alpha\beta\gamma   | [0.9363, -0.1700, 0.3073] |                        47 |                        51 |                         83 |                        54 | 59. +/- 8.  |
  |-------+---------------------------+---------------------------+---------------------------+----------------------------+---------------------------+-------------|
  | \alpha \to \gamma |                           |                49. +/- 5. |                52 +/- 10. |                 83. +/- 3. |               55. +/- 11. | 64. +/- 4.  |
    #+TBLFM: $7=vmeane($3..$6);f0::@3$3..@6$6=re(arccos(abs(@1 * $2))) ; %d::@7$3..@7$7=vmeane(@3..@5);f0
+ So this just confirms that the knot complex axes have no significant alignment with the lobe and shell axes
  + But they are significantly aligned with each other
  + There is also the fact that axis C is perpendicular to the knot complex axes
+ Angles with plane of sky,
  + Lobes: [22, 28, 10, 26, 9, 25, 22] = 20 +/- 3 deg
  + Complexes: [69, 68, 81, 50, 68, 44] = 63 +/- 6 deg
  + Individual knots: [26, 63, 47]
  + Shells: [11, 22, 44, 39, 37, 40] = 32 +/- 5 deg
  + Histogram
    | inc     | Lobes | Knots | Complexes | Shells |
    |---------+-------+-------+-----------+--------|
    | 0 \to 15  | XX    |       |           | X      |
    | 15 \to 30 | XXXXX | X     |           | X      |
    | 30 \to 45 |       |       | X         | XXXX   |
    | 45 \to 60 |       | X     | X         |        |
    | 60 \to 75 |       | X     | XXX       |        |
    | 75 \to 90 |       |       | X         |        |
+ [X] Make a plot of histogram of inclinations
  #+begin_src python :return figfile :results file 
    from matplotlib import pyplot as plt
    import seaborn as sns
    sns.set_color_codes("bright")

    figfile = "turtle-inclination-histogram.pdf"

    lobes = [22, 28, 10, 26, 9, 25, 22]
    complexes = [69, 68, 81, 50, 68, 44]
    knots = [26, 63, 47]
    shells = [11, 22, 44, 39, 37, 40]
    datasets = [shells, lobes, complexes, knots]
    labels = ["shells", "lobes", "knot complexes", "individual knots"]
    locs = "upper right", "upper right", "upper left", "upper right"
    bins = [0, 15, 30, 45, 60, 75, 90]
    colors = "b", "r", "y", "m"

    fig, axes = plt.subplots(4, 1, sharex=True, sharey=True)
    for ax, data, label, loc, color in zip(axes, datasets, labels, locs, colors):
        ax.hist(data, bins=bins, label=label, color=color)
        ax.legend(loc=loc)
    axes[-1].set(
        xticks=bins,
        xlabel="Inclination to plane of sky, $|i|$, deg",
        ylabel="Number of features",
    )
    sns.despine()
    fig.savefig(figfile)

  #+end_src

  #+RESULTS:
  [[file:turtle-inclination-histogram.pdf]]

**** Table of 3D velocity organized by axis

:PROPERTIES:
:ID:       FD05EAD1-3069-4967-986F-1E5F1644DE34
:END:
+ This is taken from [[id:6FA8AF58-5665-4092-A25D-0F18B851D1CD][Organizing components into systems and flows]]

    | System               |  PA | Axis | V_los       | PM_r          | V_pos       | V           | i            | R_proj    | R, pc         | t, 1000 yr  |
    |----------------------+-----+------+-------------+---------------+-------------+-------------+--------------+-----------+---------------+-------------|
    | Inner shell A NNW    | 340 | A+   | +8 +/- 3    | 0.51 +/- 0.07 | 48. +/- 7.  | 49. +/- 7.  | 11. +/- 4.   | 7 +/- 1   | 0.07 +/- 0.01 | 1.4 +/- 0.3 |
    | Outer lobe I+/VII+   | 340 | A+   | +28 +/- 2   | 0.86 +/- 0.3  | 82. +/- 29. | 89. +/- 27. | 22. +/- 7.   | 16 +/- 1  | 0.17 +/- 0.01 | 1.9 +/- 0.7 |
    | North knot           | 340 | A+   | +24 +/- 1   | 0.63 +/- 0.04 | 60. +/- 4.  | 67. +/- 4.  | 26. +/- 2.   | 17 +/- 1  | 0.19 +/- 0.01 | 2.7 +/- 0.2 |
    | Inner shell A SSE    | 160 | A-   | -17 +/- 3   | 0.54 +/- 0.07 | 51. +/- 7.  | 55. +/- 7.  | -22. +/- 4.  | 7 +/- 1   | 0.08 +/- 0.01 | 1.3 +/- 0.3 |
    | Outer lobe I-        | 160 | A-   | -32 +/- 1   | 0.75 +/- 0.30 | 71. +/- 29. | 81. +/- 26. | -28. +/- 10. | 15 +/- 2  | 0.17 +/- 0.03 | 2.0 +/- 0.8 |
    | Outer lobe VIII-     | 160 | A-   | -10 +/- 1   | 0.71 +/- 0.09 | 67. +/- 9.  | 68. +/- 9.  | -10. +/- 2.  | 23 +/- 1  | 0.23 +/- 0.01 | 3.2 +/- 0.4 |
    | Outer lobe II+       | 170 | C+   | +24 +/- 1.5 | 0.61 +/- 0.13 | 58. +/- 12. | 65. +/- 11. | 26. +/- 5.   | 24 +/- 1  | 0.27 +/- 0.02 | 3.9 +/- 0.9 |
    | Outer lobe II-       | 355 | C-   | -25 +/- 3   | 0.5 +/- 0.5   | 48. +/- 48. | 57. +/- 41. | -32. +/- 26. | 21 +/- 3  | 0.25 +/- 0.08 | 4.2 +/- 4.2 |
    |----------------------+-----+------+-------------+---------------+-------------+-------------+--------------+-----------+---------------+-------------|
    | Inner shell B ENE    |  65 | B-   | -25 +/- 3   | 0.33 +/- 0.05 | 31. +/- 5.  | 43. +/- 4.  | -44. +/- 6.  | 4 +/- 1   | 0.06 +/- 0.01 | 1.2 +/- 0.4 |
    | NE Blue complex      |  60 | E-   | -51 +/- 1   | 0.24 +/- 0.05 | 23. +/- 5.  | 65. +/- 2.  | -69. +/- 4.  | 5 +/- 1   | 0.14 +/- 0.04 | 2.1 +/- 0.6 |
    | IS ENE               |  50 | B-   | -18 +/- 3   | 0.28 +/- 0.16 | 27. +/- 15. | 35. +/- 12. | -39. +/- 16. | 9 +/- 2   | 0.12 +/- 0.04 | 3.2 +/- 2.0 |
    | Inner shell B WSW    | 240 | B+   | +18 +/- 3   | 0.31 +/- 0.04 | 29. +/- 4.  | 36. +/- 4.  | 37. +/- 6.   | 5 +/- 1   | 0.06 +/- 0.01 | 1.6 +/- 0.4 |
    | IS WSW               | 260 | B+   | +20 +/- 3   | 0.30 +/- 0.27 | 29. +/- 26. | 38. +/- 20. | 40. +/- 26.  | 12 +/- 1  | 0.16 +/- 0.06 | 4.0 +/- 3.6 |
    | SW Red complex       | 250 | E+   | +38 +/- 1   | 0.19 +/- 0.03 | 18. +/- 3.  | 49. +/- 2.  | 68. +/- 3.   | 7 +/- 2   | 0.19 +/- 0.06 | 3.7 +/- 1.2 |
    | N(E) Red complex     |  30 | E+   | +25 +/- 2   | 0.05 +/- 0.04 | 5. +/- 4.   | 30. +/- 2.  | 81. +/- 7.   | 4 +/- 1   | 0.26 +/- 0.21 | 8.0 +/- 6.7 |
    | SW Faint Blue        | 225 | E-   | -26 +/- 1   | 0.27 +/- 0.04 | 26. +/- 4.  | 41. +/- 3.  | -50. +/- 4.  | 7 +/- 1   | 0.11 +/- 0.02 | 2.6 +/- 0.5 |
    |----------------------+-----+------+-------------+---------------+-------------+-------------+--------------+-----------+---------------+-------------|
    | Outer lobe X+        | 285 | D+   | +6 +/- 2    | 0.50 +/- 0.45 | 48. +/- 43. | 49. +/- 43. | 9. +/- 8.    | 19 +/- 2  | 0.19 +/- 0.02 | 3.8 +/- 3.4 |
    | Outer lobe IV+       | 315 | D+   | +13 +/- 1   | 0.35 +/- 0.07 | 33. +/- 7.  | 37. +/- 6.  | 25. +/- 5.   | 10 +/- 1  | 0.11 +/- 0.01 | 2.9 +/- 0.6 |
    | NW knot ([N II])     | 310 | E+   | +18 +/- 1   | 0.12 +/- 0.08 | 11. +/- 8.  | 24. +/- 4.  | 63. +/- 17.  | 8 +/- 1   | 0.18 +/- 0.10 | 6.7 +/- 4.5 |
    | N(W) Red complex     | 300 | E+   | +21 +/- 2   | 0.10 +/- 0.04 | 10. +/- 4.  | 27. +/- 3.  | 68. +/- 8.   | 6 +/- 2   | 0.16 +/- 0.08 | 6.0 +/- 3.1 |
    | Outer lobe X-/IV-/V+ | 120 | D-   | -8 +/- 4    | 0.25 +/- 0.15 | 24. +/- 14. | 26. +/- 13. | -22. +/- 15. | 13 +/- 3  | 0.14 +/- 0.04 | 5.2 +/- 3.3 |
    | SE Blue complex      | 135 | E-   | -31 +/- 3   | 0.41 +/- 0.10 | 39. +/- 10. | 54. +/- 8.  | -44. +/- 8.  | 5 +/- 1   | 0.07 +/- 0.02 | 1.2 +/- 0.4 |
    | SE knot              | 135 | E-   | -35 +/- 3   | 0.41 +/- 0.10 | 39. +/- 10. | 57. +/- 7.  | -47. +/- 8.  | 6.2 +/- 1 | 0.09 +/- 0.02 | 1.5 +/- 0.4 |
    #+TBLFM: $6=95 $5;f0::$7=sqrt((1.2 ($4))**2 +  ($6)**2) ;f0::$8=arctan(1.2 ($4) / ($6)) ;f0::$10=0.01 $9/cos($8);f2::$11=100 $9 / 1000 $5 ;f1

  + In this table, measurements correspond to the parts of each system where we can measure radial velocity and proper motions in the same place
    + So it doesn't cover the full radial extent, particularly of the knot complexes
    + And especially not the extent in PA, since they are poorly collimated
  + Note that II- has no proper motion because it is off the top of the image
  + Also, although the Outer lobe I+ is basically the same as North knot, there are some differences:
    1. One is measured in [O III], the other in [N II]
    2. For Outer lobe I+, the PM is only for the trailing knot, so we take the closest velocity component of +28 km/s
       - Note that we ignore the +11 km/s component at the same position
  + Outer lobe IV+ should be same as NW knot
    + But PM is inconsistent between [O III] and [N II]
  + SE Blue has PM = 0.47 +/- 0.03 from [N II] but 0.35 +/- 0.08 from [O III]
    + Take the average: 0.41 +/- 0.10


***** Dynamic times of different axes
|    |                     | 0 | 1  | 2  | 3 | 4 | 5 |  6 | 7 | 8 |
|----+---------------------+---+----+----+---+---+---+----+---+---|
| A+ | 1.4, 1.9, 2.7       |   | OX | K  |   |   |   |    |   |   |
| A- | 1.3, 2.0, 3.2       |   | O  | X  | X |   |   |    |   |   |
|----+---------------------+---+----+----+---+---+---+----+---+---|
| B+ | 1.6, 4.0            |   | O  |    |   | O |   |    |   |   |
| B- | 1.2, 3.2            |   | O  |    | O |   |   |    |   |   |
|----+---------------------+---+----+----+---+---+---+----+---+---|
| C+ | 3.9,                |   |    |    | X |   |   |    |   |   |
| C- | 4.2 ,               |   |    |    |   | X |   |    |   |   |
|----+---------------------+---+----+----+---+---+---+----+---+---|
| D+ | 2.9, 3.8            |   |    | X  | X |   |   |    |   |   |
| D- | 5.2                 |   |    |    |   |   | X |    |   |   |
|----+---------------------+---+----+----+---+---+---+----+---+---|
| E+ | 3.7, 6.0, 6.7, 8.0  |   |    |    | C |   |   | CK |   | C |
| E- | 1.2, 1.5, 2.1, 2.6, |   | CK | CC |   |   |   |    |   |   |


***** LaTeX version of table
+ Removed proper motion column

    | System               |  PA | Axis | V_los     | V_pos     | V         | i          | R_proj     | R, pc       | t, 1000 yr |
    |----------------------+-----+------+-----------+-----------+-----------+------------+------------+-------------+------------|
    | Inner shell A NNW    | 340 | A^+  | +8 \pm 3    | 48. \pm 7.  | 49. \pm 7.  | 11. \pm 4.   | 7.0 \pm 0.5  | 7.1 \pm 0.5   | 1.4 \pm 0.2  |
    | Outer lobe I+/VII+   | 340 | A^+  | +28 \pm 2   | 82. \pm 29. | 89. \pm 27. | 22. \pm 7.   | 16 \pm 1     | 17.3 \pm 1.4  | 1.9 \pm 0.7  |
    | North knot           | 340 | A^+  | +24 \pm 1   | 60. \pm 4.  | 67. \pm 4.  | 26. \pm 2.   | 17 \pm 1     | 18.9 \pm 1.2  | 2.7 \pm 0.2  |
    | Inner shell A SSE    | 160 | A^-  | -17 \pm 3   | 51. \pm 7.  | 55. \pm 7.  | -22. \pm 4.  | 6.5 \pm 0.5  | 7.0 \pm 0.6   | 1.2 \pm 0.2  |
    | Outer lobe I-        | 160 | A^-  | -32 \pm 1   | 71. \pm 29. | 81. \pm 26. | -28. \pm 10. | 15 \pm 2     | 17.0 \pm 2.8  | 2.0 \pm 0.8  |
    | Outer lobe VIII-     | 160 | A^-  | -10 \pm 1   | 67. \pm 9.  | 68. \pm 9.  | -10. \pm 2.  | 23 \pm 1     | 23.4 \pm 1.0  | 3.2 \pm 0.4  |
    | Outer lobe II+       | 170 | C^+  | +24 \pm 1.5 | 58. \pm 12. | 65. \pm 11. | 26. \pm 5.   | 24 \pm 1     | 26.7 \pm 1.6  | 3.9 \pm 0.9  |
    | Outer lobe II-       | 355 | C^-  | -25 \pm 3   | -         | > 25      | < 0.       | 21 \pm 3     | >21         | -          |
    |----------------------+-----+------+-----------+-----------+-----------+------------+------------+-------------+------------|
    | Inner shell B ENE    |  65 | B^-  | -25 \pm 3   | 31. \pm 5.  | 43. \pm 4.  | -44. \pm 6.  | 4 \pm 1      | 5.6 \pm 1.5   | 1.2 \pm 0.4  |
    | NE Blue complex      |  60 |      | -51 \pm 1   | 23. \pm 5.  | 65. \pm 2.  | -69. \pm 4.  | 5 \pm 1      | 14.0 \pm 3.8  | 2.1 \pm 0.6  |
    | IS ENE               |  50 | B^-  | -18 \pm 3   | 27. \pm 15. | 35. \pm 12. | -39. \pm 16. | 9 \pm 2      | 11.6 \pm 3.7  | 3.2 \pm 2.0  |
    | Inner shell B WSW    | 240 | B^+  | +18 \pm 3   | 29. \pm 4.  | 36. \pm 4.  | 37. \pm 6.   | 4.5 \pm 1    | 5.6 \pm 1.3   | 1.5 \pm 0.4  |
    | IS WSW               | 260 | B^+  | +20 \pm 3   | 29. \pm 26. | 38. \pm 20. | 40. \pm 26.  | 11.5 \pm 1   | 15.0 \pm 5.9  | 3.8 \pm 3.5  |
    | SW Red complex       | 250 |      | +38 \pm 1   | 18. \pm 3.  | 49. \pm 2.  | 68. \pm 3.   | 7 \pm 2      | 18.7 \pm 5.9  | 3.7 \pm 1.2  |
    | N(E) Red complex     |  30 |      | +25 \pm 2   | 5. \pm 4.   | 30. \pm 2.  | 81. \pm 7.   | 4 \pm 1      | 25.6 \pm 20.7 | 8.0 \pm 6.7  |
    | SW Faint Blue        | 225 |      | -26 \pm 1   | 26. \pm 4.  | 41. \pm 3.  | -50. \pm 4.  | 7 \pm 1      | 10.9 \pm 1.8  | 2.6 \pm 0.5  |
    |----------------------+-----+------+-----------+-----------+-----------+------------+------------+-------------+------------|
    | Outer lobe X+        | 285 | D+   | +6 \pm 2    | 48. \pm 43. | 49. \pm 43. | 9. \pm 8.    | 18.5 \pm 1.5 | 18.7 \pm 1.6  | 3.7 \pm 3.3  |
    | Outer lobe IV+       | 315 | D+   | +13 \pm 1   | 33. \pm 7.  | 37. \pm 6.  | 25. \pm 5.   | 10 \pm 1     | 11.0 \pm 1.2  | 2.9 \pm 0.6  |
    | NW knot ([N II])     | 310 |      | +18 \pm 1   | 11. \pm 8.  | 24. \pm 4.  | 63. \pm 17.  | 8 \pm 1      | 17.6 \pm 10.5 | 6.7 \pm 4.5  |
    | N(W) Red complex     | 300 |      | +21 \pm 2   | 10. \pm 4.  | 27. \pm 3.  | 68. \pm 8.   | 6 \pm 2      | 16.0 \pm 7.7  | 6.0 \pm 3.1  |
    | Outer lobe X-/IV-/V+ | 120 | D-   | -8 \pm 4    | 24. \pm 14. | 26. \pm 13. | -22. \pm 15. | 13 \pm 3     | 14.0 \pm 3.6  | 5.2 \pm 3.3  |
    | SE Blue complex      | 135 |      | -31 \pm 3   | 39. \pm 10. | 54. \pm 8.  | -44. \pm 8.  | 4.5 \pm 1    | 6.3 \pm 1.6   | 1.1 \pm 0.4  |
    | SE knot              | 135 |      | -35 \pm 3   | 39. \pm 10. | 57. \pm 7.  | -47. \pm 8.  | 6.2 \pm 1    | 6.3 \pm 1.6   | 1.1 \pm 0.4  |
+ This is a cleaned up version of the [[id:FD05EAD1-3069-4967-986F-1E5F1644DE34][Table of 3D velocity organized by axis]], designed to be exported to a LaTeX file


***** Version for plotting radius/velocity/age
+ Reduce to the columns we need
+ Separate columns for errors

    #+name: vel-radius-systems
    | System                | Type |  PA | Axis |   V |  eV |    R |   eR |   t |  et |
    |-----------------------+------+-----+------+-----+-----+------+------+-----+-----|
    | Inner shell A NNW     |    1 | 340 | A^+  | 49. |  7. | 0.07 | 0.01 | 1.4 | 0.2 |
    | Outer lobe I+/VII+    |    3 | 340 | A^+  | 89. | 27. | 0.17 | 0.01 | 1.9 | 0.7 |
    | North knot            |    2 | 340 | A^+  | 67. |  4. | 0.19 | 0.01 | 2.7 | 0.2 |
    | Inner shell A SSE     |    1 | 160 | A^-  | 55. |  7. | 0.08 | 0.01 | 1.2 | 0.2 |
    | Outer lobe I-         |    3 | 160 | A^-  | 81. | 26. | 0.17 | 0.03 | 2.0 | 0.8 |
    | Outer lobe VIII-      |    3 | 160 | A^-  | 68. |  9. | 0.23 | 0.01 | 3.2 | 0.4 |
    | Outer lobe II+        |    3 | 170 | C^+  | 65. | 11. | 0.27 | 0.02 | 3.9 | 0.9 |
    | Outer lobe II-        |    3 | 355 | C^-  | 25. | 25. | 0.25 | 0.08 | 0.0 | 0.0 |
    |-----------------------+------+-----+------+-----+-----+------+------+-----+-----|
    | Inner shell B ENE     |    1 |  65 | B^-  | 43. |  4. | 0.06 | 0.01 | 1.2 | 0.4 |
    | NE Blue complex       |    2 |  60 |      | 65. |  2. | 0.14 | 0.04 | 2.1 | 0.6 |
    | IS ENE                |    1 |  50 | B^-  | 35. | 12. | 0.12 | 0.04 | 3.2 | 2.0 |
    | Inner shell B WSW     |    1 | 240 | B^+  | 36. |  4. | 0.06 | 0.01 | 1.5 | 0.4 |
    | IS WSW                |    1 | 260 | B^+  | 38. | 20. | 0.16 | 0.06 | 3.8 | 3.5 |
    | SW Red complex        |    2 | 250 |      | 49. |  2. | 0.20 | 0.06 | 3.7 | 1.2 |
    | N(E) Red complex      |    2 |  30 |      | 30. |  2. | 0.26 | 0.21 | 8.0 | 6.7 |
    | SW Faint Blue complex |    2 | 225 |      | 41. |  3. | 0.11 | 0.02 | 2.6 | 0.5 |
    |-----------------------+------+-----+------+-----+-----+------+------+-----+-----|
    | Outer lobe X+         |    3 | 285 | D+   | 51. | 43. | 0.19 | 0.02 | 3.7 | 3.3 |
    | Outer lobe IV+        |    3 | 315 | D+   | 37. |  6. | 0.11 | 0.01 | 2.9 | 0.6 |
    | NW knot ([N II])      |    2 | 310 |      | 24. |  4. | 0.18 | 0.10 | 6.7 | 4.5 |
    | N(W) Red complex      |    2 | 300 |      | 27. |  3. | 0.16 | 0.08 | 6.0 | 3.1 |
    | Outer lobe X-/IV-/V+  |    3 | 120 | D-   | 26. | 13. | 0.14 | 0.04 | 5.2 | 3.3 |
    | SE knot               |    2 | 135 |      |  57 |   8 | 0.09 | 0.02 | 1.5 | 0.4 |
    | SE Blue complex       |    2 | 135 |      | 54. |  8. | 0.07 | 0.02 | 1.1 | 0.4 |

#+header: :var TAB=vel-radius-systems :colnames no
#+begin_src python :tangle ../scripts/vel-radius-systems.py :eval no
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes()

  figfile = "vel-radius-systems.pdf"
  t = Table(rows=TAB[1:], names=TAB[0])
  t["PA"] = t["PA"] % 180

  mshell = t["Type"] == 1
  mknot = t["Type"] == 2
  mlobe = t["Type"] == 3


  fig, ax = plt.subplots()

  ax.errorbar("R", "V", xerr="eR", yerr="eV",
              fmt="none", data=t, lw=0.3, zorder=-100)
  for mask, marker in [
          [mshell, "o"],
          [mknot, "P"],
          [mlobe, "d"],
  ]:
      scat = ax.scatter("R", "V",
                        marker=marker,
                        c="PA", cmap="twilight_shifted", vmin=0.0, vmax=180.0,
                        edgecolors="k", linewidths=0.5,
                        s=100,
                        data=t[mask])

  R0 = 1.0
  for time in 1000, 2000, 4000, 8000, 16000:
      # 1 pc in 1000 yr means speed of 977.79 km/s
      V0 = 977.79*1000/time
      ax.plot([0, R0], [0, V0], color="k", lw=0.5, zorder=-100)

  fig.colorbar(scat, ax=ax).set_label(r"Position angle modulo $180^{\circ}$")
  ax.set(
      xlim=[0, 0.35],
      ylim=[0, 120],
      ylabel="Velocity, km/s",
      xlabel="Distance, pc",
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
  print(figfile, end="")

#+end_src

#+RESULTS:
[[file:vel-radius-systems.pdf]]

#+begin_src sh :results output file
python ../scripts/vel-radius-systems.py
#+end_src

#+RESULTS:
[[file:vel-radius-systems.pdf]]

*** Summary of nebular history
+ This uses dynamic ages, so may be inaccurate if components have undergone significant acceleration or deceleration
+ 
*** Make high-pass filtered maps
+ We already have the unsharp masked image from Beto, but that has some inappropriate labels on it
+ So I could make new ones from the HST images
+ This is based on a program in the Luis Angel bow shock project
  + [[id:171A91D5-C0D6-4411-9DB2-C1AB76D18E61][New images of each group]]
#+begin_src python :tangle ../scripts/smooth-image.py
  import numpy as np
  import argh
  from astropy.io import fits
  from astropy.convolution import convolve_fft, Gaussian2DKernel

  def main(infile, width=16, twopass=False, threshold=1.5, vmin=0.0):
      hdu = fits.open(infile)[0]
      im = hdu.data
      gauss_kernel = Gaussian2DKernel(width)
      smoothim = convolve_fft(im, gauss_kernel)
      sharpim = im/smoothim

      if twopass:
          mask = (sharpim > threshold) | (im == 0.0)
          im[mask] = np.nan
          print('Starting second pass: N(masked) =', mask.sum())
          smoothim = convolve_fft(im, gauss_kernel, normalize_kernel=True)
          sharpim = im/smoothim

      # Mask out sharp image where smooth image is too faint
      sharpim[smoothim < vmin] = 1.0

      outhdu = fits.PrimaryHDU(data=smoothim, header=hdu.header)
      outfile = infile.replace(".fits", f"_smooth_{width}.fits")
      outhdu.writeto(outfile, overwrite=True)

      outhdu.data = sharpim
      outhdu.writeto(outfile.replace("_smooth_", "_sharp_"), overwrite=True)

  if __name__ == "__main__":
      argh.dispatch_command(main)
#+end_src

#+begin_src sh :results verbatim :dir ../propermotions/oiii
python ../../scripts/smooth-image.py oiii-ago1997-win.fits -w 8 -v 0.08
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim :dir ../propermotions/nii
python ../../scripts/smooth-image.py n6210n-rescaled-1998.fits -w 8 -v 0.01
#+end_src

#+RESULTS:


Example of usage. 

#+begin_src sh :results verbatim
python ../scripts/smooth-image.py -h
#+end_src

#+RESULTS:
#+begin_example
usage: smooth-image.py [-h] [-w WIDTH] [--twopass] [--threshold THRESHOLD]
                       [-v VMIN]
                       infile

positional arguments:
  infile                -

optional arguments:
  -h, --help            show this help message and exit
  -w WIDTH, --width WIDTH
                        16
  --twopass             False
  --threshold THRESHOLD
                        1.5
  -v VMIN, --vmin VMIN  0.0
#+end_example

*** He II
+ Only appears in the central slits
+ Look for up to 4 components in each slit
  + Tips of velocity ellipse
  + Blue/red half of max splitting
+ Velocities are wrt -40 km/s
+ y-values are not right for slit V 
  - There was a similar issue for [N II] components, but I don't remember how I resolved it
  - Maybe switch to having x0 and y0 for each slit
+ x-values do not seem right for C' and E
  + This is also something I must have fixed before somewhere, since they are OK on the slit figures
  + Down here [[id:1222AB38-09A3-4137-AB57-195E267B1755][Central region - bright complexes of knots (mainly 2015 spectra)]] I had E* and F* shfted 1 arcsec to west, so I have repeated that
+ Slit D is noisier than the other central ones
  + Cannot measure the profile at S tip of shell

#+name: heii-shell-components
| Slit |     PA |    off |     s |   V |    x |    y | Comments  |
|------+--------+--------+-------+-----+------+------+-----------|
| T    | 339.72 |  -0.66 |  -3.2 |  -2 |  0.5 | -2.8 |           |
| T    | 339.72 |  -0.66 | -1.27 |  -3 | -0.2 | -1.0 | stronger  |
| T    | 339.72 |  -0.66 |    -1 |  11 | -0.3 | -0.7 | weaker    |
| T    | 339.72 |  -0.66 |   3.0 |   0 | -1.7 |  3.0 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| V    |  292.8 | -0.799 |   3.8 |   5 | -3.8 |  2.2 |           |
| V    |  292.8 | -0.799 |   1.3 |  -7 | -1.5 |  1.2 | equal     |
| V    |  292.8 | -0.799 |  -0.5 |  13 |  0.2 |  0.5 | equal     |
| V    |  292.8 | -0.799 |  -3.5 |  -3 |  2.9 | -0.6 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| W    |   77.9 |   -2.7 |  -3.8 |   3 | -4.3 | -3.4 |           |
| W    |   77.9 |   -2.7 |  -1.8 |  -7 | -2.3 | -3.0 | weaker    |
| W    |   77.9 |   -2.7 |   0.0 |   8 | -0.6 | -2.6 | stronger  |
| W    |   77.9 |   -2.7 |   2.7 |  -1 |  2.1 | -2.1 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| C'   |      2 |   4.19 |  -1.6 |  -8 |  4.1 | -1.5 | very weak |
|------+--------+--------+-------+-----+------+------+-----------|
| E    |  359.6 |    3.5 |  -0.6 |  -6 |  3.5 | -0.6 | very weak |
|------+--------+--------+-------+-----+------+------+-----------|
| F    |  359.6 |   2.76 |   1.4 |  -2 |  2.8 |  1.4 | strongest |
| F    |  359.6 |   2.76 |  -1.0 |   6 |  2.8 | -1.0 | strong    |
| F    |  359.6 |   2.76 |  -1.2 |  -7 |  2.8 | -1.2 | weaker    |
| F    |  359.6 |   2.76 |  -3.0 |  -1 |  2.8 | -3.0 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| D'   |    2.1 |   1.57 |   1.3 |  -2 |  1.6 |  1.4 |           |
| D'   |    2.1 |   1.57 |  -0.7 |   4 |  1.5 | -0.6 | stronger  |
| D'   |    2.1 |   1.57 |  -2.2 | -13 |  1.5 | -2.1 | weaker    |
|------+--------+--------+-------+-----+------+------+-----------|
| E'   |    2.2 |   -1.0 |   1.9 |   1 | -0.9 |  1.9 |           |
| E'   |    2.2 |   -1.0 |   0.6 |  10 | -1.0 |  0.6 | equal     |
| E'   |    2.2 |   -1.0 |  -1.9 |  -6 | -1.1 | -1.9 | equal     |
| E'   |    2.2 |   -1.0 |  -4.5 |   3 | -1.2 | -4.5 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| G    |    1.1 |   -1.5 |   1.9 |   2 | -1.5 |  1.9 |           |
| G    |    1.1 |   -1.5 |  -1.1 |  -1 | -1.5 | -1.1 |           |
| G    |    1.1 |   -1.5 |  -3.4 |   3 | -1.6 | -3.4 |           |
|------+--------+--------+-------+-----+------+------+-----------|
| F'   |    2.1 |   -4.7 |  -0.5 |   5 | -4.7 | -0.7 | weak      |
|------+--------+--------+-------+-----+------+------+-----------|
| I    |    0.4 |   -6.2 |  -0.4 |   7 | -6.2 | -0.4 | very weak |
|------+--------+--------+-------+-----+------+------+-----------|
#+TBLFM: $6=$3 cos($2) + $4 sin($2);f1::$7=$3 sin($2) + $4 cos($2);f1
*** [O III]
+ This is much more difficult than [N II]

**** Peanut shell
+ Vertical slits C, D, E, F
+ Nearly vertical slits R, S
  + Note that slit R is close to the major axis of the shell
  + And passes close to the star
+ Best spatial separation from other components: N part of slits E, F, R, and S


***** Peanut shell section in paper
+ We can include the multibin isovel images
  + But some of that is due to the knot complexes and outer lobes
+ Might be better to do something like for the lobes
  + Now done as [[file:~/Dropbox/Teresa-Turtle/figs/turtle-peanut-map.pdf]]
  + This includes peanut shells, intermediate shells, and miscellaneous
****** Table and graph of all the components
******* Table of shell components classified by type and axis
+ Type:
  + I : Intermediate shell
  + M : Misc component
  + P : Peanut shells
#+name: shell-components
| Slit | Type |     x |    y |   V | A | B |
|------+------+-------+------+-----+---+---|
| B    | I    |   9.7 | -0.5 | -10 | 0 | 1 |
| C    | P    |   5.2 | -1.8 | -13 | 1 | 0 |
| C    | P    |   5.2 |  0.5 |  -4 | 0 | 1 |
| C    | M    |   5.5 |  4.5 | -15 | 0 | 1 |
| C    | I    |   5.7 |  7.0 | -18 | 0 | 1 |
| D    | P    |   2.4 | -5.2 | -17 | 1 | 0 |
| D    | P    |   2.5 | -3.1 | -22 | 1 | 0 |
| D    | P    |   2.5 |  0.0 | -25 | 0 | 1 |
| D    | M    |   2.7 |  7.1 |  -3 | 0 | 1 |
| D    | I    |   2.7 |  9.0 |  -5 | 0 | 1 |
| E    | I    |  -1.2 | -6.7 |  -6 | 0 | 1 |
| E    | P    |  -1.2 | -3.3 | -10 | 0 | 1 |
| E    | P    |  -1.1 | -0.5 | -25 | 1 | 0 |
| E    | P    |  -1.0 |  3.5 | -19 | 1 | 0 |
| F    | I    |  -3.7 | -7.9 |  -2 | 0 | 1 |
| F    | P    |  -3.6 | -1.9 |  -7 | 0 | 1 |
| F    | P    |  -3.6 |  2.5 | -16 | 1 | 0 |
| G    | I    |  -7.2 | -7.2 |  -1 | 0 | 1 |
| G    | M    |  -7.0 |  0.2 |  -6 | 0 | 1 |
| I    | I    | -10.9 | -0.5 |  -2 | 0 | 1 |
| U    | I    |  -2.0 | -6.8 |  -4 | 0 | 1 |
| U    | I    |  -9.2 | -1.0 |  -1 | 0 | 1 |
| S    | P    |  -1.0 | -1.3 | -10 | 0 | 1 |
| S    | P    |  -1.2 | -0.1 | -20 | 1 | 0 |
| S    | P    |  -2.5 |  3.5 | -16 | 1 | 0 |
| B    | I    |   9.7 | -0.5 |   4 | 0 | 1 |
| C    | P    |   5.2 | -3.9 |  -1 | 1 | 0 |
| C    | P    |   5.3 | -1.7 |   7 | 0 | 1 |
| C    | M    |   5.4 |  3.0 |   7 | 0 | 1 |
| C    | I    |   5.5 |  7.1 |   2 | 0 | 1 |
| D    | P    |   2.3 | -5.9 |  -1 | 1 | 0 |
| D    | P    |   2.2 | -2.3 |  12 | 1 | 0 |
| D    | P    |   2.5 |  1.5 |   0 | 0 | 1 |
| D    | I    |   2.7 |  9.0 |   5 | 0 | 1 |
| E    | I    |  -1.2 | -6.5 |   9 | 0 | 1 |
| E    | P    |  -1.1 | -2.6 |  10 | 0 | 1 |
| E    | P    |  -1.0 |  0.0 |  18 | 1 | 0 |
| E    | P    |  -1.0 |  3.0 |   9 | 1 | 0 |
| E    | P    |  -0.9 |  7.0 |   4 | 1 | 0 |
| F    | I    |  -3.7 | -7.8 |  11 | 0 | 1 |
| F    | M    |  -3.6 | -6.8 |   1 | 0 | 1 |
| F    | P    |  -3.5 | -2.4 |  18 | 0 | 1 |
| F    | P    |  -3.5 |  0.9 |  16 | 0 | 1 |
| F    | P    |  -3.4 |  3.7 |   7 | 1 | 0 |
| G    | I    |  -7.2 | -7.2 |  13 | 0 | 1 |
| G    | M    |  -7.0 | -2.8 |   4 | 0 | 1 |
| I    | I    | -11.0 | -2.7 |  20 | 0 | 1 |
| J    | I    | -11.5 | -1.8 |  12 | 0 | 1 |
| U    | I    |  -2.1 | -6.5 |  11 | 0 | 1 |
| U    | M    |  -5.5 | -4.0 |   3 | 0 | 1 |
| U    | I    |  -9.1 | -1.0 |  18 | 0 | 1 |
| U    | I    | -11.0 |  0.5 |   9 | 0 | 1 |
| S    | P    |  -0.2 | -3.3 |   8 | 0 | 1 |
| S    | P    |  -1.2 | -0.5 |  18 | 1 | 0 |
| S    | P    |  -1.8 |  0.5 |  16 | 1 | 0 |
| S    | P    |  -2.5 |  3.5 |   8 | 1 | 0 |
******* Program to make figures of shell components along A and B axes
#+header: :var tab=shell-components :colnames no
#+begin_src python :return figname :results file
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes()

  t = Table(rows=tab[1:], names=tab[0])

  pa = 70
  #pa = 160
  cpa = np.cos(np.deg2rad(pa))
  spa = np.sin(np.deg2rad(pa))

  # unit vector along slit
  uX = spa, cpa
  # unit vector across slit
  uY = cpa, -spa

  t["X"] = t["x"]*uX[0] + t["y"]*uX[1]
  t["Y"] = t["x"]*uY[0] + t["y"]*uY[1]

  t["sX"] = np.abs(t["X"])
  t["sY"] = np.abs(t["Y"])

  mA = t["A"] == 1
  mB = t["B"] == 1

  mP = t["Type"] == "P"
  mI = t["Type"] == "I"
  mM = t["Type"] == "M"

  figname = "turtle-shell-velocity-axes.pdf"
  fig, [axA, axB] = plt.subplots(2, 1, figsize=(5, 5))
  axA.axhline(0, ls=":", c="k")
  axB.axhline(0, ls=":", c="k")
  axA.axvline(0, ls=":", c="k")
  axB.axvline(0, ls=":", c="k")
  axA.scatter("Y", "V", data=t[mA & mP], vmin=0.0, vmax=8.0,
              c="sX", s=100, edgecolors="k", cmap="Blues_r")
  axB.scatter("X", "V", data=t[mB & mM], vmin=0.0, vmax=8.0,
              c="sY", s=50, edgecolors="k", marker="v",  cmap="YlGn_r")
  axB.scatter("X", "V", data=t[mB & mP], vmin=0.0, vmax=8.0,
              c="sY", s=100, edgecolors="k", cmap="Blues_r")
  axB.scatter("X", "V", data=t[mB & mI], vmin=0.0, vmax=8.0,
              c="sY", s=30, edgecolors="k",  cmap="Reds_r")
  axA.set(
      xlabel=f"Position along PA = {pa+90}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-30, 30],
  )
  axB.set(
      xlabel=f"Position along PA = {pa}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-30, 30],
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figname)
#+end_src

#+RESULTS:
[[file:turtle-shell-velocity-axes.pdf]]
******* Program to make figure of He II shell components along A and B axes
#+header: :var tab=heii-shell-components :colnames no
#+begin_src python :return figname :results file
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes()

  t = Table(rows=tab[1:], names=tab[0])

  pa = 70
  #pa = 160
  cpa = np.cos(np.deg2rad(pa))
  spa = np.sin(np.deg2rad(pa))

  # unit vector along slit
  uX = spa, cpa
  # unit vector across slit
  uY = cpa, -spa

  t["X"] = t["x"]*uX[0] + t["y"]*uX[1]
  t["Y"] = t["x"]*uY[0] + t["y"]*uY[1]

  t["sX"] = np.abs(t["X"])
  t["sY"] = np.abs(t["Y"])

  R = np.hypot(t["X"], t["Y"])
  mX = t["sX"] >= t["sY"] 
  mY = ~mX
  mR = R <= 2.0


  figname = "turtle-heii-shell-velocity-axes.pdf"
  fig, [axA, axB] = plt.subplots(2, 1, figsize=(5, 5))
  axA.axhline(0, ls=":", c="k")
  axB.axhline(0, ls=":", c="k")
  axA.axvline(0, ls=":", c="k")
  axB.axvline(0, ls=":", c="k")
  axA.scatter("Y", "V", data=t[mY | mR], vmin=0.0, vmax=5.0,
              c="sX", s=100, marker=".", edgecolors="k", cmap="PuRd")
  axB.scatter("X", "V", data=t[mX | mR], vmin=0.0, vmax=5.0,
              c="sY", s=100, marker=".", edgecolors="k", cmap="PuRd")
  axA.set(
      xlabel=f"Position along PA = {pa+90}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-30, 30],
  )
  axB.set(
      xlabel=f"Position along PA = {pa}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-30, 30],
  #    yticks=[-30, -20, -10, 0, 10, 20, 30],
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figname)
#+end_src

#+RESULTS:
[[file:turtle-heii-shell-velocity-axes.pdf]]


******* Program to find mean velocities for each side of shells along their axes
+ This reads the same table as the previous program
+ It finds the velocity gradient and splitting along the axes
#+header: :var tab=shell-components :colnames no
#+begin_src python :results output verbatim
  import numpy as np
  from astropy.table import Table

  t = Table(rows=tab[1:], names=tab[0])

  pa = 70
  cpa = np.cos(np.deg2rad(pa))
  spa = np.sin(np.deg2rad(pa))

  # unit vector along slit
  uX = spa, cpa
  # unit vector across slit
  uY = cpa, -spa

  t["X"] = t["x"]*uX[0] + t["y"]*uX[1]
  t["Y"] = t["x"]*uY[0] + t["y"]*uY[1]

  # Loop over peanut (inner) and intermediate shells
  for shell in "PI":
      # Loop over A and B axes (Y is along A, and X is along B)
      for axis, S in zip("AB", "YX"):
          # Select this shell and this axis
          m = (t[axis] == 1) & (t["Type"] == shell)
          if not m.sum():
              continue
          # Distance along slit:
          s = t[m][S]
          # LOS Velocity:
          v = t[m]["V"]
          # Subtract off centroid velocity
          vcent = 0.5*(v.max() + v.min())
          v = v - vcent
          print(
              f"Shell {shell}, axis {axis}:",
              f"Centroid velocity = {vcent:.1f}"
          )
          # Positive and negative axis
          for sense, mm in ["+", s >= 0.0], ["-", s < 0.0]:
              smedian = np.median(s[mm])
              mcap =  np.abs(s) > 0.3*np.abs(smedian)
              smean = s[mm & mcap].mean()
              # vmean = v[mm & mcap].mean()
              vmean = np.median(v[mm & mcap])
              vmean = 0.5*(v[mm & mcap].max() + v[mm & mcap].min())
              dvsplit = v[mm].max() - v[mm].min()
              print(
                  f"Shell {shell}, axis {sense}{axis}:",
                  f"Mean velocity = {vmean:.1f}", 
                  f"Splitting = {dvsplit:.1f}",
                  f"Mean radius = {smean:.1f}",
              )


#+end_src

#+RESULTS:
: Shell P, axis A: Centroid velocity = -3.5
: Shell P, axis +A: Mean velocity = -1.5 Splitting = 43.0 Mean radius = 4.6
: Shell P, axis -A: Mean velocity = 2.0 Splitting = 38.0 Mean radius = -3.9
: Shell P, axis B: Centroid velocity = -3.5
: Shell P, axis +B: Mean velocity = -5.5 Splitting = 32.0 Mean radius = 3.7
: Shell P, axis -B: Mean velocity = 7.5 Splitting = 28.0 Mean radius = -2.6
: Shell I, axis B: Centroid velocity = 1.0
: Shell I, axis +B: Mean velocity = -7.5 Splitting = 23.0 Mean radius = 7.4
: Shell I, axis -B: Mean velocity = 6.0 Splitting = 26.0 Mean radius = -7.6

+ This is a bit unsatisfactory for axis A, because we really had to tweak the ~mcap~ criterion
  + This is meant to select only the end caps of the shell, cutting out the points too close to the origin
  + We ended up excluding points with radius < 30% of median
+ But in the end, we have an OK result, which is justifiable
  + *No* this is no good - best to use /only/ the measurements near the end caps
    + Peanut A NNW : +4
    + Peanut A SSE : -1, -1, -17, -13 => -8 +/- 4
    + Peanut B WSW : -7, +18 => +5.5 +/- 12.5
    + Peanut B ENE : -25, +0 => -12.5 +/- 12.5
    + IS WSW : +12, +13, +9, +20, -2, -1, -1, -1 => +6 +/- 3
    + IS ENE : -10, -18, +4, +2 => -5.5 +/- 5
  + Note that the +/- are the std of the values, so much larger than the actual uncertainty, since this is dominated by the splitting
  + And finally, even that gives stuff very close to plane of sky
    + Instead, take the biggest blue or redshifted value in the end caps
    
+ This data is going to be used in the table in [[id:6FA8AF58-5665-4092-A25D-0F18B851D1CD][Organizing components into systems and flows]]

****** Theoretical elliptical shells
+ Use parametric equation:
  + x = a cos(t)
  + y = b sin(t)

#+name: ellipse-pv
#+begin_src python :return figfile :results file :var A=2.0
  import numpy as np
  import matplotlib.pyplot as plt
  import seaborn as sns
  sns.set_color_codes()
  sns.set_palette("bright")
  # Normalize to minor axis = 1

  def pv_loop(inc_deg=0.0, a=2.0, alpha=1.0, n=201):
      """Position-velocity loop along projected major axis of inclined ellipse

      """
      t = np.linspace(0.0, 2*np.pi, 201)
      # x is along major axis, y is along minor axis
      x, y = a*np.cos(t), np.sin(t)
      # radius of shell
      r = np.hypot(x, y)
      # velocity is proportional to radius to some power
      u = r**alpha
      # Angle from major axis
      theta = np.arctan2(y, x)
      # Angle from plane of sky
      phi = theta - np.deg2rad(inc_deg)
      # position and LOS velocity along slit
      pos, vel = r*np.cos(phi), -u*np.sin(phi)
      return pos, vel


  figfile = f"ellipse-pv-{int(10*A)}.pdf"
  fig, axes = plt.subplots(2, 3, sharex=True, sharey=True)

  for ax, alpha in zip(axes.flat[:-1], [0.0, 0.5, 1.0, 2.0, 3.0]):
      lw = 3.0
      opacity = 0.69
      for inc_deg in 0, 15, 30, 45, 60, 75, 90:
          pos, vel = pv_loop(-inc_deg, A, alpha)
          pos /= np.max(np.abs(pos))
          vel /= np.max(np.abs(vel))
          ax.plot(pos, vel, label=fr"$i = {inc_deg}^\circ$", lw=lw, alpha=opacity)
          ax.set_title(fr"$a/b = {A:.1f}$, $\alpha = {alpha:.1f}$")
          lw -= 0.4
          opacity += 0.05
      ax.set_aspect("equal")
  axes[-1, 0].set(
      xlabel="position",
      ylabel="velocity",
  )
  handles, labels = axes[0, 0].get_legend_handles_labels()
  axes[-1, -1].legend(handles, labels)
  axes[-1, -1].axis(False)
  sns.despine(fig)
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:ellipse-pv-20.pdf]]

#+call: ellipse-pv(1.5)

#+RESULTS:
[[file:ellipse-pv-15.pdf]]

#+call: ellipse-pv(3.0)

#+RESULTS:
[[file:ellipse-pv-30.pdf]]

+ So, it seems that you always get an ellipse PV diagram when the shell is an ellipse and the expansion is homologous (\alpha = 1)
+ If the velocity is not linear in radius, then you get more interesting shapes
+ Axis B seems better fit with \alpha > 1
+ Axis A seems better fit with \alpha < 1
+ 

***** Peanut shell conclusions
+ See [[file:Turtle%20peanut%20shell.pdf]]
+ There are two shells
  + Peanut A - PA = -20, close to plane of sky
    + Axis along projected major axis of peanut
  + Peanut B - PA = +70, at a largeish angle to POS
    + Axis along projected minor axis of peanut
    + Axis seems to coincide with [N II] knot complexes NE Blue \to SW Red axis
      
***** Peanut shell proper motions
+ Clear bipolar signature in the motions
+ Major axis is NNW-SSE, PA = 350
+ I am adding the proper motions for selected components in the per-slit tables below
***** Slit C
+ This is nearly at the E edge of the shell
  + x = +5.18
+ The velocity ellipse is small
  + Central velocity is Vhel = -43 +/- 10 km/s
  + Position -1.2 +/- 2.2 arcsec using center of components
    + But total y extension is [-4.3, 2.9] in total: -0.7 +/- 3.6
  + Blue side and N side are brighter
+ Proper motion
  + V_t radial component is about 0.5 => 47 km/s
+ Velocity components
  |    x |    y | Vhel |          |   V |
  |------+------+------+----------+-----|
  | 5.18 | -3.4 |  -41 | S edge   |  -1 |
  | 5.18 | +1.0 |  -44 | N edge   |  -4 |
  | 5.18 | -1.7 |  -33 | Max Red  |   7 |
  | 5.18 | -1.7 |  -53 | Max Blue | -13 |
#+TBLFM: $5=$3 + 40
***** Slit D
+ x = +2.27
+ Brightest component is N Red, which is at the systemic velocity
  + This is possible not the peanut shell, but is an outer structure that may be part of the intermediate shell
  + Need to check position more carefully though
+ Shell part is 0.5 x brightness of N Red component
  + Same brightness for red and blue halves
+ N Side of shell
  + /Note/ - we should maybe not include this since N Red component is suspect
  + y = [-1, 3.5]
  + V = -52.5 +/- 12.5
+ Center of shell
  + y = -2.1
  + V = -45 +/- 17
+ S Side of shell
  + y = [-5, -2]
  + V = -42.5 +/- 14.5
+ The shell shows a general blueward gradient of 5-10 km/s from S to N
  + The lower value is if we discount the N Red component as unrelated to shell
  + This may be a symptom of the fact the vertical slits are at an angle to the shell major axis
+ Total y extension is [-5.3, 4.6] = -0.35 +/- 4.95 for the main shell components
  + But there is a fainter extension down to S Edge as far as y = -6.5
  + S Edge is 0.25 x brightness of main shell
+ There is also a component associated with the N Red Complex (identical V and position to [N II])
+ Proper motion of lower rim of shell corresponds to S Edge: 0.6 => 57 km/s
+ Proper motions in N are low: 0.23 => 22 km/s
+ Proper motions in S slightly higher: 0.29 => 27 km/s 
+ Velocity components
  |    x |    y |   V |               | V_t |   V |
  |------+------+-----+---------------+-----+-----|
  | 2.27 |  0.2 | -65 | N Blue        |  22 | -25 |
  | 2.27 | -2.0 | -62 | Center Blue   |     | -22 |
  | 2.27 | -4.2 | -57 | S Blue        |     | -17 |
  |------+------+-----+---------------+-----+-----|
  | 2.27 |  1.8 | -40 | N Red         |     |   0 |
  | 2.27 | -2.2 | -28 | Center Red    |     |  12 |
  | 2.27 | -5.7 | -41 | S Edge        |  57 |  -1 |
  |------+------+-----+---------------+-----+-----|
  | 2.27 |  2.8 | -24 | N Red Complex |     |  16 |
#+TBLFM: $6=$3 + 40
***** Slit E
+ x = -1.2
+ Again, brightest component is N Red, at +9 km/s wrt systemic
+ Blue side of shell is 3x fainter
+ Taking center position
  + y = [-1.5, 1.2]
  + V = -43.5 +/- 21.5 km/s
+ The N side also has constant velocity splitting
  + y = [1.0, 5.7]
  + V = -45 +/- 14 km/s
+ Total y extension [-4.7, 7.6] = +1.45 +/- 6.15
+ Proper motion at N Edge is 0.6 => 57 km/s
+ Proper motion at S end of shell is 0.2 => 20 km/s
+ Velocity components
  |    x |    y | Vhel |               | V_t |   V |
  |------+------+------+---------------+-----+-----|
  | -1.2 |  3.6 |  -59 | N Blue        |     | -19 |
  | -1.2 | -0.3 |  -65 | Center Blue   |     | -25 |
  | -1.2 | -2.9 |  -50 | S Blue        |     | -10 |
  |------+------+------+---------------+-----+-----|
  | -1.2 |  7.1 |  -36 | N edge        |  57 |   4 |
  | -1.2 |  2.5 |  -31 | N Red         |     |   9 |
  | -1.2 | -0.6 |  -22 | Center Red    |     |  18 |
  | -1.2 | -3.4 |  -30 | S Red         |  20 |  10 |
  |------+------+------+---------------+-----+-----|
  | -1.2 |  2.2 |  -16 | N Red complex |     |  24 |
  #+TBLFM: $6=$3 + 40

***** Slit F
+ x = -3.6
+ Center Red and N Red are brightest
  + Blue side of shell is 40% of this brightness
+ N side of shell
  + y = [0.3, 5.6]
  + V = -44 +/- 13 km/s
+ Center of shell
  + y ~= 0.5
  + V = -40.5 +/- 15.5
+ S side of shell
  + y = [-3.8, 0.5]
  + V = -35.5 +/- 10.5 km/s
+ As before there is also a N Red Complex component, similar to [N II]
+ Proper motions at N edge are low: 0.27 => 26 km/s
+ Velocity components
  |    x |    y | Vhel |               |   V |
  |------+------+------+---------------+-----|
  | -3.6 |  3.0 |  -57 | N Blue        | -17 |
  | -3.6 |  0.4 |  -56 | Center Blue   | -16 |
  | -3.6 | -1.6 |  -47 | S Blue        |  -7 |
  |------+------+------+---------------+-----|
  | -3.6 |  3.6 |  -33 | N Red         |   7 |
  | -3.6 |  0.7 |  -24 | Center Red    |  16 |
  | -3.6 | -2.3 |  -22 | S Red         |  18 |
  |------+------+------+---------------+-----|
  | -3.6 |  2.1 |  -16 | N Red complex |  24 |
#+TBLFM: $5=$3 + 40
***** Slit R
+ This is diagonal, tilted 9.75 deg to W, with closest approach at x = -1.17
+ Velocity components
  |    s |    x |    y | Vhel |             |   V |
  |------+------+------+------+-------------+-----|
  |  3.1 | -1.7 |  3.1 |  -56 | N Blue      | -16 |
  |  0.0 | -1.2 |  0.0 |  -58 | Center Blue | -18 |
  | -2.0 | -0.8 | -2.0 |  -50 | S Blue      | -10 |
  |------+------+------+------+-------------+-----|
  |  3.5 | -1.8 |  3.4 |  -30 | N Red       |  10 |
  |  1.0 | -1.3 |  1.0 |  -24 | Center Red  |  16 |
  | -2.1 | -0.8 | -2.1 |  -20 | S Red       |  20 |
  | -4.1 | -0.5 | -4.0 |  -32 | S edge      |   8 |
#+TBLFM: $2=-1.17 - $1 sin(9.75);f1::$3=$1 cos(9.75);f1::$6=$4 + 40
***** Slit S
+ Also diagonal, tilted at 18.7 deg to W, closest approach x = -1.42
  |    s |    x |    y | Vhel |             |   V |
  |------+------+------+------+-------------+-----|
  |  3.0 | -2.4 |  2.8 |  -56 | N Blue      | -16 |
  |  0.8 | -1.7 |  0.8 |  -60 | Center Blue | -20 |
  | -1.9 | -0.8 | -1.8 |  -50 | S Blue      | -10 |
  |------+------+------+------+-------------+-----|
  |  3.8 | -2.6 |  3.6 |  -32 | N Red       |   8 |
  |  1.2 | -1.8 |  1.1 |  -24 | Center Red  |  16 |
  | -1.5 | -0.9 | -1.4 |  -22 | S Red       |  18 |
  | -3.9 | -0.2 | -3.7 |  -31 | S edge      |   9 |
#+TBLFM: $2=-1.42 - $1 sin(18.7);f1::$3=$1 cos(18.7);f1::$6=$4 + 40
**** Lobes

***** Organizing components into systems and flows
:PROPERTIES:
:ID:       6FA8AF58-5665-4092-A25D-0F18B851D1CD
:END:
+ Nomenclature:
  + Component :: a discrete velocity component (maybe blended) over a section of a single slit (these are what are given in the Tables below)
  + System :: a set of components in adjacent slits, with similar velocities, widths, and brightnesses.  Where possible, these are arranged in a point-symmetric red/blue pair
  + Flow :: Bipolar pattern of a red/blue pairs of systems on opposite sides of the star, which seem to be physically related
+ [2020-01-10 Fri 23:23] Final version
  + This has 8 system pairs and 2 singletons, each assigned a roman numeral: I \to X from fastest to slowest
  + Systems I \to IV are high velocity
    + System III- has no red-shifted counterpart (no III+)
      + Maybe I- and III- should be combined
    + These define 3 axes, which all seem to be independent flows
  + Flows IV \to VIII are intermediate velocity
    + System VII+ (N jet) has no blue-shifted counterpart (no VII-)
      + Maybe VII+ and VIII+ should be combined
      + But note that the SE Jet knots are missed by the slits
    + It is not clear if these represent independent flows, or are merely part of the same three flows that give the high velocity systems
+ Proper motions
  + We only have good PM for VIII- and II+ in S Lobe, and for I+/VII+ in N Lobe
    + VIII- and II+ are the dominant (bright) component in their regions
    + For I+/VII+, it is VII+ that dominates in slits G and H (2.5:1 and 2:1), whereas roughly equal in slit I
      + The brightest knots that are well measured in PM fall between H and I
      + If we take the 2:1 ratio, mean vel is (2 11 + 24)/(2 + 1) = +15.3
      + If we take 1:1 ratio it is (11 + 24)/(1 + 1) = +17.5
      + Combining the two gives 16 +/- 2
    + We could try measuring IV+/X+/V- in W lobe too, but the PM measurements there are very noisy
      + Brightness is dominated by X+, so +6
    + A better one is III-/IX-/VI+ in the S/E lobes
      + Problem with this is that the PM is measuring the knots, which fall between the slits
      + The best slit is C, which has components at -26, -7, +13 but we don't know which of these is associated with the knots (if any)
      + Changed to Slit B, where we can measure PM and Vrad in same place
        + This is now definitely E lobe and is systems X-/IV-/V+, which we will assign V = -8 
  + We can take measurements on ~oiii-{Vr,Vth}-win.fits~
    | System            | Axis | Lobe | V_los       | PM_r          | PM_th          | V           | i            | R_proj | R              |
    |-------------------+------+------+-------------+---------------+----------------+-------------+--------------+--------+----------------|
    | II+               | C    | S    | +24 +/- 1.5 | 0.53 +/- 0.26 | 0.05 +/- 0.30  | 58. +/- 21. | 30. +/- 12.  |     25 | 28.9 +/- 3.5   |
    | VIII-             | A    | S    | -10 +/- 1   | 0.69 +/- 0.10 | 0.04 +/- 0.12  | 67. +/- 9.  | -10. +/- 2.  |     24 | 24.4 +/- 0.1   |
    | I+/VII+           | A    | N    | +16 +/- 2   | 0.85 +/- 0.3  | -0.1 +/- 0.2   | 83. +/- 28. | 13. +/- 5.   |     17 | 17.4 +/- 0.4   |
    | IV+/X+/V-         | D    | W    | [4 .. 8]    | [0.03 .. 1.0] | 0.04 +/- 1.1   | [6. .. 95.] | [3. .. 73.]  |     18 | [18.0 .. 61.6] |
    | X-/IV-/V+         | D    | E    | -8 +/- 4    | 0.20 +/- 0.15 | 0.05 +/- 0.30  | 21. +/- 13. | -27. +/- 21. |     13 | 14.6 +/- 2.7   |
    |-------------------+------+------+-------------+---------------+----------------+-------------+--------------+--------+----------------|
    | North knot        | A    | N    | +24 +/- 1   | 0.63 +/- 0.04 | 0              | 66. +/- 3.  | 26. +/- 2.   |     25 | 27.8 +/- 0.5   |
    | NW knot           | D    | N/W  | +18 +/- 1   | 0.11 +/- 0.05 | 0              | 24. +/- 2.  | 64. +/- 10.  |     10 | 22.8 +/- 8.2   |
    | SW Red complex    | B    | -    | +38 +/- 1   | 0.13 +/- 0.09 | 0              | 47. +/- 3.  | 75. +/- 10.  |     11 | 42.5 +/- 27.7  |
    | NE Blue complex   | B    | -    | -51 +/- 1   | 0.24 +/- 0.05 | 0              | 65. +/- 2.  | -70. +/- 4.  |      5 | 14.6 +/- 2.8   |
    | N(W) Red complex  | D?   |      | +21 +/- 2   | 0.10 +/- 0.03 | 0              | 27. +/- 2.  | 69. +/- 6.   |      9 | 25.1 +/- 6.9   |
    | SE Blue complex   | D?   |      | -35 +/- 3   | 0.45 +/- 0.03 | 0              | 60. +/- 3.  | -44. +/- 3.  |      6 | 8.3 +/- 0.4    |
    | N(E) Red complex  | ?    |      | +25 +/- 2   | 0.05 +/- 0.02 | 0              | 30. +/- 2.  | 81. +/- 4.   |      4 | 25.6 +/- 11.3  |
    | SW Faint Blue     | ?    |      | -26 +/- 1   | 0.12 +/- 0.09 | 0              | 33. +/- 3.  | -70. +/- 14. |     10 | 29.2 +/- 19.6  |
    |-------------------+------+------+-------------+---------------+----------------+-------------+--------------+--------+----------------|
    | Inner shell A NNW | A    |      | +4 +/- 3    | 0.53 +/- 0.05 | -0.03 +/- 0.06 | 51. +/- 5.  | 5. +/- 4.    |      7 | 7.0 +/- 4e-2   |
    | Inner shell A SSE | A    |      | -8 +/- 3    | 0.55 +/- 0.05 | -0.04 +/- 0.06 | 53. +/- 5.  | -10. +/- 4.  |    7.5 | 7.6 +/- 9e-2   |
    | Inner shell B WSW | B    |      | +5.5 +/- 3  | 0.27 +/- 0.08 | 0.02 +/- 0.05  | 26. +/- 7.  | 14. +/- 9.   |      5 | 5.2 +/- 0.2    |
    | Inner shell B ENE | B    |      | -12.5 +/- 3 | 0.31 +/- 0.05 | -0.06 +/- 0.05 | 33. +/- 5.  | -27. +/- 7.  |      5 | 5.6 +/- 0.3    |
    | IS WSW            | B    |      | +6 +/- 3    | 0.30 +/- 0.27 | 0.13 +/- 0.12  | 29. +/- 25. | 14. +/- 14.  |     12 | 12.4 +/- 0.8   |
    | IS ENE            | B    |      | -5.5 +/- 3  | 0.28 +/- 0.16 | -0.15 +/- 0.20 | 27. +/- 15. | -14. +/- 11. |      9 | 9.3 +/- 0.4    |
    |-------------------+------+------+-------------+---------------+----------------+-------------+--------------+--------+----------------|
    | Inner shell A NNW | A    |      | +8 +/- 3    | 0.53 +/- 0.05 | -0.03 +/- 0.06 | 51. +/- 5.  | 11. +/- 4.   |      7 | 7.1 +/- 1.0e-1 |
    | Inner shell A SSE | A    |      | -17 +/- 3   | 0.55 +/- 0.05 | -0.04 +/- 0.06 | 56. +/- 5.  | -21. +/- 4.  |    7.5 | 8.0 +/- 0.2    |
    | Inner shell B WSW | B    |      | +18 +/- 3   | 0.27 +/- 0.08 | 0.02 +/- 0.05  | 34. +/- 6.  | 40. +/- 10.  |      5 | 6.5 +/- 1.0    |
    | Inner shell B ENE | B    |      | -25 +/- 3   | 0.31 +/- 0.05 | -0.06 +/- 0.05 | 42. +/- 4.  | -46. +/- 6.  |      5 | 7.2 +/- 0.8    |
    | IS WSW            | B    |      | +20 +/- 3   | 0.30 +/- 0.27 | 0.13 +/- 0.12  | 37. +/- 20. | 40. +/- 26.  |     12 | 15.7 +/- 6.0   |
    | IS ENE            | B    |      | -18 +/- 3   | 0.28 +/- 0.16 | -0.15 +/- 0.20 | 34. +/- 12. | -39. +/- 17. |      9 | 11.6 +/- 2.8   |
    #+TBLFM: $7=sqrt((1.2 $4)**2 + (95 $5)**2);f0::$8=arctan(1.2 ($4) / 95 ($5) ) ;f0::$10=$-1/cos($8);f1
    + We want inclination from plane of sky, so that is what I have in the ~i~ column
    + I am adding some of the low-ionization knots
      + I had already done this in [[id:76A2C7C7-5190-41B7-90FA-30E35F6A455C][Proper motions and 3D position/velocities of the knot complexes]]
      + But I am not convinced with some of the measurements, especially the tangential velocities
      + I want to take the values at the outer tips of the complexes where possible
    + I have also added the shells
      + In two versions - second is better - it uses extreme values in the end caps
      + The other thing we could do is to fit ellipses
  + Remember, PM is in pix/decade = 10 mas/yr = 95 km/s
    + So for converting to dynamic times, we have 5 arcsec at 60 km/s (6.3e-3 arcsec/year) is 790 years
    + Or, at 60 km/s
      | Age, yr | Radius, arcsec |
      |---------+----------------|
      |    1000 |            6.3 |
      |    2000 |           12.6 |
      |    3000 |           18.9 |
      |    4000 |           25.3 |
      #+TBLFM: $2=0.01 (60/95) $1;f1
    + Alternatively, we can just do t = 100 R_proj / PM_r
  + The final two columns are total velocity ~V~ and inclination ~i~, both calculated with correction factor 1.2 for the LOS component
    + Maybe should be lower if total velocity is high-ish, since should be of order 1 + 1/M^2
    + Inclination is from LOS, but negative values should be modulo 180
  + The best-measured flow is I+/VII+ \to VIII-[/I-?]
    + V \approx 70 \to 80 km/s
    + |i| \approx 70 \to 80\deg
    + R = 17 \to 24
    + PA \approx -20\deg of red side
    + Approximately aligned with axis A of peanut shell
  + Next best measured is II+ \to [II-]
    + We have no proper motions for II-, but close antisymmetry allows a confident association from position and LOS velocity alone
    + V \approx 60 km/s
    + |i| \approx 60\deg
    + R \approx 30
    + PA \approx 170\deg red side
    + Although II is close to I in projection (20\deg), it is really at 45\deg in 3D
    + We could call this axis C
  + Then there is the E \to W flow, which is much less well constrained: IV+/X+/V- \to 
    + PM in W lobe is useless (5 \to 95 km/s), whereas in E lobe we have 20 +/- 15 km/s 
      + Although this is probably dominated by the knots, and in the table above we originally assigned it to III-/IX-/VI+, which is in the S lobe
      + But now we have remeasured PM in a region crossed by Slit B in the E lobe
      + So we can (a bit riskily) assign these properties to entire E-W flow
    + V \approx 10 \to 30 km/s
    + |i| \approx 40 \to 80\deg
    + R = 15 \to 20 (up to 24 at end caps)
    + PA \approx -70\deg red side
    + So slower than the other flows
    + We could call this axis D

      
****** Checking reality of components
+ [2020-01-09 Thu 10:43]
+ Slit U
  + This is the highest s/n
  + S lobe had -23, -6, +10, which are definitely real
    + Although velocities are not so accurate, and we are missing a bluer component
  + Now have remeasured as -20, -6, +12
    + Also moved the +12 component since it wasn't in quite the right place
    + And added a -30 component that is a bit farther out
+ Slit A
  + There is an additional red component
  + And we can consolidate the two blue components, since they are continuous
+ Slit B
  + The +3 component in between the E and S lobes is actually from the inner halo (also seen in Slit U)
  + Rest is OK except for some y ranges
  + Also, remove the upper two components, since might be IS
    + /Partially reinstated/
+ Slit S
  + Revision of velocities in end cap - now consistent with vertical slits
+ Slit D
  + Change endcap velocity a bit
  + Change red S lobe velocity a bit
+ Slit R
  + Add new S lobe bridge component at +2
  + S lobe cap shifted a bit to red
+ Slit C
  + Adjust velocity of bluest S lobe component
  + Extend range of blueish S lobe component
+ [2020-01-09 Thu 18:37] Finished checking all S and E lobe components (see above)
+ Slit I
  + The N jet component was not right, since it was blended with systemic component and given too long an extension - now fixed
  + And added a systemic component (inner halo?)
+ Slit S
  + Adjust the lengths of the components - should be more compact
+ Slit G
  + N jet red component was listed as too red - fixed
  + Broad N end cap component was too blue - fixed
+ Slit J
  + Added new N jet red component
      
***** Tables organized by feature
+ All velocity components outside of the intermediate shell, including the lobes and halo
+ These are the same data as in [[id:8B9823A2-9A10-46D7-80CA-8BDDC69AEEEF][Original table of all components by slit]] but split up by gross feature
+ ~x~, ~y~ is center coordinates of each component (arcsec wrt star)
+ ~+/- ds~ is size along the slit (arcsec).  For all except Slit U, this is really ~dy~
+ ~V~ is central velocity (km/s)
+ ~W~ is estimated FWHM (km/s).  This is only crudely estimated.  For weak blended components, cannot be determined at all.
+ ~Note~ is mostly redundant, but in some cases it describes relative brightness of multiple components at the same position
+ ~R~, ~PA~ are radius (on plane of sky, arcsec) and position angle (degrees E of N) of the center of each component 

****** East lobe

| Lobe      | Slit |    x |    y | +/- ds |   V |  V' |  W | Note   |    R |   PA |
|-----------+------+------+------+--------+-----+-----+----+--------+------+------|
| E lobe    | A    | 14.6 |   -7 |      5 | -58 | -18 |    | weaker | 15.1 | 105. |
| IS/E lobe | B    |  9.2 |   -5 |      2 | -55 | -15 | 40 |        | 10.5 | 119. |
|-----------+------+------+------+--------+-----+-----+----+--------+------+------|
| E lobe    | A    | 14.6 |   -6 |      3 | -48 |  -8 |    | bright | 15.4 | 109. |
| E lobe    | B    |  9.2 |   -9 |      2 | -48 |  -8 | 40 |        | 12.9 | 134. |
| IS/E lobe | B    |  9.2 |   -5 |      2 | -44 |  -4 | 40 |        | 10.5 | 119. |
| E lobe    | B    |  9.2 | -9.5 |    4.5 | -40 |  +0 | 40 |        | 12.9 | 134. |
|-----------+------+------+------+--------+-----+-----+----+--------+------+------|
| E lobe    | A    | 14.6 |   -9 |      3 | -23 | +17 | 30 |        | 17.2 | 122. |
| E lobe    | B    |  9.2 |   -7 |      4 | -28 | +12 | 40 | weak   | 11.6 | 127. |
#+TBLFM: $7=$-1 - -40;%+d

****** Inner Halo
:PROPERTIES:
:ID:       B2ABDE8D-2D7D-4744-9271-D1646A211AEE
:END:
| Lobe        | Slit |     x |     y | +/- ds |             V |            W | Note          |            R |   PA |
|-------------+------+-------+-------+--------+---------------+--------------+---------------+--------------+------|
| Halo N      | D    |   1.9 |    17 |      8 |           -39 |           35 |               |         17.1 |   6. |
| Halo N      | C    |   4.9 |  15.5 |    8.5 |           -40 |           40 |               |         16.3 |  18. |
| Halo NE     | B    |   9.2 |    16 |      8 |           -40 |           26 |               |         18.5 |  30. |
| Halo NE     | A    |  14.6 |   +23 |     17 |           -40 |           25 |               |         27.2 |  32. |
| Halo E      | A*   |  20.6 |     0 |      6 |           -39 |           30 | inner halo    |         20.6 |      |
| Halo SE     | U    |  10.1 |   -12 |      2 |           -39 |           30 |               |         15.7 |      |
| Halo/N lobe | I    | -11.1 |    16 |      5 |           -42 |           25 | weak shoulder |         19.5 | 325. |
| Halo S      | E    |  -1.5 |   -19 |      4 |           -39 |           20 |               |         19.1 | 185. |
| Halo S      | F    |  -3.9 |   -13 |      3 |           -38 |           25 | Inner halo    |         13.6 | 197. |
| Halo S      | H    |  -7.7 | -13.5 |    3.5 |           -39 |           44 | inner halo    |         15.5 | 210. |
| Halo S      | G    |  -7.1 |   -12 |      3 |           -37 |           40 | inner halo    |         13.9 | 211. |
| Halo SW     | I    | -11.1 |   -12 |      2 |           -39 |           22 | inner halo    |         16.3 | 223. |
| Halo SW     | K    | -16.3 |    -7 |      2 |           -41 |           23 | inner halo    |         17.7 | 247. |
| Halo W      | L    | -18.6 |    -7 |      2 |           -41 |           23 | inner halo    |         19.9 | 249. |
| Halo NW     | U    |   -27 |    11 |      7 |           -40 |           35 |               |         29.2 | 292. |
| Halo NW     | K    | -16.3 |    12 |      6 |           -38 |           25 | inner halo    |         20.2 | 306. |
| Halo NW     | L    | -18.6 |    19 |    4.5 |           -37 |           30 | inner halo    |         26.6 | 311. |
|-------------+------+-------+-------+--------+---------------+--------------+---------------+--------------+------|
|             |      |       |       |        | -39.3 +/- 0.3 | 29.3 +/- 1.7 |               | 19.2 +/- 1.1 |      |
#+TBLFM: $9=hypot($3,$4);f1::@19$6=vmeane(@I..@II);f1::@19$7=vmeane(@I..@II);f1::@19$9=vmeane(@I..@II);f1

After correcting for typical instrumental width of 9.2 km/s, we get 28 km/s width.

****** Outer Halo
:PROPERTIES:
:ID:       267DA5F8-900B-4A9C-BD38-A4D358FCBAB2
:END:
| Lobe    | Slit |     x |    y | +/- ds |             V |            W |         Win |        Wcorr | Note       |            R |   PA |
|---------+------+-------+------+--------+---------------+--------------+-------------+--------------+------------+--------------+------|
| Halo NE | A*   |  20.6 |   14 |      6 |           -37 |           24 |        11.5 |         21.1 | outer halo |         24.9 |      |
| Halo SE | A*   |  20.6 |  -14 |      4 |           -40 |           19 |        11.5 |         15.1 |            |         24.9 |      |
| Halo SE | U    |    16 |  -19 |      5 |           -40 |           15 |         9.2 |         11.8 |            |         24.8 | 140. |
| Halo SE | A    |  14.6 |  -19 |      5 |           -40 |           13 |         9.2 |          9.2 |            |         24.0 | 142. |
| Halo S  | F    |  -3.9 |  -20 |      4 |           -38 |           15 |         9.2 |         11.8 | Outer halo |         20.4 | 191. |
| Halo S  | G    |  -7.1 |  -20 |      5 |           -40 |           14 |         9.2 |         10.6 |            |         21.2 | 200. |
| Halo S  | H    |  -7.7 |  -21 |      4 |           -39 |           13 |         9.2 |          9.2 | outer halo |         22.4 | 200. |
| Halo SW | I    | -11.1 |  -18 |      4 |           -40 |           17 |         9.2 |         14.3 | outer halo |         21.1 | 212. |
| Halo SW | J    | -11.9 |  -16 |      6 |           -40 |           14 |         9.2 |         10.6 |            |         19.9 | 217. |
| Halo SW | K    | -16.3 |  -14 |      5 |           -40 |           15 |         9.2 |         11.8 | outer halo |         21.5 | 229. |
| Halo SW | L    | -18.6 |  -14 |      5 |           -40 |           15 |        11.5 |          9.6 | outer halo |         23.3 | 233. |
| Halo NW | K    | -16.3 |   25 |      5 |           -40 |           14 |         9.2 |         10.6 | outer halo |         29.8 | 327. |
| Halo NW | L    | -18.6 |   29 |      5 |           -38 |           22 |        11.5 |         18.8 | outer halo |         34.5 | 327. |
| Halo NW | J    | -11.9 |   26 |      6 |           -38 |           16 |         9.2 |         13.1 |            |         28.6 | 335. |
| Halo NW | I    | -11.1 | 27.5 |    4.5 |           -40 |           20 |         9.2 |         17.8 |            |         29.7 | 338. |
| Halo NW | U    |   -34 |   16 |      5 |           -38 |           22 |         9.2 |         20.0 | outer halo |         37.6 |      |
| Halo N  | H    |  -7.7 |   30 |      5 |           -40 |           15 |         9.2 |         11.8 | very weak  |         31.0 | 346. |
|---------+------+-------+------+--------+---------------+--------------+-------------+--------------+------------+--------------+------|
|         |      |       |      |     33 | -39.3 +/- 0.3 | 16.6 +/- 0.8 | 9.7 +/- 0.2 | 13.4 +/- 0.9 |            | 25.9 +/- 1.3 |      |
#+TBLFM: $9=sqrt($-2**2 - $-1**2);f1::$11=hypot($3,$4);f1::@19$6..@19$9=vmeane(@I..@II);f1::@19$11=vmeane(@I..@II);f1

****** Halo knots
:PROPERTIES:
:ID:       4ACE802A-5105-4B30-95F1-0041E59FE26E
:END:
| Lobe      | Slit |     x |    y | +/- ds |             V |            W | Note |            R |   PA |
|-----------+------+-------+------+--------+---------------+--------------+------+--------------+------|
| Halo knot | A*   |  20.6 |   31 |      5 |           -37 |           22 |      |         37.2 |      |
| Halo knot | K    | -16.3 | 43.5 |    2.5 |           -39 |           20 |      |         46.5 | 339. |
| Halo knot | L    | -18.6 |   62 |      4 |           -38 |           20 |      |         64.7 | 343. |
| Halo knot | K    | -16.3 |   61 |      7 |           -41 |           20 |      |         63.1 | 345. |
| Halo knot | J    | -11.9 |   66 |      4 |           -40 |           20 |      |         67.1 | 350. |
| Halo knot | R    | -10.8 |   61 |      3 |           -29 |           25 |      |         61.9 |      |
|-----------+------+-------+------+--------+---------------+--------------+------+--------------+------|
|           |      |       |      |        | -37.3 +/- 1.8 | 21.2 +/- 0.8 |      | 56.8 +/- 4.9 |      |
#+TBLFM: $9=hypot($3,$4);f1::@8$6=vmeane(@I..@II);f1::@8$7=vmeane(@I..@II);f1::@8$9=vmeane(@I..@II);f1

After subtracting instrumental width: W = 19 km/s

****** Northern jet
| Lobe       | Slit |     x |    y | +/- ds |   V |  V' |  W | Note   |    R |   PA |
|------------+------+-------+------+--------+-----+-----+----+--------+------+------|
| N jet      | G    |  -7.1 | 14.5 |    1.5 | -30 | +10 | 20 | narrow | 16.1 | 334. |
| N jet      | H    |  -7.7 |   15 |      2 | -29 | +11 | 17 | bright | 16.9 | 333. |
| N lobe/jet | S    |    -7 |   17 |      3 | -27 | +13 | 23 | narrow | 17.3 | 338. |
|------------+------+-------+------+--------+-----+-----+----+--------+------+------|
| N lobe/jet | S    |  -6.5 |   16 |      3 | -18 | +22 | 35 |        | 17.3 | 338. |
| N lobe/jet | J    | -11.9 | 15.5 |    2.5 | -18 | +22 | 35 |        | 19.5 | 322. |
| N jet      | I    | -11.1 |   16 |      2 | -14 | +26 | 35 | broad  | 19.5 | 325. |
| N jet      | H    |  -7.7 |   15 |      2 | -13 | +27 | 30 | broad  | 16.9 | 333. |
| N jet      | G    |  -7.1 | 14.5 |    1.5 | -12 | +28 | 30 | broad  | 16.1 | 334. |
#+TBLFM: $7=$-1 - -40;%+d

****** North lobe
| Lobe       | Slit |     x |    y | +/- ds |   V |  V' |  W | Note           |    R |   PA |
|------------+------+-------+------+--------+-----+-----+----+----------------+------+------|
| N lobe     | R    |  -4.2 |   21 |      4 | -68 | -28 | 23 |                | 21.4 | 349. |
| N lobe     | G    |  -7.1 | 19.5 |    3.5 | -65 | -25 | 30 | narrow         | 20.8 | 340. |
| N lobe     | H    |  -7.7 |   20 |      3 | -63 | -23 | 25 |                | 21.4 | 339. |
| N lobe     | S    |    -7 |   17 |      2 | -60 | -20 | 50 | faint shoulder | 18.3 | 331. |
| N lobe cap | F    |  -3.9 |   20 |      4 | -54 | -14 | 40 |                | 20.4 | 349. |
|------------+------+-------+------+--------+-----+-----+----+----------------+------+------|
| N lobe     | E    |  -1.5 | 11.5 |    2.5 | -53 | -13 | 50 |                | 11.6 | 353. |
| N lobe     | S    |  -6.9 | 10.5 |      2 | -52 | -12 | 30 |                | 12.6 | 327. |
| N lobe     | F    |  -3.9 |   11 |      3 | -51 | -11 | 40 |                | 11.7 | 340. |
| K-NW       | G    |  -7.1 |  7.5 |    2.5 | -50 | -10 | 22 |                | 10.3 | 317. |
| K-NW       | H    |  -7.7 |    7 |      2 | -48 |  -8 | 20 |                | 10.4 | 312. |
| K-NW       | G    |  -7.1 |  6.5 |    1.5 | -27 | +13 | 32 | The real knot  |      |      |
| K-NW       | H    |  -7.7 |    6 |      2 | -27 | +13 | 32 | ditto          |      |      |
|------------+------+-------+------+--------+-----+-----+----+----------------+------+------|
| N lobe?    | I    | -11.1 |  7.5 |    4.5 | -39 |  +1 | 26 |                | 13.4 | 304. |
| N lobe?    | J    | -11.9 | 15.5 |    4.5 | -37 |  +3 | 33 | maybe halo     | 19.5 | 322. |
|------------+------+-------+------+--------+-----+-----+----+----------------+------+------|
| N lobe     | H    |  -7.7 | 20.5 |    2.5 | -35 |  +5 | 38 | broad          | 21.9 | 339. |
| N lobe     | G    |  -7.1 | 20.5 |    2.5 | -34 |  +6 | 50 | broad          | 20.8 | 340. |
| N lobe     | R    |  -3.3 | 14.5 |    4.5 | -32 |  +8 | 40 |                | 14.9 | 347. |
| N lobe     | F    |  -3.9 |   12 |      4 | -32 |  +8 | 40 |                | 12.6 | 342. |
| N lobe     | E    |  -1.5 |   14 |      5 | -31 |  +9 | 40 |                | 14.1 | 354. |
| N lobe     | G    |  -7.1 | 10.5 |    2.5 | -30 | +10 | 15 | grad +/- 1     | 12.7 | 326. |
| N lobe     | H    |  -7.7 |  9.5 |    2.5 | -30 | +10 | 25 |                | 12.2 | 321. |
| N lobe     | S    |  -6.9 | 10.5 |      2 | -29 | +11 | 35 |                | 12.6 | 327. |
|------------+------+-------+------+--------+-----+-----+----+----------------+------+------|
#+TBLFM: $7=$-1 - -40;%+d

****** South lobe
| Lobe        | Slit |    x |     y | +/- ds |   V |  V' |  W | B          |    R |   PA |
|-------------+------+------+-------+--------+-----+-----+----+------------+------+------|
| S lobe      | C    |  4.9 | -13.5 |    2.5 | -72 | -32 | 25 |            | 14.4 | 160. |
| S lobe      | B    |  9.2 | -14.5 |    2.5 | -72 | -32 | 30 |            | 17.2 | 148. |
| S lobe      | C    |  4.9 |    -7 |      3 | -66 | -26 | 20 |            |  8.5 | 145. |
| S lobe      | U    |      |       |    2.5 | -60 | -20 | 20 |            |      |      |
| S lobe      | U    |  9.3 | -14.1 |      3 | -70 | -30 | 25 |            | 16.9 | 147. |
| S lobe      | D    |  1.9 | -14.5 |    5.5 | -61 | -21 | 30 |            | 14.6 | 173. |
|-------------+------+------+-------+--------+-----+-----+----+------------+------+------|
| S lobe cap  | B    |  9.2 |   -21 |      2 | -50 | -10 | 40 |            | 22.9 | 156. |
| S lobe cap  | S    |  4.4 |   -22 |    2.5 | -50 | -10 | 40 |            | 22.4 | 169. |
| S lobe      | D    |  1.9 | -14.5 |    5.5 | -48 |  -8 | 15 |            | 14.6 | 173. |
| S lobe cap  | C    |  4.9 | -22.5 |    1.5 | -48 |  -8 | 45 |            | 23.0 | 168. |
| S lobe      | R    |  0.9 | -12.5 |    2.5 | -47 |  -7 | 35 |            | 12.5 | 176. |
| S lobe      | C    |  4.9 |   -12 |      7 | -47 |  -7 | 20 | strongest  | 13.0 | 158. |
| S lobe edge | E    | -1.5 |   -12 |      3 | -47 |  -7 | 26 |            | 12.1 | 187. |
| S lobe      | U    |  7.9 | -11.8 |    2.5 | -46 |  -6 | 10 | bright     | 14.2 | 146. |
| S lobe      | S    |  0.9 | -12.3 |      3 | -44 |  -4 | 35 |            | 12.3 | 176. |
| S lobe cap  | D    |  1.9 |   -23 |      2 | -40 |  +0 | 30 |            | 22.6 | 175. |
|-------------+------+------+-------+--------+-----+-----+----+------------+------+------|
| S lobe      | R    |  1.5 | -19.5 |      2 | -38 |  +2 | 25 | halo?      | 18.6 | 175. |
| S lobe      | B    |  9.2 | -14.5 |    2.5 | -37 |  +3 | 23 |            | 17.2 | 148. |
| S lobe      | U    |  7.9 | -13.2 |    4.5 | -28 | +12 | 30 | grad +/- 2 | 14.2 | 146. |
| S lobe      | R    |  1.0 | -13.5 |    3.5 | -28 | +12 | 40 |            | 13.5 | 176. |
| S lobe edge | E    | -1.5 |   -12 |      3 | -28 | +12 | 35 |            | 12.1 | 187. |
| S lobe      | S    |  0.9 | -12.3 |      3 | -27 | +13 | 40 |            | 12.3 | 176. |
| S lobe      | C    |  4.9 |  -8.5 |    4.5 | -27 | +13 | 26 |            |  9.8 | 150. |
| S lobe      | D    |  1.9 | -14.5 |    5.5 | -24 | +16 | 30 |            | 14.6 | 173. |
|-------------+------+------+-------+--------+-----+-----+----+------------+------+------|
| S lobe cap  | R    |  2.5 |   -24 |      2 | -21 | +19 | 40 |            | 24.1 | 174. |
| S lobe cap  | S    |  4.4 |   -22 |    2.5 | -17 | +23 | 45 |            | 22.4 | 169. |
| S lobe cap  | D    |  1.9 | -23.5 |    1.5 | -17 | +23 | 30 |            | 23.6 | 175. |
| S lobe cap  | C    |  4.9 | -21.5 |    2.5 | -15 | +25 | 26 |            | 22.1 | 167. |
#+TBLFM: $7=$-1 - -40;%+d


****** W lobe
| Lobe    | Slit |     x |  y | +/- ds |   V |  V' |  W | Note          |    R |   PA |
|---------+------+-------+----+--------+-----+-----+----+---------------+------+------|
| W lobe  | J    | -11.9 |  6 |      5 | -55 | -15 |    | weak shoulder | 13.3 | 297. |
| W lobe  | U    |   -16 |  3 |      5 | -54 | -14 |    | weaker        | 16.3 | 281. |
| W lobe  | K    | -16.3 |  4 |      4 | -54 | -14 |    | weak shoulder | 16.8 | 284. |
| Halo NW | L    | -18.6 | 12 |      4 | -57 |     |    | halo shoulder | 22.1 | 303. |
|---------+------+-------+----+--------+-----+-----+----+---------------+------+------|
| W lobe  | K    | -16.3 |  4 |      4 | -36 |  +4 | 26 | brightest     | 16.8 | 284. |
| W lobe  | J    | -11.9 |  6 |      5 | -35 |  +5 | 26 | narrowish     | 13.3 | 297. |
| W Lobe  | L    | -18.6 |  3 |      3 | -34 |  +6 | 25 |               | 18.8 | 279. |
| W lobe  | U    |   -16 |  3 |      5 | -32 |  +8 |    | grad +/- 4    | 16.3 | 281. |
|---------+------+-------+----+--------+-----+-----+----+---------------+------+------|
| W lobe  | J    | -11.9 |  6 |      5 | -21 | +19 |    | shoulder      | 13.3 | 297. |
| W lobe? | I    | -11.1 |  6 |      2 | -17 | +23 |    | weak shoulder | 12.6 | 298. |
#+TBLFM: $7=$-1 - -40;%+d


***** Original table of all components by slit
:PROPERTIES:
:ID:       8B9823A2-9A10-46D7-80CA-8BDDC69AEEEF
:END:
+ This data all comes from [[id:36BE5EAE-B082-400A-B020-09C3C46CD40F][Individual slit measurements for lobes]]
| Lobe        | Slit |     x |     y | +/- ds |   V |  W | Note               |    R |   PA |
|-------------+------+-------+-------+--------+-----+----+--------------------+------+------|
| Halo SE     | U    |    16 |   -19 |      5 | -40 | 15 |                    | 24.8 | 140. |
| W lobe      | U    |   -16 |     3 |      5 | -32 |    | grad +/- 4         | 16.3 | 281. |
| W lobe      | U    |   -16 |     3 |      5 | -54 |    | weaker             | 16.3 | 281. |
| S lobe      | U    |   7.9 | -11.8 |    4.5 | -46 | 10 | narrow, bright     | 14.2 | 146. |
| S lobe      | U    |   2.0 | -10.0 |    2.5 | -60 | 30 | shoulder           | 10.2 | 169. |
| S lobe      | U    |   7.9 | -11.8 |      3 | -28 | 30 | grad +/- 2         | 14.2 | 146. |
| S lobe      | U    |   9.3 | -14.1 |      3 | -70 | 25 |                    | 16.9 | 147. |
| Halo NW     | U    |   -27 |    11 |      7 | -40 | 35 |                    | 29.2 | 292. |
|-------------+------+-------+-------+--------+-----+----+--------------------+------+------|
| N lobe      | R    |  -4.2 |    21 |      4 | -68 | 23 |                    | 21.4 | 349. |
| N lobe      | R    |  -3.3 |  14.5 |    4.5 | -32 | 40 |                    | 14.9 | 347. |
| S lobe      | R    |   1.0 | -13.5 |    3.5 | -28 | 40 |                    | 13.5 | 176. |
| S lobe      | R    |   0.9 | -12.5 |    2.5 | -47 | 35 |                    | 12.5 | 176. |
| S lobe      | R    |   1.5 | -19.5 |      2 | -38 | 25 |                    | 19.6 | 176. |
| S lobe cap  | R    |   2.5 |   -24 |      2 | -21 | 40 |                    | 24.1 | 174. |
|-------------+------+-------+-------+--------+-----+----+--------------------+------+------|
| N lobe/jet  | S    |  -6.5 |    16 |      3 | -27 | 23 | narrow             | 17.3 | 338. |
| N lobe/jet  | S    |  -6.5 |    16 |      3 | -18 | 35 |                    | 17.3 | 338. |
| N lobe/jet  | S    |    -7 |    17 |      2 | -60 | 50 | faint shoulder     | 18.4 | 338. |
| N lobe      | S    |  -6.9 |  10.5 |      2 | -29 | 35 |                    | 12.6 | 327. |
| N lobe      | S    |  -6.9 |  10.5 |      2 | -52 | 30 |                    | 12.6 | 327. |
| S lobe      | S    |   0.9 | -12.3 |      3 | -27 | 40 |                    | 12.3 | 176. |
| S lobe      | S    |   0.9 | -12.3 |      3 | -44 | 35 |                    | 12.3 | 176. |
| S lobe cap  | S    |   4.4 |   -22 |    2.5 | -50 | 40 |                    | 22.4 | 169. |
| S lobe cap  | S    |   4.4 |   -22 |    2.5 | -17 | 45 |                    | 22.4 | 169. |
|-------------+------+-------+-------+--------+-----+----+--------------------+------+------|
| Halo SE     | A    |  14.6 |   -19 |      5 | -40 | 13 |                    | 24.0 | 142. |
| Halo NE     | A    |  14.6 |   +23 |     17 | -40 | 25 |                    | 27.2 |  32. |
| E lobe      | A    |  14.6 |    -7 |      5 | -58 |    | weaker             | 16.2 | 116. |
| E lobe      | A    |  14.6 |    -6 |      3 | -48 |    | bright             | 15.8 | 112. |
| E lobe      | A    |  14.6 |    -9 |      3 | -23 | 30 | shoulder           | 17.2 | 122. |
| Halo NE     | B    |   9.2 |    16 |      8 | -40 | 26 |                    | 18.5 |  30. |
| IS/E lobe   | B    |   9.2 |    -5 |      2 | -55 | 40 |                    | 10.5 | 119. |
| IS/E lobe   | B    |   9.2 |    -5 |      2 | -44 | 40 |                    | 10.5 | 119. |
| E lobe      | B    |   9.2 |    -7 |      4 | -28 | 40 | weak               | 11.6 | 127. |
| E lobe      | B    |   9.2 |    -9 |      2 | -48 | 40 |                    | 12.9 | 134. |
| E lobe      | B    |   9.2 |  -9.5 |    4.5 | -40 | 40 |                    | 13.2 | 136. |
| Halo        | B    |   9.2 | -14.5 |    2.5 | -37 | 23 |                    | 17.2 | 148. |
| S lobe      | B    |   9.2 | -14.5 |    2.5 | -72 | 30 |                    | 17.2 | 148. |
| S lobe cap  | B    |   9.2 |   -21 |      2 | -50 | 40 |                    | 22.9 | 156. |
| Halo N      | C    |   4.9 |  15.5 |    8.5 | -40 | 40 |                    | 16.3 |  18. |
| S lobe      | C    |   4.9 |    -7 |      3 | -66 | 20 |                    |  8.5 | 145. |
| S lobe      | C    |   4.9 |   -12 |      7 | -47 | 20 | strongest          | 13.0 | 158. |
| S lobe      | C    |   4.9 |  -8.5 |    4.5 | -27 | 26 |                    |  9.8 | 150. |
| S lobe      | C    |   4.9 | -13.5 |    2.5 | -72 | 25 |                    | 14.4 | 160. |
| S lobe cap  | C    |   4.9 | -22.5 |    1.5 | -48 | 45 |                    | 23.0 | 168. |
| S lobe cap  | C    |   4.9 | -21.5 |    2.5 | -15 | 26 |                    | 22.1 | 167. |
| Halo N      | D    |   1.9 |    17 |      8 | -39 | 35 |                    | 17.1 |   6. |
| S lobe      | D    |   1.9 | -14.5 |    5.5 | -61 | 30 |                    | 14.6 | 173. |
| S lobe      | D    |   1.9 | -14.5 |    5.5 | -48 | 15 |                    | 14.6 | 173. |
| S lobe      | D    |   1.9 | -14.5 |    5.5 | -24 | 30 |                    | 14.6 | 173. |
| S lobe cap  | D    |   1.9 |   -23 |      2 | -40 | 30 |                    | 23.1 | 175. |
| S lobe cap  | D    |   1.9 | -23.5 |    1.5 | -17 | 30 |                    | 23.6 | 175. |
| N lobe      | E    |  -1.5 |  11.5 |    2.5 | -53 | 50 |                    | 11.6 | 353. |
| N lobe      | E    |  -1.5 |    14 |      5 | -31 | 40 |                    | 14.1 | 354. |
| S lobe edge | E    |  -1.5 |   -12 |      3 | -47 | 26 |                    | 12.1 | 187. |
| S lobe edge | E    |  -1.5 |   -12 |      3 | -28 | 35 |                    | 12.1 | 187. |
| Halo S      | E    |  -1.5 |   -19 |      4 | -39 | 20 |                    | 19.1 | 185. |
| N lobe      | F    |  -3.9 |    11 |      3 | -51 | 40 |                    | 11.7 | 340. |
| N lobe      | F    |  -3.9 |    12 |      4 | -32 | 40 |                    | 12.6 | 342. |
| N lobe cap  | F    |  -3.9 |    20 |      4 | -54 | 40 |                    | 20.4 | 349. |
| Halo S      | F    |  -3.9 |   -13 |      3 | -38 | 25 | Inner halo         | 13.6 | 197. |
| Halo S      | F    |  -3.9 |   -20 |      4 | -38 | 15 | Outer halo         | 20.4 | 191. |
| N lobe      | G    |  -7.1 |  19.5 |    3.5 | -65 | 30 | narrow             | 20.8 | 340. |
| N lobe      | G    |  -7.1 |  20.5 |    2.5 | -34 | 50 | broad              | 21.7 | 341. |
| N jet       | G    |  -7.1 |  14.5 |    1.5 | -30 | 20 | narrow             | 16.1 | 334. |
| N jet       | G    |  -7.1 |  14.5 |    1.5 | -12 | 30 | broad              | 16.1 | 334. |
| N lobe      | G    |  -7.1 |  10.5 |    2.5 | -30 | 15 | narrow, grad +/- 1 | 12.7 | 326. |
| K-NW        | G    |  -7.1 |   7.5 |    2.5 | -50 | 22 |                    | 10.3 | 317. |
| Halo S      | G    |  -7.1 |   -12 |      3 | -37 | 40 | inner halo         | 13.9 | 211. |
| Halo S      | G    |  -7.1 |   -20 |      5 | -40 | 14 |                    | 21.2 | 200. |
| Halo N      | H    |  -7.7 |    30 |      5 | -40 | 15 | very weak          | 31.0 | 346. |
| N lobe      | H    |  -7.7 |    20 |      3 | -63 | 25 |                    | 21.4 | 339. |
| N lobe      | H    |  -7.7 |  20.5 |    2.5 | -35 | 38 | broad              | 21.9 | 339. |
| N jet       | H    |  -7.7 |    15 |      2 | -29 | 17 | narrow bright      | 16.9 | 333. |
| N jet       | H    |  -7.7 |    15 |      2 | -13 | 30 | broad              | 16.9 | 333. |
| N lobe      | H    |  -7.7 |   9.5 |    2.5 | -30 | 25 |                    | 12.2 | 321. |
| K-NW        | H    |  -7.7 |     7 |      2 | -48 | 20 |                    | 10.4 | 312. |
| Halo S      | H    |  -7.7 | -13.5 |    3.5 | -39 | 44 | inner halo         | 15.5 | 210. |
| Halo S      | H    |  -7.7 |   -21 |      4 | -39 | 13 | outer halo         | 22.4 | 200. |
| Halo NW     | I    | -11.1 |  27.5 |    4.5 | -40 | 20 |                    | 29.7 | 338. |
| N jet       | I    | -11.1 |    16 |      2 | -14 | 35 | broad              | 19.5 | 325. |
| Halo/N lobe | I    | -11.1 |    16 |      5 | -42 | 25 | weak shoulder      | 19.5 | 325. |
| N lobe?     | I    | -11.1 |   7.5 |    4.5 | -39 | 26 |                    | 13.4 | 304. |
| W lobe?     | I    | -11.1 |     6 |      2 | -17 |    | weak shoulder      | 12.6 | 298. |
| Halo SW     | I    | -11.1 |   -12 |      2 | -39 | 22 | inner halo         | 16.3 | 223. |
| Halo SW     | I    | -11.1 |   -18 |      4 | -40 | 17 | outer halo         | 21.1 | 212. |
| Halo knot   | J    | -11.9 |    66 |      4 | -40 | 20 |                    | 67.1 | 350. |
| Halo NW     | J    | -11.9 |    26 |      6 | -38 | 16 |                    | 28.6 | 335. |
| N lobe?     | J    | -11.9 |  15.5 |    4.5 | -37 | 25 | maybe halo         | 19.5 | 322. |
| N lobe/jet  | J    | -11.9 |  15.5 |    2.5 | -18 | 35 |                    | 19.5 | 322. |
| W lobe      | J    | -11.9 |     6 |      5 | -35 | 26 | narrowish, halo?   | 13.3 | 297. |
| W lobe      | J    | -11.9 |     6 |      5 | -55 |    | weak shoulder      | 13.3 | 297. |
| W lobe      | J    | -11.9 |     6 |      5 | -21 |    | shoulder           | 13.3 | 297. |
| Halo SW     | J    | -11.9 |   -16 |      6 | -40 | 14 |                    | 19.9 | 217. |
| Halo knot   | K    | -16.3 |    61 |      7 | -41 | 20 |                    | 63.1 | 345. |
| Halo knot   | K    | -16.3 |  43.5 |    2.5 | -39 | 20 |                    | 46.5 | 339. |
| Halo NW     | K    | -16.3 |    25 |      5 | -40 | 14 | outer halo         | 29.8 | 327. |
| Halo NW     | K    | -16.3 |    12 |      6 | -38 | 25 | inner halo         | 20.2 | 306. |
| W lobe      | K    | -16.3 |     4 |      4 | -36 | 26 | brightest          | 16.8 | 284. |
| W lobe      | K    | -16.3 |     4 |      4 | -54 |    | weak shoulder      | 16.8 | 284. |
| Halo SW     | K    | -16.3 |    -7 |      2 | -41 | 23 | inner halo         | 17.7 | 247. |
| Halo SW     | K    | -16.3 |   -14 |      5 | -40 | 15 | outer halo         | 21.5 | 229. |
| Halo knot   | L    | -18.6 |    62 |      4 | -38 | 20 |                    | 64.7 | 343. |
| Halo NW     | L    | -18.6 |    29 |      5 | -38 | 22 | outer halo         | 34.5 | 327. |
| Halo NW     | L    | -18.6 |    16 |      8 | -33 | 35 | inner halo         | 24.5 | 311. |
| Halo NW     | L    | -18.6 |    12 |      4 | -57 |    | halo shoulder      | 22.1 | 303. |
| Halo W      | L    | -18.6 |    -7 |      2 | -41 | 23 | inner halo         | 19.9 | 249. |
| Halo SW     | L    | -18.6 |   -14 |      5 | -40 | 15 | outer halo         | 23.3 | 233. |
| W Lobe      | L    | -18.6 |     3 |      3 | -34 | 25 |                    | 18.8 | 279. |
#+TBLFM: $9=hypot($3, $4);f1::$10=arctan2($3, $4) % 360 ;f0



***** Individual slit measurements for lobes
:PROPERTIES:
:ID:       36BE5EAE-B082-400A-B020-09C3C46CD40F
:END:
+ Diagonal slit U
  + s = -18 \to -28 halo SE
    + V = -40 very narrow (W = 8 km/s)
    + This can be so narrow because it is 70 micron slit
  + s = -14 \to -18 inner halo SE
    + V = -39, W = 30
    + x = 16 sin(55) - 3 = 10, y = -12
  + s = +21 \to +45 Halo NW
  + s = +10 \to +19 is western lobe
    + Principal component at -28, -32, -36 km/s for s = 11, 12.5, 17
    + Secondary component (0.3 x brightness) at -54 km/s 
  + s = -7 \to -16 is crossing S Lobe
    + /Edited/ [2020-01-09 Thu]
    + Complicated profiles
    + Principal component is -46 km/s and is narrow, which carries on down from IS and dominates from s = -6 \to -15 (-10.5 +/- 4.5)
      + But also weaker blue shoulder at -60 km/s from -7 \to -12 (-9.5 +/- 2.5)
    + Secondary broad component at -26 km/s at -9, shifting to -30 km/s at s = -12
      + So average V = -28 with s = -6 \to -12 = (-9 +/- 3)
    + Then a component at -70 km/s from s = -12 to -18 (-15 +/- 3)
    + Then the -40 km/s component for s = -18 \to -28 (halo SE)
+ Diagonal slit R, PA=351.24, closest=-1.17, cos, sin = 0.988, -0.153
  + y = 62 Halo knot
    + V = -29, W = 26, strangely red-shifted +11 wrt systemic
  + y = 17 \to 25 North Lobe
    + V = -68, W = 23
  + y = 10 \to 19 North lobe
    + V = -32, W = 40
  + y = -10 \to -17 South lobe
    + V = -28, W = 40
  + y = -10 \to -15 South Lobe
    + V = -47, W = 35
  + y = -18 \to -22 South lobe bridge
    + V = -38, W = 25
  + y = -22 \to -26 South lobe cap
    + V = -21, W = 40
+ Diagonal slit S, PA = -17.6, cos = 0.953, sin = 0.302, closest = (-1.5, -0.5)
  + y = 13 \to 19 North lobe (or N jet)
    + V = -27, W = 23, narrow
    + V = -18, W = 35
    + V = -60, W = 50, faint shoulder but really s = 15 \to 19
  + y = 9 \to 13 North lobe
    + V = -29, W = 35
    + V = -52, W = 30
  + y = -10 \to -16 South lobe
    + V = -27, W = 40
    + V = -44, W = 35
  + y = -21 \to -26 South lobe cap
    + V = -50, W = 40
    + V = -17, W = 45
+ Vertical Slit A*
  + x = 20.55
  + All Halo
  + y = -6 \to +6 inner halo
    + V = -39, W = 30
  + y = -18 \to -10 outer halo
    + V = -40, W = 19
  + y = +8 \to +20 outer halo
    + V = -37, W = 24
  + y = +26 \to +36 halo knot
    + V = -37, W = 22
+ Vertical slit A
  + y = -14 \to -24 halo
    + V = -40, W = 13
  + y = +6 \to 12
    + V = -40, W = 25
  + y = -2 \to -13 crosses the E lobe
    + At y = -2 a weak component at V = -58 km/s appears
    + This gets dominated by a brighter less blue component: V = -48 at y = -6
    + Which fades again, leaving the V  = -58 km/s component at y = -11
    + /New/ Consolidate the V = -58 to be y = -12 \to -2 (-7 +/- 5)
    + /New/ Add red component V = -23 y = -6 \to -12 (-9 +/- 3)
+ Vertical slit B
  + y > 7 \to 24 is halo V = -40
  + y = -3 \to -7 is a strange offshoot of the intermediate shell
    + Or it could be argued is part of E lobe
    + Three components: -55, -44, and -28 (weak)
  + y = -7 \to -11 is E lobe proper
    + Two components: V = -48 and -40
      + V = -48 falls in brightness towards S
      + V = -40 stays roughly constant from s = -5 \to -14 (-9.5 +/- 4.5)
    + Plus a weak red one at V = -28
  + y = -12 \to -17 is S lobe 
    + -37 km/s and -72 km/s components
    + -37 is probably Halo
  + y = -19 \to -23 i S lobe end cap
    + Broad component at V = -50 km/s
+ Vertical Slit C
  + y = +7 \to +24 just halo at -40
  + y = -5 \to -17 S lobe
    + Three clear components: -66, -47, -27 (narrow)
      + The -66 is only -4 \to -10
      + The -27 one is ony -4 \to -13
      + The -47 one is -5 \to -19 (-12 +/- 7)
  + y = -11 \to -16 S lobe
    + Additional component at -72
  + y = -21 \to -24 S lobe end cap
    + Broad component at -48
  + y = -19 \to -24 S lobe end cap
    + Narrower component at -15
+ Vertical Slit D
  + y = +9 \to +25 just halo at -39
  + y = -9 \to -20 S lobe
    + Narrow component at V = -48
  + y = -9 \to -20 S lobe
    + Blended component at V = -61
  + y = -9 \to -20 S lobe
    + Blended component at V = -24
  + y = -21 \to -25 S lobe cap
    + V = -40
  + y = -22 \to -25 S lobe cap
    + V = -17
+ Vertical Slit E
  + y = +9 \to +14 N lobe
    + V = -53
  + y = +9 \to +19 N lobe
    + V = -31
  + y = -9 \to -15 S lobe edge
    + V = -47
  + y = -9 \to -15 S lobe edge
    + V = -28
  + y = -15 \to -23 Halo
    + V = -39
+ Vertical Slit F
  + y = +8 \to +14 N lobe
    + V = -51
  + y = +8 \to +16 N lobe
    + V = -32
  + y = +16 \to +24 N lobe cap
    + V = -54
    + With weaker shoulder at V = -30
  + y = -10 \to -24 halo
    + V = -38
    + Width varies with position (may be indication of expansion of halo)
      + FWHM W = 12 km/s at y = -21
      + W = 15 km/s at y = -17
      + W = 25 km/s at y = -15
      + Similar up to y = -10
+ Vertical Slit G
  + y = +16 to +23 North lobe
    + V = -65 narrow
  + y = +18 \to +23 North lobe
    + V = -34 broad
  + y = +13 \to +16 Northern jet
    + V = -30 narrow bright
    + V = -12 broad blended shoulder
  + y = +8 \to +13 North lobe
    + V = -30 narrow (slight gradient from -28 at y = +9 to -31 at +12)
  + y = +5 \to +10 NW knot
    + V = -50
  + y = +5 \to +8 NW knot *new*
    + V = -27 broad and strong
  + y = -9 \to -15 Inner Halo
    + V = -37 broad
      + y = -10 has W = 40 km/s
      + y = -14 has W = 26 km/s
  + y = -15 \to -25 Outer Halo
    + V = -40 narrow (W = 14 km/s)
+ Vertical Slit H
  + y = +25 \to +35 Halo
    + V = -40 (extremely weak)
  + y = +17 \to +23 North Lobe
    + V = -63
  + y = +18 \to +23 North lobe
    + V = -35 broad
  + y = +13 \to +17 Northern jet
    + V = -29 narrow bright
    + V = -13 broad shoulder
  + y = +7 \to +12 North lobe
    + V = -30
  + y = +5 \to +9 K-NW
    + V = -48
  + y = +4 \to +8 NW knot *new*
    + V = -27 broad and strong
  + y = -10 \to -17 Inner Halo
    + V = -39 broad
  + y = -17 \to -25 Outer Halo
    + V = -39 narrow
+ Vertical Slit I
  + y = +23 \to +32 Very Faint Halo
    + V = -40 narrow
  + y = +14 \to +18 Northern jet
    + V = -14  (W = 35 km/s)
  + y = +11 \to +21 Inner halo?
    + V = -42 
  + y = +3 \to +12 N lobe or W lobe?
    + V = -39 broad
  + y = +4 \to +8 Probably W lobe
    + V = -17 blended shoulder
+ Vertical Slit J
  + y = +62 \to +70 Halo knot
    + V = -40
  + y = +20 \to +32 Halo
    + V = -38 narrow
  + y = +11 \to +20 N lobe edge?
    + V = -37 possibly halo
    + V = -18 weaker shoulder, s = 13 \to 18 (15.5 +/- 2.5)
  + y = +1 \to +11 West lobe
    + V = -35 narrowish
    + V = -55 weak blue shoulder
    + V = -21 slightly stronger red shoulder
  + y = -10 \to -22 Halo
    + V = -40 narrow
+ Vertical Slit K
  + y = +54 \to +68 Halo knot
    + V = -41
  + y = +41 \to +46 Halo knot
    + V = -39
  + y = +20 \to +30 Outer Halo
    + V = -40 narrow (W = 14 km/s)
  + y = +6 \to +18 Inner Halo
    + V = -38 broad (W = 25 km/s)
  + y = 0 \to +8 West Lobe
    + V = -36 narrowish
    + V = -54 weak blue shoulder
  + y = -5 \to -9 Inner Halo
    + V = -41, W = 23
  + y = -9 \to -19
    + V = -40, W = 15
+ Vertical Slit L
  + y = +58 \to +66 Halo knot
    + V = -38, W = 20
  + y = +24 \to +34 Outer halo
    + V = -38 narrow
  + y = +8 \to +24 Inner halo
    + V = -33 narrow bright
    + V = -57 faint shoulder
  + y = 0 \to +6 West lobe
    + V = -34 km/s narrowish
  + y = -4 \to -20 Halo
    + V = -38 narrow
    + V = -21 shoulder


***** Scales in diagram with Affinity
+ Origin is 879.8, 746.1
+ Used grid with spacing of 255 pix and 10 subdivisions
+ So each subdivision is 1 arcsec

**** The haloes
+ These components are measured in the lobes section above:
  1. [[id:B2ABDE8D-2D7D-4744-9271-D1646A211AEE][Inner Halo]]
     - V = -39.1 +/- 0.5 km/s
     - W = 29.5 +/- 2.0 km/s
       - Take 0.5 W as expansion velocity: 15 km/s
       - No splitting, suggesting a filled volume
     - R = 19.2 +/- 1.2 with full range [13.6 .. 29.2]
  2. [[id:267DA5F8-900B-4A9C-BD38-A4D358FCBAB2][Outer Halo]]
     - V = -40.7 +/- 1.2 km/s
     - W = 15.6 +/- 0.7 km/s
       - Again 0.5 W gives expansion velocity: 8 km/s
       - Would be even smaller if taking into account instrumental and thermal width
     - R = 25.0 +/- 1.2 with full range [19.9 .. 34.5]
  3. [[id:4ACE802A-5105-4B30-95F1-0041E59FE26E][Halo knots]]
     - V = -39.5 +/- 0.6
     - W = 20
       - Slightly broader than outer halo
     - R = 60.4 +/- 4.7 with full range [46.5 .. 67.1]

**** The miscellaneous components
:PROPERTIES:
:ID:       A508B5CC-964C-49DE-A064-D710FC8AF5F8
:END:
+ This is inside the intermediate shell
  + Formerly known as the tongue
+ It is largely co-extensive with [N II] complexes (in projection), but has different kinematics
+ Its relationship to the intermediate shell, which surrounds it, is unclear
+ Diagonal slit U
  + This shows three components at -60, -37, and -10 km/s of similar but slightly increasing brightness
  + The -10 km/s component (s = +1 \to +6) is probably the [O III] equivalent of the SW Red Complex
  + The -60 km/s component (s = -1 \to +1) may be the [O III] equivalent of the SW Faint Blue complex
    + [X] If that is true, then we can associate some particular knots with that complex, which means that we can get proper motions - /Done/ [2019-12-09 Mon]
  + This leaves the -37 km/s component (s = 0 \to +4 with weaker extension out to +7, which may or may not be the same thing)
    + This seems to be the central bit of the tongue on the images
    + Peaks at s = +2
+ Vertical Slit F
  + Same components can be seen around y = -5
  + There is a -39 km/s component that moves to -42 km/s at y = -8, which is the edge of the intermediate shell
+ Vertical slit G
  + At y = -3 \to 2 there is a component that moves gradually in velocity
  + From -46 km/s at y = +1
    + It is about 0.25 of total brightness here, with the rest from N Red complex
  + To -41 km/s at y = -2 (and weaker)
  + To -36 km/s at y = -3 (where it crosses U at s = +4) now 0.5x brightness at y=+1
    + *This means that slit U is 2x too bright*
    + It is about 0.5 of total brightness here, with rest from SW Red
  + This is distinct from the -24 km/s (N Red complex) and -10 km/s (SW Red complex)
  + It is also seen in [N II], albeit very weak
+ Vertical Slit C
  + This is on the other side (NE) of the intermediate shell
  + At y > 0, we should be outside the peanut shell
  + Peaking at around y = 1 is a bright component at -44 km/s but I think this is the peanut shell (endcap of peanut B, or flank of peanut A?) that is brought into slit by seeing or the position being not quite right maybe
  + But then there are "horns" heading further north
    + At y = +3 there are components at -51, -33 km/s
    + Giving -42 +/- 9 km/s
    + This is similar to the peanut shell to the S in the same slit, but it can't have anything to do with that

**** Intermediate shell
+ Sector-by-sector
  | Slit |      x |    y |   PA |    R |     V |  dV |
  |------+--------+------+------+------+-------+-----|
  | F    |  -3.58 |   +7 | 333. |  7.9 | -41.5 | 9.5 |
  | D    |   2.27 |   +7 |  18. |  7.4 |   -42 |   0 |
  | D    |   2.27 | +8.5 |  15. |  8.8 | -40.5 | 4.5 |
  | C    |   5.18 |   +7 |  37. |  8.7 |   -48 |  10 |
  | B    |   9.52 |    0 |  90. |  9.5 |   -43 |   7 |
  |------+--------+------+------+------+-------+-----|
  | E    |  -1.16 |   -7 | 189. |  7.1 | -38.5 | 7.5 |
  | U    |   -2.5 |   -6 | 203. |  6.5 | -36.5 | 7.5 |
  | F    |  -3.58 |   -7 | 207. |  7.9 | -35.5 | 6.5 |
  | G    |  -6.82 | -7.5 | 222. | 10.1 |   -34 |   7 |
  | H    |  -7.29 | -7.5 | 224. | 10.5 | -33.5 | 5.5 |
  | I    | -10.59 | -2.5 | 257. | 10.9 |   -31 |  11 |
  | J    | -11.59 | -2.5 | 258. | 11.9 |   -28 |   0 |
  #+TBLFM: $4=arctan2($2, $3) % 360;f0::$5=hypot($2, $3);f1
+ Geometry is summarised in [[file:Turtle%20intermediate%20shell.pdf]]

***** Individual slit measurements for the intermediate shell
+ [X] Vertical Slit B
  + y = -3 \to +2
  + Outer IS or maybe even leakage beyond
  + Main component at -50 km/s
  + Weaker component at -36 km/s
  + Even weaker component at -67 km/s
  + First two give Vc +/- dV = -43 +/- 7 km/s
+ [X] Vertical Slit C
  + y = +6 and above
    + This is the IS proper (edge is at +8)
    + Strongest component at -38 km/s
    + Weaker component at -58 km/s
    + Even weaker at -76, but that is related to NE Blue knot complex
    + So from first two: Vc +/- dV = -48 +/- 10 km/s
  + y = +3 \to +6
    + This is the counter-tongue (*need a better name*)
    + /This is now dealt with in the [[id:A508B5CC-964C-49DE-A064-D710FC8AF5F8][miscellaneous]] section/
    + Strong components at -55 and -33
      + These give Vc +/- dV = -44 +/- 11 km/s
    + Weaker blended component at -63
    + And well-separated weak component at -79 (associated with NE Blue knot complex)
+ [X] Vertical Slit D
  + y = +6 \to +8
    + Strong single peak at -42
  + y = +7 \to +10
    + Two components at -36 and -45 => -40.5 +/- 4.5
  + Also weak broad emission that is impossible to chracaterize
+ [X] Vertical Slit E
  + y = -6 and below
  + Has -46, -31, and -15 km/s components
    + In decreasing order of brightness
    + -38.5 +/- 7.5 from first two
  + Very similar to S portion of slit F
+ [X] Vertical Slit F
  + y = -5 and below (but see [[id:A508B5CC-964C-49DE-A064-D710FC8AF5F8][The Tongue]])
    + There is an unrelated blue component due to Complex SE Blue at -63
    + All else should be the IS
    + Strongest component is at -42
    + Weaker component at -29
    + So Vc +/- dV is -35.5 +/- 6.5
    + But there is an even weaker component at -11 (3 x weaker than -42 km/s)
      + Using the outer two would give -26.5 +/- 15.5
      + /does this makes more sense?/
      + Problem is that the -11 may be related to the SW Red knot complex
      + Whereas there  is no [N II] emission associated with the -42 and -29 components
  + y = +6 and above
    + Two similar strength components at -32 and -51
    + => Vc +/- dV = -41.5 +/- 9.5
+ [X] Vertical Slits G, H
  + y = -8.5 \to -6
  + Regions to N of y = -6 are dominated by the knot complex SW Red, which is 16 times brighter than intermediate shell
  + G: Components at -41 and -27 km/s
    + -34 +/- 7 km/s
  + H: Components at -39 and -28 km/s
    + -33.5 +/- 5.5
+ [X] Vertical Slits I, J
  + y = -6 \to +1
  + Intermediate shell dominates
  + I: Components at -42, -20 km/s
    + -31 +/- 11
    + Another component at -6 km/s (y = -3), but that is likely related to SW Red complex
  + J: Component at -28 km/s only
+ [X] Diagonal slit U
  + s = -6 \to -1
    + Two components: -44 (stronger) and -29 km/s
    + Vc +/- dV = -36.5 +/- 7.5 km/s
  + Other end
    + Two components: -22 (stronger) and -41 km/s (similar to Slit I)
    + Also, edge of shell (s = +10 to +12) has single component V = -31

*** [N II] 
**** Central region - bright complexes of knots (mainly 2015 spectra)
:PROPERTIES:
:ID:       1222AB38-09A3-4137-AB57-195E267B1755
:END:
+ These are what I used to call blobs (after their appearance in the PV diagrams, but complex is better, since they clearly break into many knots in the HST images)
+ Note that I have shifted slits E* and F* slightly to W (about 1 arcsec)
+ And have shifted W about 1 arcsec N
+ Both these are to improve consistency of overlaps and continuity
+ NE Blue Complex
  #+name: nii-ne-blue
  | slit |          |    x |    y |   y1 |   y2 |  VV |      S |   V |
  |------+----------+------+------+------+------+-----+--------+-----|
  | d*   | spm119   | +8.4 | +0.8 | -1.5 |  3.0 | -91 | 0.0005 | -51 |
  | c'   | spm0031  | +4.2 | +3.3 | -0.3 |  6.5 | -92 |  0.008 | -52 |
  | e*   | spm116   | +3.5 | +1.8 | -0.4 |  4.5 | -90 |  0.018 | -50 |
  | f*   | spm112   | +2.7 | +1.6 | -1.4 |  5.5 | -88 |  0.042 | -48 |
  | d'   | spm0037  | +1.6 | +3.3 | -0.9 |    7 | -85 |  0.030 | -45 |
  | e'   | spm0043  | -1.0 | +2.5 | -0.3 |    6 | -85 |  0.011 | -45 |
  | g    | spm112-2 | -1.5 | +2.8 | -0.3 |  6.5 | -80 |  0.004 | -40 |
  |------+----------+------+------+------+------+-----+--------+-----|
  | w    | spm329   |  1.3 | -2.5 | -0.7 |  2.7 | -86 |  0.009 | -46 |
  | w    | spm329   |  3.5 | -2.0 |  2.1 |  4.8 | -93 | 0.0045 | -53 |
  | o    | obj1003  |  6.1 | -0.4 |  8.5 |  4.6 | -91 |  0.025 | -51 |
  | o    | obj1003  |  3.2 | -0.3 |  4.8 | -0.3 | -85 |  0.045 | -45 |
  | t    | spm224   | -0.6 |  0.1 | -1.4 |  2.7 | -83 | 0.0010 | -43 |
#+TBLFM: $8=$-2 + 40
+ N Red Complex
  #+name: nii-n-red
  | slit |          |     x |    y |   y1 |   y2 |  VV |      S |  V |
  |------+----------+-------+------+------+------+-----+--------+----|
  | c'   | spm0031  |  +4.2 |  4.0 | -0.2 |  7.7 | -20 | 0.0007 | 20 |
  | e*   | spm116   |  +3.5 |  3.0 | -1.1 |  5.7 | -23 |  0.005 | 17 |
  | f*   | spm112   |  +2.7 |  2.4 | -1.2 |  6.6 | -17 |  0.045 | 23 |
  | d'   | spm0037  |  +1.6 |  4.0 |  1.0 |  7.7 | -20 |  0.018 | 20 |
  | e'   | spm0043  |  -1.0 |  2.8 |  0.3 |  6.5 | -13 |  0.068 | 27 |
  | g*   | spm112-2 |  -1.5 |  3.4 | -0.2 |    5 | -15 |  0.068 | 25 |
  | f'   | spm0049  |  -4.7 |  2.2 | -0.2 |  4.7 | -16 |  0.048 | 24 |
  | g'   | spm0057  |  -6.7 |  2.2 | -0.3 |  4.0 | -16 |  0.036 | 24 |
  | h'   | spm0173  |  -7.9 |  1.6 | -0.2 |  2.8 | -20 |  0.015 | 20 |
  | j*   | spm125   |  -9.2 |  0.5 | -2.1 |  2.3 | -19 |  0.007 | 21 |
  | i'   | spm0124  | -10.0 |  2.0 | -0.3 |    4 | -20 |  0.004 | 20 |
  |------+----------+-------+------+------+------+-----+--------+----|
  | v    | spm230   |  -5.7 |  1.5 | -3.5 | -8.9 | -17 |  0.051 | 23 |
  | o    | obj1003  |   1.0 | -0.2 |  6.0 | -0.6 | -15 |   0.14 | 25 |
  | o    | obj1003  |  -1.8 | -0.1 |  0.1 | -5.1 | -19 |   0.13 | 21 |
  | t    | spm224   |  -1.6 |  2.9 |  0.5 |  6.1 | -17 |  0.089 | 23 |
  #+TBLFM: $9=$-2 + 40
I suspect that slit g* is actually further to W than -1.5
+ SE Blue Complex (includes K-SE)
  #+name: nii-se-blue
  | slit |         |     x |    y |   y1 |   y2 |  VV |      S |   V |
  |------+---------+-------+------+------+------+-----+--------+-----|
  | c'   | spm0031 | +4.19 |   -3 | -5.1 | -1.9 | -78 |  0.004 | -38 |
  | e*   | spm116  | +4.63 | -4.2 |   -6 |   -3 | -75 | 0.0095 | -35 |
  | f*   | spm112  |    +2 | -3.9 |   -5 | -2.5 | -71 |  0.020 | -31 |
  | d'   | spm0037 |  +1.6 | -2.5 | -4.3 | -0.8 | -69 |  0.013 | -29 |
  |------+---------+-------+------+------+------+-----+--------+-----|
  | v    | spm230  |   3.7 | -2.4 |  6.6 |  0.7 | -74 |  0.016 | -34 |
  | t    | spm224  |  6e-2 | -1.5 | -5.4 | -1.4 | -68 | 0.0015 | -28 |
#+TBLFM: $6=40 + $-2
+ SW Faint Blue Complex
  #+name: nii-sw-blue
  | slit |          |     x |    y |   y1 |   y2 |  VV |      S |   V |
  |------+----------+-------+------+------+------+-----+--------+-----|
  | g    | spm112-2 | -1.49 | -3.5 | -4.8 | -1.4 | -66 | 0.0008 | -26 |
  | f'   | spm0049  | -4.65 | -3.9 | -6.1 | -2.2 | -64 | 0.0015 | -24 |
  | h    | spm122   | -4.92 | -4.8 | -6.5 |   -3 | -66 | 0.0018 | -26 |
  | i    | spm023   | -6.22 | -4.4 | -7.3 | -2.7 | -66 | 0.0005 | -26 |
  |------+----------+-------+------+------+------+-----+--------+-----|
  | w    | spm329   |  -5.4 | -3.9 | -6.6 | -1.5 | -67 | 0.0006 | -27 |
#+TBLFM: $9=$-2 + 40
+ SW Red Complex 
  #+name: nii-sw-red
  | slit |          |     x |     y |   y1 |    y2 |   VV |       S |    V |
  |------+----------+-------+-------+------+-------+------+---------+------|
  | g    | spm112-2 | -1.49 |  -0.5 | -2.7 |   0.7 | -6.6 |   0.014 | 33.4 |
  | f'   | spm0049  | -4.65 |  -1.4 | -4.4 |   0.0 | -3.6 |   0.017 | 36.4 |
  | h    | spm122   | -4.92 |  -3.1 | -6.1 |  -1.4 | -0.7 |   0.053 | 39.3 |
  | g'   | spm0057  | -6.73 |  -2.7 | -5.2 |  -0.5 | -0.2 |   0.023 | 39.8 |
  | h'   | spm0173  | -7.93 |  -2.9 | -5.0 |  -0.8 | -1.5 |   0.026 | 38.5 |
  | j*   | spm125   |  -9.2 |  -3.4 | -7.6 |  -1.7 |   -3 |   0.018 |   37 |
  | i'   | spm0124  |   -10 |  -3.1 | -6.0 |  -1.4 | -2.2 |  0.0013 | 37.8 |
  |------+----------+-------+-------+------+-------+------+---------+------|
  | w    | spm329   |  -2.6 |  -3.3 | -5.6 |   2.5 |  -10 |   0.020 |   30 |
  | w    | spm329   |  -8.0 |  -4.5 | -4.6 | -11.2 |   -2 |   0.022 |   38 |
  | v    | spm230   |  -2.0 | -4e-2 |  2.0 |  -3.5 |   -9 |   0.048 |   31 |
  | v    | spm230   |   3.4 |  -2.3 |  4.6 |   2.0 |   -7 | 0.00066 |   33 |
  | t    | spm224   |  -0.4 |  -0.3 | -3.7 |   1.1 |   -6 |   0.060 |   34 |
#+TBLFM: $9=$-2 + 40
+ K-NW
  #+name: nii-k-nw
  | slit |         |     x |   y |  y1 |  y2 |  VV |      S |  V |
  |------+---------+-------+-----+-----+-----+-----+--------+----|
  | g'   | spm0057 | -6.73 | 5.5 | 4.7 | 6.7 | -23 |  0.005 | 17 |
  | h'   | spm0173 | -7.93 | 5.2 | 4.1 | 6.4 | -21 | 0.0015 | 19 |
  #+TBLFM: $9=$-2 + 40
Note that this knot has a slight hook to the N that moves to the blue (V=-36 at y = 6)
***** Non-vertical slits
+ These I do separately, since we need a calculation to find x, y coordinates
+ Then I will incorporate them into the above tables too, for the plot
+ Slit W:
  + PA=77.9;
  + offset=+2.7;
  + (sin, cos) = 0.978, 0.210
  + x = 2.7 cos(77.9) + s sin(77.9)
  + y = -2.7 sin(77.9) + s cos(77.9)
  + Note that the ~SE B?~ components seem to be a bridge between SE Blue and NE Blue, and closer to the latter, suggesting that the position should be a little higher than we think:
    |   |        |    s |   s1 |    s2 |    x |    y |   x1 |    x2 |   V |      S |   V | System |
    |---+--------+------+------+-------+------+------+------+-------+-----+--------+-----+--------|
    | w | spm329 | 0.76 | -1.3 |   2.2 |  1.3 | -2.5 | -0.7 |   2.7 | -86 |  0.009 | -46 | SE B?  |
    | w | spm329 |  3.0 |  1.6 |   4.3 |  3.5 | -2.0 |  2.1 |   4.8 | -93 | 0.0045 | -53 | SE B?  |
    | w | spm329 | -6.1 | -7.3 |  -2.1 | -5.4 | -3.9 | -6.6 |  -1.5 | -67 | 0.0006 | -27 | SW FB  |
    | w | spm329 | -3.2 | -6.3 |   2.0 | -2.6 | -3.3 | -5.6 |   2.5 | -10 |  0.020 |  30 | SW R   |
    | w | spm329 | -8.8 | -5.3 | -12.0 | -8.0 | -4.5 | -4.6 | -11.2 |  -2 |  0.022 |  38 | SW R   |
    #+TBLFM: $6=2.7 0.210 + $3 0.978;f1::$7=-2.7 0.978  + $3 0.210;f1::$8=2.7 0.210  + $4 0.978;f1::$9=2.7 0.210  + $5 0.978;f1::$12=$-2 +40

+ Slit V
  + PA=292.8
  + offset=-0.799
  + (sin, cos) = -0.922, 0.388
  + x = -0.799 0.388 - 0.922 s
  + y = -0.799 0.922 + 0.388 s
    + Are these y values right - don't seem so
  + Table
    |   |        |    s |   s1 |   s2 |    x |     y |   x1 |   x2 |   V |       S |   V | System  |
    |---+--------+------+------+------+------+-------+------+------+-----+---------+-----+---------|
    | v | spm230 | -4.3 | -7.5 | -1.1 |  3.7 |  -2.4 |  6.6 |  0.7 | -74 |   0.016 | -34 | SE Blue |
    | v | spm230 |  5.8 |  3.5 |  9.3 | -5.7 |   1.5 | -3.5 | -8.9 | -17 |   0.051 |  23 | N Red   |
    | v | spm230 |  1.8 | -2.5 |  3.5 | -2.0 | -4e-2 |  2.0 | -3.5 |  -9 |   0.048 |  31 | SW Red  |
    | v | spm230 |   -4 | -5.3 | -2.5 |  3.4 |  -2.3 |  4.6 |  2.0 |  -7 | 0.00066 |  33 | SW Red  |
    #+TBLFM: $6=-0.799 0.388 - $3 0.922;f1::$7=-0.799 0.922  + $3 0.388;f1::$8=-0.799 0.388 - $4 0.922;f1::$9=-0.799 0.388  - $5 0.922;f1::$12=$-2 +40
+ Slit O
  + PA=272.3
  + offset=0.185
  + (sin, cos) = -0.999, 0.04
  + x = 0.185 0.04 - 0.999 s
  + y = -0.185 + 0.04 s
  + Table
    |   |         |    s |   s1 |   s2 |    x |    y |  x1 |   x2 |   V |     S |   V | System |
    |---+---------+------+------+------+------+------+-----+------+-----+-------+-----+--------|
    | o | obj1003 | -6.1 | -8.5 | -4.6 |  6.1 | -0.4 | 8.5 |  4.6 | -91 | 0.025 | -51 | NE B   |
    | o | obj1003 | -3.2 | -4.8 |  0.3 |  3.2 | -0.3 | 4.8 | -0.3 | -85 | 0.045 | -45 | NE B   |
    | o | obj1003 |   -1 | -6.0 |  0.6 |  1.0 | -0.2 | 6.0 | -0.6 | -15 |  0.14 |  25 | N Red  |
    | o | obj1003 |  1.8 | -0.1 |  5.1 | -1.8 | -0.1 | 0.1 | -5.1 | -19 |  0.13 |  21 | N Red  |
    #+TBLFM: $6=0.185 0.04 - $3 0.999;f1::$7=-0.185 0.999  + $3 0.04;f1::$8=0.185 0.04  - $4 0.999;f1::$9=0.185 0.04  - $5 0.999;f1::$12=$-2 +40
+ Slit T
  + PA=339.72
  + offset=-0.66
  + (sin, cos) = -0.355, 0.935
  + x = -0.66 0.935 - 0.355 s
  + y = 0.66 0.355 + 0.935 s
  + Table
    |   |        |    s |   s1 |   s2 |    x |    y |   y1 |   y2 |   V |      S |   V | System  |
    |---+--------+------+------+------+------+------+------+------+-----+--------+-----+---------|
    | t | spm224 | -0.1 | -1.7 |  2.6 | -0.6 |  0.1 | -1.4 |  2.7 | -83 | 0.0010 | -43 | NE B?   |
    | t | spm224 | -1.9 | -6.0 | -1.8 | 6e-2 | -1.5 | -5.4 | -1.4 | -68 | 0.0015 | -28 | SE B?   |
    | t | spm224 |  2.8 |  0.3 |  6.3 | -1.6 |  2.9 |  0.5 |  6.1 | -17 |  0.089 |  23 | N Red   |
    | t | spm224 | -0.6 | -4.2 |  0.9 | -0.4 | -0.3 | -3.7 |  1.1 |  -6 |  0.060 |  34 | SW Red? |
    | t | spm224 | 15.8 | 13.5 | 18.1 | -6.2 | 15.0 | 12.9 | 17.2 | -17 | 0.0019 |  23 | Knot    |
    #+TBLFM: $6=-0.66 0.935 - $3 0.355;f1::$7=0.66 0.355  + $3 0.935;f1::$8=0.66 0.355  + $4 0.935;f1::$9=0.66 0.355  + $5 0.935;f1::$12=$-2 +40
***** Graph of all knot-complex components
#+header: :var TAB_SW_RED=nii-sw-red TAB_K_NW=nii-k-nw TAB_N_RED=nii-n-red
#+header: :var TAB_SW_BLUE=nii-sw-blue TAB_SE_BLUE=nii-se-blue TAB_NE_BLUE=nii-ne-blue
#+begin_src python :colnames no :return figname :results file
  import sys
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns
  sns.set_color_codes()

  complexes = [
      [TAB_N_RED,   "s", "Reds",],
      [TAB_SW_RED,  "o", "PuRd",],
      [TAB_K_NW,    "X", "Oranges",],
      [TAB_SE_BLUE, "^", "Blues",],
      [TAB_NE_BLUE, "P", "Purples",],
      [TAB_SW_BLUE, "v", "Greens",],
  ]

  pa = 70
  cpa = np.cos(np.deg2rad(pa))
  spa = np.sin(np.deg2rad(pa))

  # unit vector along slit
  uX = spa, cpa
  # unit vector across slit
  uY = cpa, -spa

  figname = "turtle-knot-complexes-velocity-axes.pdf"
  fig, [axA, axB] = plt.subplots(2, 1, figsize=(5, 5))
  axA.axhline(0, ls=":", c="k")
  axB.axhline(0, ls=":", c="k")
  axA.axvline(0, ls=":", c="k")
  axB.axvline(0, ls=":", c="k")

  for intab, marker, cmap in complexes:
      t = Table(
          rows=intab[1:],
          names=intab[0],
      )

      sys.stderr.write(f"{t}\n")
      sys.stderr.write(f"{t.dtype}\n")

      t["x"] = t["x"].astype(float)
      t["y"] = t["y"].astype(float)

      t["X"] = t["x"]*uX[0] + t["y"]*uX[1]
      t["Y"] = t["x"]*uY[0] + t["y"]*uY[1]

      t["sX"] = np.abs(t["X"])
      t["sY"] = np.abs(t["Y"])

      size = 20*(np.log10(t["S"]) + 4)**2
      axA.scatter("Y", "V", data=t, marker=marker, vmin=-10, vmax=10.0,
                  c="X", s=size, edgecolors="k", cmap=cmap)
      axB.scatter("X", "V", data=t, marker=marker, vmin=-8.0, vmax=8.0,
                  c="Y", s=size, edgecolors="k", cmap=cmap)

  axA.set(
      xlabel=f"Position along PA = {pa+90}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-60, 60],
  )
  axB.set(
      xlabel=f"Position along PA = {pa}, arcsec",
      ylabel="Line-of-sight velocity, km/s",
      xlim=[-13, 13],
      ylim=[-60, 60],
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figname)
#+end_src

#+RESULTS:
[[file:turtle-knot-complexes-velocity-axes.pdf]]

***** Cross comparison with isovel images
+ I have now identified these on the isovel images
  + The NE Blue Complex (V=-45) shows up in the -100-080 channel
  + The SE Blue Complex (V=-30) in the -080-060 channel
  + The SW Faint Blue Complex (V=-26) is barely visible
    + 
  + The N Red Complex (V=+25) in the -020+000 channel
  + The SW Red Complex (V=+39) in the +000+020 channel
**** Make RGB images to show the [N II] knot complexes
#+begin_src sh :results silent
  open -n -a SAOImageDS9 --args -title rgbmaps
#+end_src

First the blue-shifted complexes
#+BEGIN_SRC sh :dir ../data/maps20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb 
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-060-040.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-080-060.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-100-080.fits[3]
#+END_SRC

Second the red-shifted complexes
#+BEGIN_SRC sh :dir ../data/maps20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-nii+000+020.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-020+000.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-040-020.fits[3]
#+END_SRC

    
+ Made an image of these
  + [[file:~/Dropbox/Teresa-Turtle/figs/Screenshot-turtle-nii-knot-complexes.png]]

***** DONE Correct the velocity of the slit spm125
CLOSED: [2020-01-30 Thu 20:06]
+ This is clearly off by about 20 km/s, which you can see on the isovelocity images
+ Unfortunately, this involves going back and working out how I did the velocity calibration
+ The offending slit is ~009-spm125_bcrx-ha~
  + It looks obviously wrong in the PV diagrams
  + The adjacent (in time) slits are ~008-spm122_bcrx-ha~, which looks fine, and ~010-spm130_bcrx-ha~, which is not used for some reason
+ The spectra are written in [[id:2261B771-A00A-408E-9569-9E68079034EB][Write PV spectra with velocities and slit offsets]] but it is better to just fix the one file by hand
+ This seems to have worked
#+begin_src python :results output
  from astropy.io import fits
  from astropy.wcs import WCS

  fn = "../data/PVoffset/009-spm125_bcrx-nii-PA359-sep-009.fits"
  hdu, = fits.open(fn)
  w = WCS(hdu)
  # Original value was about -230.0
  w.wcs.crval[0] = -250.0
  hdu.header.update(w.to_header())
  hdu.writeto(fn, overwrite=True)
#+end_src

#+RESULTS:

+ But it turns out that we need to do the ~pvextract~ versions because they are the ones that are used to construct the isovelocity images
#+begin_src python :results output
  from astropy.io import fits
  from astropy.wcs import WCS

  fn = "../data/pvextract/009-spm125_bcrx-nii.fits"
  hdu, = fits.open(fn)
  w = WCS(hdu, key="A")

  # Original value was about -230.0
  w.wcs.crval[0] = 6.5784641404524e-07*(1.0 - 20.0/3e5)
  hdu.header.update(w.to_header())
  hdu.writeto(fn, overwrite=True)
#+end_src

#+RESULTS:


***** DONE Redo the isovel images to account for the corrected slit
CLOSED: [2020-01-31 Fri 21:01]
Just a matter of re-running [[file:~/Dropbox/Teresa-Turtle/scripts/make-isovel-maps-20.sh]]

***** DONE Make better figures of these images
CLOSED: [2020-02-13 Thu 12:31]
+ Based on [[id:9B0BB7D0-1CFB-4129-A918-B4A7CB085941][Make figures of maps]] from Raman project

#+begin_src python :eval no :tangle ../scripts/turtle-rgb-map-nii-knots.py
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.io import fits
  from astropy.wcs import WCS

  DATADIR = "data/maps20"
  HDU = "SCALED"
  LINEID = "nii"
  STRETCH = 0.15
  Q = 8

  def load_and_scale_channel(vel, v1, v2, ihdu=HDU, nancolor=0.5):
      """Load channel given central velocity wrt systemic

      Then scale so that [0 -> 1] maps to [v1 -> v2]
      """
      velstring = f"{int(-40.0 + vel - 10.0):+04d}{int(-40.0 + vel + 10.0):+04d}"
      hdu = fits.open(f"{DATADIR}/turtle-slits-{LINEID}{velstring}.fits")[ihdu]
      im = (hdu.data - v1) / (v2 - v1)
      im[~np.isfinite(im)] = nancolor
      return im, WCS(hdu)


  image_r, w = load_and_scale_channel(-10, 0.0, 0.04, nancolor=0.02)
  image_g, _ = load_and_scale_channel(-30, 0.0, 0.05, nancolor=0.02)
  image_b, _ = load_and_scale_channel(-50, 0.0, 0.06, nancolor=0.02)
  # im_blue = make_lupton_rgb(image_r, image_g, image_b, stretch=STRETCH, Q=Q)
  im_blue = make_lupton_rgb(
      0.0*image_r,
      (image_g + 2*image_r)/3,
      (2*image_b + image_g)/3,
      stretch=STRETCH, Q=Q)

  image_r, w = load_and_scale_channel(50, 0.0, 0.08, nancolor=0.02)
  image_g, _ = load_and_scale_channel(30, 0.0, 0.2, nancolor=0.02)
  image_b, _ = load_and_scale_channel(10, 0.0, 0.1, nancolor=0.02)
  #im_red = make_lupton_rgb(image_r, image_g, image_b, stretch=STRETCH, Q=Q)
  im_red = make_lupton_rgb(
      (2*image_r + image_g)/3,
      (image_g + 2*image_b)/3,
      0.0*image_b,
      stretch=STRETCH, Q=Q)

  hdu_hst = fits.open("propermotions/nii/n6210n-rescaled-1998.fits")[0]
  whst = WCS(hdu_hst)

  figfile = "turtle-rgb-map-nii-knots.pdf"

  fig, [ax1, ax2] = plt.subplots(
      1, 2,
      figsize=(10, 5),
      sharex=True, sharey=True, 
      subplot_kw=dict(projection=w)
  )
  ax1.imshow(im_blue)
  ax1.contour(
      hdu_hst.data,
      levels=[0.05, 0.1, 0.2, 0.5, 1.0, 2.0],
      linewidths=[0.3, 0.5, 0.7, 1.0, 1.3, 1.6],
      colors="pink",
      transform=ax1.get_transform(whst),
  )
  ax1.set(
      xlim=[190, 320],
      ylim=[200, 330],
      xlabel="RA (J2000)",
      ylabel="Dec (J2000)",
  )

  ax2.imshow(im_red)
  ax2.contour(
      hdu_hst.data,
      levels=[0.05, 0.1, 0.2, 0.5, 1.0, 2.0],
      linewidths=[0.3, 0.5, 0.7, 1.0, 1.3, 1.6],
      colors="cyan",
      transform=ax2.get_transform(whst),
  )
  lon, lat = ax2.coords
  lat.set_ticklabel_visible(False)
  lon.set_axislabel(" ")


  fig.tight_layout(rect=[0.1, 0.08, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
  print(figfile, end="")
#+end_src

#+RESULTS:

#+begin_src sh :dir .. :results file
python scripts/turtle-rgb-map-nii-knots.py
#+end_src

#+RESULTS:
[[file:../turtle-rgb-map-nii-knots.pdf]]

+ So, what I have done here is to map the blue-shifted channels onto blue \to green and the red-shifted channels onto green \to red
+ This makes the figure easier to interpret
+ [X] Now, just need to add the knot complexes on with Affinity
  + [[file:~/Dropbox/Teresa-Turtle/figs/turtle-nii-knot-complexes.afdesign]]
  + [[file:~/Dropbox/Teresa-Turtle/figs/turtle-nii-knot-complexes.pdf]]
**** Color isovel image of the He II shell
+ We only use 3 channels here, instead of the 6 that we used for [N II]
+ This is because the range of velocities is less
+ Hence, we only need one panel
+ Also, make it be a zoom in
  + Previously we had x=[190, 320], y=[200, 330]
    + That is (255, 265) +/- 65
  + We crop by a bit less than half and center better
  + [220, 290] and [220, 290]

#+begin_src python :eval no :tangle ../scripts/turtle-rgb-map-heii-shell.py
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.io import fits
  from astropy.wcs import WCS

  DATADIR = "data/maps20"
  HDU = "SCALED"
  LINEID = "heii"
  STRETCH = 0.4
  Q = 5

  def load_and_scale_channel(vel, v1, v2, ihdu=HDU, nancolor=0.5):
      """Load channel given central velocity wrt systemic

      Then scale so that [0 -> 1] maps to [v1 -> v2]
      """
      velstring = f"{int(-40.0 + vel - 10.0):+04d}{int(-40.0 + vel + 10.0):+04d}"
      hdu = fits.open(f"{DATADIR}/turtle-slits-{LINEID}{velstring}.fits")[ihdu]
      im = (hdu.data - v1) / (v2 - v1)
      im[~np.isfinite(im)] = nancolor
      return im, WCS(hdu)


  image_r, w = load_and_scale_channel(20, 0.0, 0.004, nancolor=0.1)
  image_g, _ = load_and_scale_channel(0, 0.0, 0.005, nancolor=0.1)
  image_b, _ = load_and_scale_channel(-20, 0.0, 0.002, nancolor=0.02)
  im = make_lupton_rgb(image_r, image_g, image_b, stretch=STRETCH, Q=Q)

  hdu_hst = fits.open("propermotions/oiii/oiii-ago1997-win.fits")[0]
  whst = WCS(hdu_hst)

  figfile = "turtle-rgb-map-heii-shell.pdf"

  fig, ax = plt.subplots(figsize=(5, 5), subplot_kw=dict(projection=w))
  ax.imshow(im)
  levs = [2.5, 5, 10, 20, 40, 80] 
  lws = np.array([0.3, 0.5, 0.7, 1.0, 1.3, 1.6])
  ax.contour(
      hdu_hst.data,
      levels=levs,
      linewidths=lws + 0.8,
      colors="k",
      transform=ax.get_transform(whst),
  )
  ax.contour(
      hdu_hst.data,
      levels=levs,
      linewidths=lws,
      colors="y",
      transform=ax.get_transform(whst),
  )
  ax.set(
      xlim=[220, 290],
      ylim=[223, 293],
      xlabel="RA (J2000)",
      ylabel="Dec (J2000)",
  )


  fig.tight_layout(
      rect=[0.18, 0.04, 1.0, 1.0]
  )
  fig.savefig(figfile, dpi=200)
  print(figfile, end="")
#+end_src

#+begin_src sh :dir .. :results file
python scripts/turtle-rgb-map-heii-shell.py
#+end_src

#+RESULTS:
[[file:../turtle-rgb-map-heii-shell.pdf]]

Now do one exactly the same, but show the high-pass filtered HST image as a grayscale, and don't show the velocity channels - /actually, no need - I used the image I already had in the [O III] figure/


**** Do Equivalent RGB images of oiii
First the blue-shifted complexes
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb 
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-060-040.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-080-060.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-100-080.fits[3]
#+END_SRC

Second the red-shifted complexes
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+000+020.fits[3]
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-020+000.fits[3]
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-040-020.fits[3]
#+END_SRC

And repeat for multibin
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb 
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-060-040-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-080-060-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-100-080-multibin.fits
#+END_SRC

#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:51364
  xpaset -p $DS9 rgb
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+000+020-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-020+000-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-040-020-multibin.fits
#+END_SRC

**** Proper motions and 3D position/velocities of the knot complexes
:PROPERTIES:
:ID:       76A2C7C7-5190-41B7-90FA-30E35F6A455C
:END:
+ Assume 10 mas/yr = 95 km/s
 | Complex       | V_r | V_t       | tan(i)           | inc          | V            | R_proj | R               |
 |---------------+-----+-----------+------------------+--------------+--------------+--------+-----------------|
 | NE Blue       | -45 | 43 +/- 9  | -0.956 +/- 0.200 | -44. +/- 6.  | 62. +/- 6.   |      5 | 7.2 +/- 0.8     |
 | SE Blue       | -30 | 47 +/- 9  | -1.567 +/- 0.300 | -57. +/- 5.  | 56. +/- 8.   |      5 | 6.0 +/- 0.3     |
 | K-SW          | -35 | 47 +/- 9  | -1.343 +/- 0.257 | -53. +/- 5.  | 59. +/- 7.   |      5 | 6.3 +/- 0.4     |
 | SW Faint Blue | -26 | 24 +/- 9  | -0.923 +/- 0.346 | -43. +/- 11. | 35. +/- 6.   |      6 | 8.8 +/- 1.8     |
 | N Red         | +25 | [1 .. 10] | [0.040 .. 0.400] | [2. .. 22.]  | [25. .. 27.] |      4 | [10.7 .. 114.6] |
 | SW Red        | +39 | 22 +/- 9  | 0.564 +/- 0.231  | 29. +/- 10.  | 45. +/- 4.   |      7 | 14.4 +/- 4.5    |
 | K-NW          | +18 | 12 +/- 9  | 0.667 +/- 0.500  | 34. +/- 20.  | 22. +/- 5.   |      9 | 16.1 +/- 8.3    |
 | N Jet         | +23 | 62 +/- 9  | 2.696 +/- 0.391  | 70. +/- 3.   | 66. +/- 8.   |     15 | 16.0 +/- 0.3    |
 #+TBLFM: $4=$3/$2;f3::$5=arctan($4);f0::$6=sqrt($2**2 + $3**2);f0::$8=$-1/sin(abs($5));f1

+ So, the red N jet is moving closest to plane of sky (i = 70)
+ Followed by SE Blue complex (K-SE) at i = -57 (really i = 123)
+ Then NE Blue complex at -45 (135)
+ I have now done a sketch of all this, which shows the red complexes as farther out and slower.
+ Repeat but "correcting" the radial velocities by factor of 1.2 for the gas/pattern speed distinction
+ And also correct the inclinations to be wrt plane of sky
 | Complex       | V_r | V_t       | tan(i)            | inc          | V            | R_proj | R               |
 |---------------+-----+-----------+-------------------+--------------+--------------+--------+-----------------|
 | NE Blue       | -45 | 43 +/- 9  | -1.256 +/- 0.263  | -51. +/- 6.  | 69. +/- 6.   |      5 | 7.9 +/- 1.0     |
 | SE Blue       | -30 | 47 +/- 9  | -0.766 +/- 0.147  | -37. +/- 5.  | 59. +/- 7.   |      5 | 6.3 +/- 0.4     |
 | K-SE          | -35 | 47 +/- 9  | -0.894 +/- 0.171  | -42. +/- 5.  | 63. +/- 7.   |      5 | 6.7 +/- 0.5     |
 | SW Faint Blue | -26 | 24 +/- 9  | -1.300 +/- 0.488  | -52. +/- 10. | 39. +/- 5.   |      6 | 9.7 +/- 2.2     |
 | N Red         | +25 | [1 .. 10] | [3.000 .. 30.000] | [72. .. 88.] | [30. .. 32.] |      4 | [12.9 .. 114.6] |
 | SW Red        | +39 | 22 +/- 9  | 2.127 +/- 0.870   | 65. +/- 9.   | 52. +/- 4.   |      7 | 16.6 +/- 5.6    |
 | K-NW          | +18 | 12 +/- 9  | 1.800 +/- 1.350   | 61. +/- 18.  | 25. +/- 4.   |      9 | 18.6 +/- 10.5   |
 | N Jet         | +23 | 62 +/- 9  | 0.445 +/- 0.065   | 24. +/- 3.   | 68. +/- 8.   |     15 | 16.4 +/- 0.4    |
 #+TBLFM: $4=1.2 ($2)/($3);f3::$5=arctan($4);f0::$6=sqrt((1.2 $2)**2 + $3**2);f0::$8=$-1/cos($5);f1
+ [ ] I should divide up the side-view picture into a W and E half
  + and rotate it so that N-S is up-down and blue-red is left-right
  + The N Red complex would appear on both halves

** Calculate moment maps [2019-12-02 Mon]
+ Best to use the 10 km/s channels for optimum precision

#+begin_src python :tangle ../scripts/moments-from-channels.py
  import sys
  import numpy as np
  from astropy.io import fits

  try:
      lineid = sys.argv[1]
  except:
      sys.exit(f"Usage {sys.argv[0]} LINEID")


  prefix = f"../data/maps/turtle-slits-{lineid}"
  vels = np.arange(-75.0, +15.0, 10.0)
  nv = len(vels)

  # make a cube from the stack of isovel images
  imstack = []
  for vel in vels:
      vstring = f"{int(vel-5.0):+04d}{int(vel+5.0):+04d}"
      filename = f"{prefix}{vstring}.fits"
      hdu = fits.open(filename)["SCALED"]
      imstack.append(hdu.data)

  imcube = np.stack(imstack, axis=0)
  vcube = vels[:, None, None]*np.ones_like(imcube)
  vmean = np.average(vcube, weights=imcube, axis=0)
  sigsq = np.average((vcube - vmean)**2, weights=imcube, axis=0)
  sigma = np.sqrt(sigsq)

  fits.PrimaryHDU(header=hdu.header, data=vmean).writeto(
      f"{prefix}-vmean.fits", overwrite=True,
  )
  fits.PrimaryHDU(header=hdu.header, data=sigma).writeto(
      f"{prefix}-sigma.fits", overwrite=True,
  )
#+end_src

#+RESULTS:
: None

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels.py nii
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels.py ha
#+end_src

#+RESULTS:

Repeat, but using the 20 km/s channels

#+begin_src python :tangle ../scripts/moments-from-channels20.py
  import sys
  import numpy as np
  from astropy.io import fits

  try:
      lineid = sys.argv[1]
      try:
          suffix = sys.argv[2]
      except:
          suffix = ""
  except:
      sys.exit(f"Usage {sys.argv[0]} LINEID [SUFFIX]")

  mapdir = "maps-oiii-20" if lineid == "oiii" else "maps20"

  prefix = f"../data/{mapdir}/turtle-slits-{lineid}"
  vels = np.arange(-90.0, +50.0, 20.0)
  nv = len(vels)

  # make a cube from the stack of isovel images
  imstack = []
  for vel in vels:
      vstring = f"{int(vel-10.0):+04d}{int(vel+10.0):+04d}"
      filename = f"{prefix}{vstring}{suffix}.fits"
      hdu = fits.open(filename)["SCALED"]
      imstack.append(hdu.data)

  imcube = np.stack(imstack, axis=0)
  vcube = vels[:, None, None]*np.ones_like(imcube)
  vmean = np.sum(vcube*imcube, axis=0)/np.sum(imcube, axis=0)
  # vmean = np.average(vcube, weights=imcube, axis=0)
  sigsq = np.sum((vcube - vmean)**2*imcube, axis=0)/np.sum(imcube, axis=0)
  # sigsq = np.average((vcube - vmean)**2, weights=imcube, axis=0)
  sigma = np.sqrt(sigsq)

  fits.PrimaryHDU(header=hdu.header, data=vmean).writeto(
      f"{prefix}-vmean{suffix}.fits", overwrite=True,
  )
  fits.PrimaryHDU(header=hdu.header, data=sigma).writeto(
      f"{prefix}-sigma{suffix}.fits", overwrite=True,
  )
#+end_src

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py ha
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py nii
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py oiii
#+end_src

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py oiii -multibin
#+end_src

#+RESULTS:

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py ha -multibin
#+end_src

#+begin_src sh :results verbatim
python ../scripts/moments-from-channels20.py nii -multibin
#+end_src

#+RESULTS:



** Multibinning
:PROPERTIES:
:ID:       66ACAB44-11C6-4C73-B066-D03D8C7FAC8D
:END:
#+BEGIN_SRC sh :results verbatim :dir ../data/maps
  mdir=/Users/will/Dropbox/OrionWest
  ranges='+030+040 +020+030 +010+020 +000+010 -010+000 -020-010 -030-020 -040-030 -050-040 -060-050 -070-060 -080-070 -090-080'
  for vrange in $ranges -allvels; do
      python $mdir/multibin-map.py turtle-slits-ha$vrange.fits
      python $mdir/multibin-map.py turtle-slits-nii$vrange.fits
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-slits-ha+030+040-bin001.fits
Saving turtle-slits-ha+030+040-bin002.fits
Saving turtle-slits-ha+030+040-bin004.fits
Saving turtle-slits-ha+030+040-bin008.fits
Saving turtle-slits-ha+030+040-bin016.fits
Saving turtle-slits-ha+030+040-bin032.fits
Saving turtle-slits-ha+030+040-bin064.fits
Saving turtle-slits-nii+030+040-bin001.fits
Saving turtle-slits-nii+030+040-bin002.fits
Saving turtle-slits-nii+030+040-bin004.fits
Saving turtle-slits-nii+030+040-bin008.fits
Saving turtle-slits-nii+030+040-bin016.fits
Saving turtle-slits-nii+030+040-bin032.fits
Saving turtle-slits-nii+030+040-bin064.fits
Saving turtle-slits-ha+020+030-bin001.fits
Saving turtle-slits-ha+020+030-bin002.fits
Saving turtle-slits-ha+020+030-bin004.fits
Saving turtle-slits-ha+020+030-bin008.fits
Saving turtle-slits-ha+020+030-bin016.fits
Saving turtle-slits-ha+020+030-bin032.fits
Saving turtle-slits-ha+020+030-bin064.fits
Saving turtle-slits-nii+020+030-bin001.fits
Saving turtle-slits-nii+020+030-bin002.fits
Saving turtle-slits-nii+020+030-bin004.fits
Saving turtle-slits-nii+020+030-bin008.fits
Saving turtle-slits-nii+020+030-bin016.fits
Saving turtle-slits-nii+020+030-bin032.fits
Saving turtle-slits-nii+020+030-bin064.fits
Saving turtle-slits-ha+010+020-bin001.fits
Saving turtle-slits-ha+010+020-bin002.fits
Saving turtle-slits-ha+010+020-bin004.fits
Saving turtle-slits-ha+010+020-bin008.fits
Saving turtle-slits-ha+010+020-bin016.fits
Saving turtle-slits-ha+010+020-bin032.fits
Saving turtle-slits-ha+010+020-bin064.fits
Saving turtle-slits-nii+010+020-bin001.fits
Saving turtle-slits-nii+010+020-bin002.fits
Saving turtle-slits-nii+010+020-bin004.fits
Saving turtle-slits-nii+010+020-bin008.fits
Saving turtle-slits-nii+010+020-bin016.fits
Saving turtle-slits-nii+010+020-bin032.fits
Saving turtle-slits-nii+010+020-bin064.fits
Saving turtle-slits-ha+000+010-bin001.fits
Saving turtle-slits-ha+000+010-bin002.fits
Saving turtle-slits-ha+000+010-bin004.fits
Saving turtle-slits-ha+000+010-bin008.fits
Saving turtle-slits-ha+000+010-bin016.fits
Saving turtle-slits-ha+000+010-bin032.fits
Saving turtle-slits-ha+000+010-bin064.fits
Saving turtle-slits-nii+000+010-bin001.fits
Saving turtle-slits-nii+000+010-bin002.fits
Saving turtle-slits-nii+000+010-bin004.fits
Saving turtle-slits-nii+000+010-bin008.fits
Saving turtle-slits-nii+000+010-bin016.fits
Saving turtle-slits-nii+000+010-bin032.fits
Saving turtle-slits-nii+000+010-bin064.fits
Saving turtle-slits-ha-010+000-bin001.fits
Saving turtle-slits-ha-010+000-bin002.fits
Saving turtle-slits-ha-010+000-bin004.fits
Saving turtle-slits-ha-010+000-bin008.fits
Saving turtle-slits-ha-010+000-bin016.fits
Saving turtle-slits-ha-010+000-bin032.fits
Saving turtle-slits-ha-010+000-bin064.fits
Saving turtle-slits-nii-010+000-bin001.fits
Saving turtle-slits-nii-010+000-bin002.fits
Saving turtle-slits-nii-010+000-bin004.fits
Saving turtle-slits-nii-010+000-bin008.fits
Saving turtle-slits-nii-010+000-bin016.fits
Saving turtle-slits-nii-010+000-bin032.fits
Saving turtle-slits-nii-010+000-bin064.fits
Saving turtle-slits-ha-020-010-bin001.fits
Saving turtle-slits-ha-020-010-bin002.fits
Saving turtle-slits-ha-020-010-bin004.fits
Saving turtle-slits-ha-020-010-bin008.fits
Saving turtle-slits-ha-020-010-bin016.fits
Saving turtle-slits-ha-020-010-bin032.fits
Saving turtle-slits-ha-020-010-bin064.fits
Saving turtle-slits-nii-020-010-bin001.fits
Saving turtle-slits-nii-020-010-bin002.fits
Saving turtle-slits-nii-020-010-bin004.fits
Saving turtle-slits-nii-020-010-bin008.fits
Saving turtle-slits-nii-020-010-bin016.fits
Saving turtle-slits-nii-020-010-bin032.fits
Saving turtle-slits-nii-020-010-bin064.fits
Saving turtle-slits-ha-030-020-bin001.fits
Saving turtle-slits-ha-030-020-bin002.fits
Saving turtle-slits-ha-030-020-bin004.fits
Saving turtle-slits-ha-030-020-bin008.fits
Saving turtle-slits-ha-030-020-bin016.fits
Saving turtle-slits-ha-030-020-bin032.fits
Saving turtle-slits-ha-030-020-bin064.fits
Saving turtle-slits-nii-030-020-bin001.fits
Saving turtle-slits-nii-030-020-bin002.fits
Saving turtle-slits-nii-030-020-bin004.fits
Saving turtle-slits-nii-030-020-bin008.fits
Saving turtle-slits-nii-030-020-bin016.fits
Saving turtle-slits-nii-030-020-bin032.fits
Saving turtle-slits-nii-030-020-bin064.fits
Saving turtle-slits-ha-040-030-bin001.fits
Saving turtle-slits-ha-040-030-bin002.fits
Saving turtle-slits-ha-040-030-bin004.fits
Saving turtle-slits-ha-040-030-bin008.fits
Saving turtle-slits-ha-040-030-bin016.fits
Saving turtle-slits-ha-040-030-bin032.fits
Saving turtle-slits-ha-040-030-bin064.fits
Saving turtle-slits-nii-040-030-bin001.fits
Saving turtle-slits-nii-040-030-bin002.fits
Saving turtle-slits-nii-040-030-bin004.fits
Saving turtle-slits-nii-040-030-bin008.fits
Saving turtle-slits-nii-040-030-bin016.fits
Saving turtle-slits-nii-040-030-bin032.fits
Saving turtle-slits-nii-040-030-bin064.fits
Saving turtle-slits-ha-050-040-bin001.fits
Saving turtle-slits-ha-050-040-bin002.fits
Saving turtle-slits-ha-050-040-bin004.fits
Saving turtle-slits-ha-050-040-bin008.fits
Saving turtle-slits-ha-050-040-bin016.fits
Saving turtle-slits-ha-050-040-bin032.fits
Saving turtle-slits-ha-050-040-bin064.fits
Saving turtle-slits-nii-050-040-bin001.fits
Saving turtle-slits-nii-050-040-bin002.fits
Saving turtle-slits-nii-050-040-bin004.fits
Saving turtle-slits-nii-050-040-bin008.fits
Saving turtle-slits-nii-050-040-bin016.fits
Saving turtle-slits-nii-050-040-bin032.fits
Saving turtle-slits-nii-050-040-bin064.fits
Saving turtle-slits-ha-060-050-bin001.fits
Saving turtle-slits-ha-060-050-bin002.fits
Saving turtle-slits-ha-060-050-bin004.fits
Saving turtle-slits-ha-060-050-bin008.fits
Saving turtle-slits-ha-060-050-bin016.fits
Saving turtle-slits-ha-060-050-bin032.fits
Saving turtle-slits-ha-060-050-bin064.fits
Saving turtle-slits-nii-060-050-bin001.fits
Saving turtle-slits-nii-060-050-bin002.fits
Saving turtle-slits-nii-060-050-bin004.fits
Saving turtle-slits-nii-060-050-bin008.fits
Saving turtle-slits-nii-060-050-bin016.fits
Saving turtle-slits-nii-060-050-bin032.fits
Saving turtle-slits-nii-060-050-bin064.fits
Saving turtle-slits-ha-070-060-bin001.fits
Saving turtle-slits-ha-070-060-bin002.fits
Saving turtle-slits-ha-070-060-bin004.fits
Saving turtle-slits-ha-070-060-bin008.fits
Saving turtle-slits-ha-070-060-bin016.fits
Saving turtle-slits-ha-070-060-bin032.fits
Saving turtle-slits-ha-070-060-bin064.fits
Saving turtle-slits-nii-070-060-bin001.fits
Saving turtle-slits-nii-070-060-bin002.fits
Saving turtle-slits-nii-070-060-bin004.fits
Saving turtle-slits-nii-070-060-bin008.fits
Saving turtle-slits-nii-070-060-bin016.fits
Saving turtle-slits-nii-070-060-bin032.fits
Saving turtle-slits-nii-070-060-bin064.fits
Saving turtle-slits-ha-080-070-bin001.fits
Saving turtle-slits-ha-080-070-bin002.fits
Saving turtle-slits-ha-080-070-bin004.fits
Saving turtle-slits-ha-080-070-bin008.fits
Saving turtle-slits-ha-080-070-bin016.fits
Saving turtle-slits-ha-080-070-bin032.fits
Saving turtle-slits-ha-080-070-bin064.fits
Saving turtle-slits-nii-080-070-bin001.fits
Saving turtle-slits-nii-080-070-bin002.fits
Saving turtle-slits-nii-080-070-bin004.fits
Saving turtle-slits-nii-080-070-bin008.fits
Saving turtle-slits-nii-080-070-bin016.fits
Saving turtle-slits-nii-080-070-bin032.fits
Saving turtle-slits-nii-080-070-bin064.fits
Saving turtle-slits-ha-090-080-bin001.fits
Saving turtle-slits-ha-090-080-bin002.fits
Saving turtle-slits-ha-090-080-bin004.fits
Saving turtle-slits-ha-090-080-bin008.fits
Saving turtle-slits-ha-090-080-bin016.fits
Saving turtle-slits-ha-090-080-bin032.fits
Saving turtle-slits-ha-090-080-bin064.fits
Saving turtle-slits-nii-090-080-bin001.fits
Saving turtle-slits-nii-090-080-bin002.fits
Saving turtle-slits-nii-090-080-bin004.fits
Saving turtle-slits-nii-090-080-bin008.fits
Saving turtle-slits-nii-090-080-bin016.fits
Saving turtle-slits-nii-090-080-bin032.fits
Saving turtle-slits-nii-090-080-bin064.fits
Saving turtle-slits-ha-allvels-bin001.fits
Saving turtle-slits-ha-allvels-bin002.fits
Saving turtle-slits-ha-allvels-bin004.fits
Saving turtle-slits-ha-allvels-bin008.fits
Saving turtle-slits-ha-allvels-bin016.fits
Saving turtle-slits-ha-allvels-bin032.fits
Saving turtle-slits-ha-allvels-bin064.fits
Saving turtle-slits-nii-allvels-bin001.fits
Saving turtle-slits-nii-allvels-bin002.fits
Saving turtle-slits-nii-allvels-bin004.fits
Saving turtle-slits-nii-allvels-bin008.fits
Saving turtle-slits-nii-allvels-bin016.fits
Saving turtle-slits-nii-allvels-bin032.fits
Saving turtle-slits-nii-allvels-bin064.fits
#+end_example

#+BEGIN_SRC sh :results verbatim :dir ../data/maps
  mdir=/Users/will/Dropbox/OrionWest
  ranges='+040+050 -100-090 -110-100'
  for vrange in $ranges; do
      python $mdir/multibin-map.py turtle-slits-ha$vrange.fits
      python $mdir/multibin-map.py turtle-slits-nii$vrange.fits
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-slits-ha+040+050-bin001.fits
Saving turtle-slits-ha+040+050-bin002.fits
Saving turtle-slits-ha+040+050-bin004.fits
Saving turtle-slits-ha+040+050-bin008.fits
Saving turtle-slits-ha+040+050-bin016.fits
Saving turtle-slits-ha+040+050-bin032.fits
Saving turtle-slits-ha+040+050-bin064.fits
Saving turtle-slits-nii+040+050-bin001.fits
Saving turtle-slits-nii+040+050-bin002.fits
Saving turtle-slits-nii+040+050-bin004.fits
Saving turtle-slits-nii+040+050-bin008.fits
Saving turtle-slits-nii+040+050-bin016.fits
Saving turtle-slits-nii+040+050-bin032.fits
Saving turtle-slits-nii+040+050-bin064.fits
Saving turtle-slits-ha-100-090-bin001.fits
Saving turtle-slits-ha-100-090-bin002.fits
Saving turtle-slits-ha-100-090-bin004.fits
Saving turtle-slits-ha-100-090-bin008.fits
Saving turtle-slits-ha-100-090-bin016.fits
Saving turtle-slits-ha-100-090-bin032.fits
Saving turtle-slits-ha-100-090-bin064.fits
Saving turtle-slits-nii-100-090-bin001.fits
Saving turtle-slits-nii-100-090-bin002.fits
Saving turtle-slits-nii-100-090-bin004.fits
Saving turtle-slits-nii-100-090-bin008.fits
Saving turtle-slits-nii-100-090-bin016.fits
Saving turtle-slits-nii-100-090-bin032.fits
Saving turtle-slits-nii-100-090-bin064.fits
Saving turtle-slits-ha-110-100-bin001.fits
Saving turtle-slits-ha-110-100-bin002.fits
Saving turtle-slits-ha-110-100-bin004.fits
Saving turtle-slits-ha-110-100-bin008.fits
Saving turtle-slits-ha-110-100-bin016.fits
Saving turtle-slits-ha-110-100-bin032.fits
Saving turtle-slits-ha-110-100-bin064.fits
Saving turtle-slits-nii-110-100-bin001.fits
Saving turtle-slits-nii-110-100-bin002.fits
Saving turtle-slits-nii-110-100-bin004.fits
Saving turtle-slits-nii-110-100-bin008.fits
Saving turtle-slits-nii-110-100-bin016.fits
Saving turtle-slits-nii-110-100-bin032.fits
Saving turtle-slits-nii-110-100-bin064.fits
Saving turtle-slits-ha-allvels-bin001.fits
Saving turtle-slits-ha-allvels-bin002.fits
Saving turtle-slits-ha-allvels-bin004.fits
Saving turtle-slits-ha-allvels-bin008.fits
Saving turtle-slits-ha-allvels-bin016.fits
Saving turtle-slits-ha-allvels-bin032.fits
Saving turtle-slits-ha-allvels-bin064.fits
Saving turtle-slits-nii-allvels-bin001.fits
Saving turtle-slits-nii-allvels-bin002.fits
Saving turtle-slits-nii-allvels-bin004.fits
Saving turtle-slits-nii-allvels-bin008.fits
Saving turtle-slits-nii-allvels-bin016.fits
Saving turtle-slits-nii-allvels-bin032.fits
Saving turtle-slits-nii-allvels-bin064.fits
#+end_example

#+BEGIN_SRC sh :results verbatim :dir ../data/maps20
  mdir=/Users/will/Dropbox/OrionWest
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  for vrange in $ranges; do
      python $mdir/multibin-map.py turtle-slits-ha$vrange.fits
      python $mdir/multibin-map.py turtle-slits-nii$vrange.fits
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-slits-ha+040+060-bin001.fits
Saving turtle-slits-ha+040+060-bin002.fits
Saving turtle-slits-ha+040+060-bin004.fits
Saving turtle-slits-ha+040+060-bin008.fits
Saving turtle-slits-ha+040+060-bin016.fits
Saving turtle-slits-ha+040+060-bin032.fits
Saving turtle-slits-ha+040+060-bin064.fits
Saving turtle-slits-nii+040+060-bin001.fits
Saving turtle-slits-nii+040+060-bin002.fits
Saving turtle-slits-nii+040+060-bin004.fits
Saving turtle-slits-nii+040+060-bin008.fits
Saving turtle-slits-nii+040+060-bin016.fits
Saving turtle-slits-nii+040+060-bin032.fits
Saving turtle-slits-nii+040+060-bin064.fits
Saving turtle-slits-ha+020+040-bin001.fits
Saving turtle-slits-ha+020+040-bin002.fits
Saving turtle-slits-ha+020+040-bin004.fits
Saving turtle-slits-ha+020+040-bin008.fits
Saving turtle-slits-ha+020+040-bin016.fits
Saving turtle-slits-ha+020+040-bin032.fits
Saving turtle-slits-ha+020+040-bin064.fits
Saving turtle-slits-nii+020+040-bin001.fits
Saving turtle-slits-nii+020+040-bin002.fits
Saving turtle-slits-nii+020+040-bin004.fits
Saving turtle-slits-nii+020+040-bin008.fits
Saving turtle-slits-nii+020+040-bin016.fits
Saving turtle-slits-nii+020+040-bin032.fits
Saving turtle-slits-nii+020+040-bin064.fits
Saving turtle-slits-ha+000+020-bin001.fits
Saving turtle-slits-ha+000+020-bin002.fits
Saving turtle-slits-ha+000+020-bin004.fits
Saving turtle-slits-ha+000+020-bin008.fits
Saving turtle-slits-ha+000+020-bin016.fits
Saving turtle-slits-ha+000+020-bin032.fits
Saving turtle-slits-ha+000+020-bin064.fits
Saving turtle-slits-nii+000+020-bin001.fits
Saving turtle-slits-nii+000+020-bin002.fits
Saving turtle-slits-nii+000+020-bin004.fits
Saving turtle-slits-nii+000+020-bin008.fits
Saving turtle-slits-nii+000+020-bin016.fits
Saving turtle-slits-nii+000+020-bin032.fits
Saving turtle-slits-nii+000+020-bin064.fits
Saving turtle-slits-ha-020+000-bin001.fits
Saving turtle-slits-ha-020+000-bin002.fits
Saving turtle-slits-ha-020+000-bin004.fits
Saving turtle-slits-ha-020+000-bin008.fits
Saving turtle-slits-ha-020+000-bin016.fits
Saving turtle-slits-ha-020+000-bin032.fits
Saving turtle-slits-ha-020+000-bin064.fits
Saving turtle-slits-nii-020+000-bin001.fits
Saving turtle-slits-nii-020+000-bin002.fits
Saving turtle-slits-nii-020+000-bin004.fits
Saving turtle-slits-nii-020+000-bin008.fits
Saving turtle-slits-nii-020+000-bin016.fits
Saving turtle-slits-nii-020+000-bin032.fits
Saving turtle-slits-nii-020+000-bin064.fits
Saving turtle-slits-ha-040-020-bin001.fits
Saving turtle-slits-ha-040-020-bin002.fits
Saving turtle-slits-ha-040-020-bin004.fits
Saving turtle-slits-ha-040-020-bin008.fits
Saving turtle-slits-ha-040-020-bin016.fits
Saving turtle-slits-ha-040-020-bin032.fits
Saving turtle-slits-ha-040-020-bin064.fits
Saving turtle-slits-nii-040-020-bin001.fits
Saving turtle-slits-nii-040-020-bin002.fits
Saving turtle-slits-nii-040-020-bin004.fits
Saving turtle-slits-nii-040-020-bin008.fits
Saving turtle-slits-nii-040-020-bin016.fits
Saving turtle-slits-nii-040-020-bin032.fits
Saving turtle-slits-nii-040-020-bin064.fits
Saving turtle-slits-ha-060-040-bin001.fits
Saving turtle-slits-ha-060-040-bin002.fits
Saving turtle-slits-ha-060-040-bin004.fits
Saving turtle-slits-ha-060-040-bin008.fits
Saving turtle-slits-ha-060-040-bin016.fits
Saving turtle-slits-ha-060-040-bin032.fits
Saving turtle-slits-ha-060-040-bin064.fits
Saving turtle-slits-nii-060-040-bin001.fits
Saving turtle-slits-nii-060-040-bin002.fits
Saving turtle-slits-nii-060-040-bin004.fits
Saving turtle-slits-nii-060-040-bin008.fits
Saving turtle-slits-nii-060-040-bin016.fits
Saving turtle-slits-nii-060-040-bin032.fits
Saving turtle-slits-nii-060-040-bin064.fits
Saving turtle-slits-ha-080-060-bin001.fits
Saving turtle-slits-ha-080-060-bin002.fits
Saving turtle-slits-ha-080-060-bin004.fits
Saving turtle-slits-ha-080-060-bin008.fits
Saving turtle-slits-ha-080-060-bin016.fits
Saving turtle-slits-ha-080-060-bin032.fits
Saving turtle-slits-ha-080-060-bin064.fits
Saving turtle-slits-nii-080-060-bin001.fits
Saving turtle-slits-nii-080-060-bin002.fits
Saving turtle-slits-nii-080-060-bin004.fits
Saving turtle-slits-nii-080-060-bin008.fits
Saving turtle-slits-nii-080-060-bin016.fits
Saving turtle-slits-nii-080-060-bin032.fits
Saving turtle-slits-nii-080-060-bin064.fits
Saving turtle-slits-ha-100-080-bin001.fits
Saving turtle-slits-ha-100-080-bin002.fits
Saving turtle-slits-ha-100-080-bin004.fits
Saving turtle-slits-ha-100-080-bin008.fits
Saving turtle-slits-ha-100-080-bin016.fits
Saving turtle-slits-ha-100-080-bin032.fits
Saving turtle-slits-ha-100-080-bin064.fits
Saving turtle-slits-nii-100-080-bin001.fits
Saving turtle-slits-nii-100-080-bin002.fits
Saving turtle-slits-nii-100-080-bin004.fits
Saving turtle-slits-nii-100-080-bin008.fits
Saving turtle-slits-nii-100-080-bin016.fits
Saving turtle-slits-nii-100-080-bin032.fits
Saving turtle-slits-nii-100-080-bin064.fits
Saving turtle-slits-ha-120-100-bin001.fits
Saving turtle-slits-ha-120-100-bin002.fits
Saving turtle-slits-ha-120-100-bin004.fits
Saving turtle-slits-ha-120-100-bin008.fits
Saving turtle-slits-ha-120-100-bin016.fits
Saving turtle-slits-ha-120-100-bin032.fits
Saving turtle-slits-ha-120-100-bin064.fits
Saving turtle-slits-nii-120-100-bin001.fits
Saving turtle-slits-nii-120-100-bin002.fits
Saving turtle-slits-nii-120-100-bin004.fits
Saving turtle-slits-nii-120-100-bin008.fits
Saving turtle-slits-nii-120-100-bin016.fits
Saving turtle-slits-nii-120-100-bin032.fits
Saving turtle-slits-nii-120-100-bin064.fits
#+end_example

#+BEGIN_SRC sh :results verbatim :dir ../data/maps-oiii-20
  mdir=/Users/will/Dropbox/OrionWest
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  for vrange in $ranges; do
      python $mdir/multibin-map.py turtle-slits-oiii$vrange.fits
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-slits-oiii+040+060-bin001.fits
Saving turtle-slits-oiii+040+060-bin002.fits
Saving turtle-slits-oiii+040+060-bin004.fits
Saving turtle-slits-oiii+040+060-bin008.fits
Saving turtle-slits-oiii+040+060-bin016.fits
Saving turtle-slits-oiii+040+060-bin032.fits
Saving turtle-slits-oiii+040+060-bin064.fits
Saving turtle-slits-oiii+020+040-bin001.fits
Saving turtle-slits-oiii+020+040-bin002.fits
Saving turtle-slits-oiii+020+040-bin004.fits
Saving turtle-slits-oiii+020+040-bin008.fits
Saving turtle-slits-oiii+020+040-bin016.fits
Saving turtle-slits-oiii+020+040-bin032.fits
Saving turtle-slits-oiii+020+040-bin064.fits
Saving turtle-slits-oiii+000+020-bin001.fits
Saving turtle-slits-oiii+000+020-bin002.fits
Saving turtle-slits-oiii+000+020-bin004.fits
Saving turtle-slits-oiii+000+020-bin008.fits
Saving turtle-slits-oiii+000+020-bin016.fits
Saving turtle-slits-oiii+000+020-bin032.fits
Saving turtle-slits-oiii+000+020-bin064.fits
Saving turtle-slits-oiii-020+000-bin001.fits
Saving turtle-slits-oiii-020+000-bin002.fits
Saving turtle-slits-oiii-020+000-bin004.fits
Saving turtle-slits-oiii-020+000-bin008.fits
Saving turtle-slits-oiii-020+000-bin016.fits
Saving turtle-slits-oiii-020+000-bin032.fits
Saving turtle-slits-oiii-020+000-bin064.fits
Saving turtle-slits-oiii-040-020-bin001.fits
Saving turtle-slits-oiii-040-020-bin002.fits
Saving turtle-slits-oiii-040-020-bin004.fits
Saving turtle-slits-oiii-040-020-bin008.fits
Saving turtle-slits-oiii-040-020-bin016.fits
Saving turtle-slits-oiii-040-020-bin032.fits
Saving turtle-slits-oiii-040-020-bin064.fits
Saving turtle-slits-oiii-060-040-bin001.fits
Saving turtle-slits-oiii-060-040-bin002.fits
Saving turtle-slits-oiii-060-040-bin004.fits
Saving turtle-slits-oiii-060-040-bin008.fits
Saving turtle-slits-oiii-060-040-bin016.fits
Saving turtle-slits-oiii-060-040-bin032.fits
Saving turtle-slits-oiii-060-040-bin064.fits
Saving turtle-slits-oiii-080-060-bin001.fits
Saving turtle-slits-oiii-080-060-bin002.fits
Saving turtle-slits-oiii-080-060-bin004.fits
Saving turtle-slits-oiii-080-060-bin008.fits
Saving turtle-slits-oiii-080-060-bin016.fits
Saving turtle-slits-oiii-080-060-bin032.fits
Saving turtle-slits-oiii-080-060-bin064.fits
Saving turtle-slits-oiii-100-080-bin001.fits
Saving turtle-slits-oiii-100-080-bin002.fits
Saving turtle-slits-oiii-100-080-bin004.fits
Saving turtle-slits-oiii-100-080-bin008.fits
Saving turtle-slits-oiii-100-080-bin016.fits
Saving turtle-slits-oiii-100-080-bin032.fits
Saving turtle-slits-oiii-100-080-bin064.fits
Saving turtle-slits-oiii-120-100-bin001.fits
Saving turtle-slits-oiii-120-100-bin002.fits
Saving turtle-slits-oiii-120-100-bin004.fits
Saving turtle-slits-oiii-120-100-bin008.fits
Saving turtle-slits-oiii-120-100-bin016.fits
Saving turtle-slits-oiii-120-100-bin032.fits
Saving turtle-slits-oiii-120-100-bin064.fits
#+end_example

#+BEGIN_SRC sh :results verbatim :dir ../data/maps20
  mdir=/Users/will/Dropbox/OrionWest
  ranges='-030-010 -050-030 -070-050 -080+000 -060-020'
  for vrange in $ranges; do
      python $mdir/multibin-map.py turtle-slits-heii$vrange.fits
  done
#+END_SRC

#+RESULTS:
#+begin_example
Saving turtle-slits-heii-030-010-bin001.fits
Saving turtle-slits-heii-030-010-bin002.fits
Saving turtle-slits-heii-030-010-bin004.fits
Saving turtle-slits-heii-030-010-bin008.fits
Saving turtle-slits-heii-030-010-bin016.fits
Saving turtle-slits-heii-030-010-bin032.fits
Saving turtle-slits-heii-030-010-bin064.fits
Saving turtle-slits-heii-050-030-bin001.fits
Saving turtle-slits-heii-050-030-bin002.fits
Saving turtle-slits-heii-050-030-bin004.fits
Saving turtle-slits-heii-050-030-bin008.fits
Saving turtle-slits-heii-050-030-bin016.fits
Saving turtle-slits-heii-050-030-bin032.fits
Saving turtle-slits-heii-050-030-bin064.fits
Saving turtle-slits-heii-070-050-bin001.fits
Saving turtle-slits-heii-070-050-bin002.fits
Saving turtle-slits-heii-070-050-bin004.fits
Saving turtle-slits-heii-070-050-bin008.fits
Saving turtle-slits-heii-070-050-bin016.fits
Saving turtle-slits-heii-070-050-bin032.fits
Saving turtle-slits-heii-070-050-bin064.fits
Saving turtle-slits-heii-080+000-bin001.fits
Saving turtle-slits-heii-080+000-bin002.fits
Saving turtle-slits-heii-080+000-bin004.fits
Saving turtle-slits-heii-080+000-bin008.fits
Saving turtle-slits-heii-080+000-bin016.fits
Saving turtle-slits-heii-080+000-bin032.fits
Saving turtle-slits-heii-080+000-bin064.fits
Saving turtle-slits-heii-060-020-bin001.fits
Saving turtle-slits-heii-060-020-bin002.fits
Saving turtle-slits-heii-060-020-bin004.fits
Saving turtle-slits-heii-060-020-bin008.fits
Saving turtle-slits-heii-060-020-bin016.fits
Saving turtle-slits-heii-060-020-bin032.fits
Saving turtle-slits-heii-060-020-bin064.fits
#+end_example

*** Combine multibin maps
:PROPERTIES:
:ID:       1239EA79-BF2F-42FD-9D27-F6CFD2A6E647
:END:

#+BEGIN_SRC python :tangle ../scripts/turtle-multibin-combine.py
  import sys
  from astropy.io import fits
  import numpy as np
  sys.path.append('/Users/will/Work/RubinWFC3/Tsquared')
  from rebin_utils import oversample
  from skimage.morphology import square
  from skimage.filters.rank import modal


  def minify(a, n):
      return a[::n, ::n]


  ELEMENT = square(3)
  def cleanup_mask(mask, n):
      """Eliminate small islands in the mask"""
      m = minify(mask, n).astype(np.uint8)
      m = m & modal(m, ELEMENT)
      return oversample(m, n).astype(bool)

      
  try: 
      prefix, minw_scale = sys.argv[1], float(sys.argv[2])
  except:
      print('Usage:', sys.argv[0], 'FITSFILE_PREFIX MINIMUM_WEIGHT [COARSE_WEIGHT]')
      sys.exit()

  try:
      minw_coarse = float(sys.argv[3])
  except IndexError:
      minw_coarse = None

  nlist = [1, 2, 4, 8, 16, 32, 64]
  minweights = [0.5, 1.0, 2.0, 4.0, 8.0, 8.0, 8.0]
  if minw_coarse is not None:
      minweights[-1] = minw_coarse
  outim = np.zeros((512, 512))
  for n, minw in reversed(list(zip(nlist, minweights))):
      fn = '{}-bin{:03d}.fits'.format(prefix, n)
      hdulist = fits.open(fn)
      im = hdulist['scaled'].data
      hdr = hdulist['scaled'].header
      w = hdulist['weight'].data
      # m = cleanup_mask(w*im >= minw*minw_scale, n)
      m = np.isfinite(w) & (w > 0.0) & np.isfinite(im) & (im > 0.0)
      outim[m] = im[m]
  fits.PrimaryHDU(header=hdr, data=outim).writeto(prefix + '-multibin.fits', overwrite=True)
#+END_SRC

#+BEGIN_SRC sh :results silent :dir ..
ranges='+030+040 +020+030 +010+020 +000+010 -010+000 -020-010 -030-020 -040-030 -050-040 -060-050 -070-060 -080-070 -090-080'
for vrange in $ranges -allvels; do
    python scripts/turtle-multibin-combine.py data/maps/turtle-slits-ha$vrange 0.0001 0.0
    python scripts/turtle-multibin-combine.py data/maps/turtle-slits-nii$vrange 0.0001 0.0
done
#+END_SRC


And the extra ones
#+BEGIN_SRC sh :results silent :dir ..
ranges='+040+050 -100-090 -110-100'
for vrange in $ranges; do
    python scripts/turtle-multibin-combine.py data/maps/turtle-slits-ha$vrange 0.0001 0.0
    python scripts/turtle-multibin-combine.py data/maps/turtle-slits-nii$vrange 0.0001 0.0
done
#+END_SRC

#+BEGIN_SRC sh :results silent :dir ..
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  for vrange in $ranges; do
      python scripts/turtle-multibin-combine.py data/maps20/turtle-slits-ha$vrange 0.0001 0.0
      python scripts/turtle-multibin-combine.py data/maps20/turtle-slits-nii$vrange 0.0001 0.0
  done
#+END_SRC

#+BEGIN_SRC sh :results silent :dir ..
  ranges='+040+060 +020+040 +000+020 -020+000 -040-020 -060-040 -080-060 -100-080 -120-100'
  for vrange in $ranges; do
      python scripts/turtle-multibin-combine.py data/maps-oiii-20/turtle-slits-oiii$vrange 0.0001 0.0
  done
#+END_SRC

#+BEGIN_SRC sh :results silent :dir ..
  ranges='-030-010 -050-030 -070-050 -080+000 -060-020'
  for vrange in $ranges; do
      python scripts/turtle-multibin-combine.py data/maps20/turtle-slits-heii$vrange 0.0001 0.0
  done
#+END_SRC

*** Load channel images into ds9


#+BEGIN_SRC sh :dir ../data/maps20 :results silent
  DS9=oiii-images
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-030-010-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-050-030-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-heii-070-050-multibin.fits
#+END_SRC


Central velocities in [O III] - 20 km/s channels
#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:50215
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-020+000-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-040-020-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-060-040-multibin.fits
#+END_SRC

#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:50215
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-080-060-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-100-080-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-120-100-multibin.fits
#+END_SRC

#+BEGIN_SRC sh :dir ../data/maps-oiii-20 :results silent
  DS9=7f000001:50215
  xpaset -p $DS9 rgb red
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+040+060-multibin.fits
  xpaset -p $DS9 rgb green
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+020+040-multibin.fits
  xpaset -p $DS9 rgb blue
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii+000+020-multibin.fits
#+END_SRC


After doing "copy" on the contours we want, we can put them on each frame as follows:
#+begin_src sh :results silent
  DS9=velmaps
  xpaset -p $DS9 contour paste wcs red 1
  xpaset -p $DS9 frame next
#+end_src

The ds9 save files are:
+ [[file:~/Dropbox/Teresa-Turtle/data/maps/turtle-ha-maps.bck]]
+ [[file:~/Dropbox/Teresa-Turtle/data/maps/turtle-nii-maps.bck]]

Figures are in
+ [[file:~/Dropbox/Teresa-Turtle/figs/Screenshot%20turtle-ha-maps.png]]
+ [[file:~/Dropbox/Teresa-Turtle/figs/Screenshot%20turtle-nii-maps.png]]


*** Load up channel images of [O III] results

Use a dedicated DS9 instance
#+begin_src sh :results silent
  open -n -a SAOImageDS9 --args -title velmaps
#+end_src

+ This gets 9 isovel images with 20 km/s width
  + It labels each with the v range
  + And adds the contours of the median image
#+begin_src sh :results silent :dir ../data/maps-oiii-20 
  DS9=velmaps
  ranges='-120-100 -100-080 -080-060 -060-040 -040-020 -020+000 +000+020 +020+040 +040+060'
  for vrange in $ranges; do
      xpaset -p $DS9 frame new
      xpaset -p $DS9 contour no
      xpaset -p $DS9 fits $PWD/turtle-slits-oiii${vrange}-multibin.fits
      xpaset -p $DS9 contour paste wcs red 1
      echo "fk5; text 16:44:28.9973 +23:47:38.458 # color=black text={$vrange}" | xpaset $DS9 regions
  done
#+end_src


Position of slits
#+begin_src sh :results silent :dir ../data/maps-oiii-20 
  DS9=velmaps
  xpaset -p $DS9 frame new
  xpaset -p $DS9 contour no
  xpaset -p $DS9 fits $PWD/turtle-slits-oiii-040-020.fits[1]
  xpaset -p $DS9 contour paste wcs red 1
#+end_src


*** HST images for comparison
Teresa has some that are suitable, but we want to rescale it to make it more easily compared with our own images (divide by 15 for [O III] should put it on same scale as our median image)
#+begin_src python :results silent :dir ../data
  from astropy.io import fits

  hdu = fits.open("/Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/astrodrizzled/oiii-ene2008-original.fits")["SCI"]

  hdu.data /= 15.0

  hdu.writeto("hst-oiii-ene2008-rescaled.fits", overwrite=True)
#+end_src


One for [N II] too. 
#+begin_src python :results silent :dir ../data
  from astropy.io import fits

  hdu = fits.open("/Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/astrodrizzled/MAST_2014-10-09T1938/MAST_2014-10-09T1938/HST/2001336009/hst_11122_10_wfpc2_f658n_wf.fits")["SCI"]

  hdu.data /= 20.01

  hdu.writeto("hst-nii-11122_10-rescaled.fits", overwrite=True)
#+end_src

For Ha we use the ones in the top-level directory.  Only two, so take min to avoid CRs

#+begin_src python :results silent :dir ../data
  import numpy as np
  from astropy.io import fits
  ids = ["am", "bm"]
  hdus = [fits.open(
      f"/Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/u37b010{_}_drz.fits")["SCI"]
          for _ in ids]


  newdata = np.fmin(hdus[0].data, hdus[1].data)

  fits.PrimaryHDU(
      data=newdata*1.5,
      header=hdus[0].header
  ).writeto("hst-ha-wfc-rescaled.fits", overwrite=True)

#+end_src


#+begin_src python :return out_tab
  import glob
  from astropy.io import fits

  file_list = glob.glob("/Users/will/Dropbox/Papers/LL-Objects/NGC6210/HST/*_drz.fits")

  out_tab = [["Name", "Filter"], None]
  for fitsfile in sorted(file_list):
      hdu = 
      out_tab.append([hdu.header["ROOTNAME"], hdu.header.get("FILTNAM1")])

#+end_src

#+RESULTS:
| Name      | Filter |
|-----------+--------|
| u37b0101m | F437N  |
| u37b0102m | F437N  |
| u37b0103m | F437N  |
| u37b0104m | F487N  |
| u37b0105m | F487N  |
| u37b0106m | F502N  |
| u37b0107m | F502N  |
| u37b0108m | F547M  |
| u37b0109m | F547M  |
| u37b010am | F656N  |
| u37b010bm | F656N  |
| u37b010cm | F375N  |
| u37b010dm | F375N  |
| u39h0701t | F658N  |
| u39h0701t | F658N  |
| u39h0702t | F658N  |
| u4js0601r | F502N  |
| u4js0602r | F502N  |
| u4js0603r | F502N  |
| u4js0604r | F502N  |
| u4js0605m | F502N  |
| u4js0606r | F502N  |
| u4js0607r | F658N  |
| u4js0608r | F658N  |
| u4js0609r | F658N  |
| u4js060ar | F658N  |
| u4js060br | F658N  |
| u4js060cr | F658N  |
| u4js060dr | F555W  |
| u4js060er | F555W  |
| u4js060fr | F555W  |
| u4js060gr | F555W  |
| u4js060hr | F555W  |
| u66b0501r | F502N  |
| u66b0502r | F502N  |
| u66b0503r | F502N  |
| u66b0504r | F658N  |
| u66b0505r | F658N  |
| u66b0506r | F658N  |
| u66b0507r | F555W  |
| u66b0508r | F555W  |
| u8s10401m | F185W  |
| u8s10402m | F185W  |
| u8s10403m | F547M  |
| ua011001m | F502N  |
| ua011002m | F502N  |
| ua011003m | F656N  |
| ua011004m | F656N  |
| ua011005m | F658N  |
| ua011006m | F658N  |
| ua011007m | F658N  |

*** The 20 km/s [N II] and H alpha channels

**** H\alpha 20 km/s
Use a dedicated DS9 instance
#+begin_src sh :results silent
  open -n -a SAOImageDS9 --args -title velmapsha
#+end_src
Median image
#+begin_src sh :results silent :dir ../data/imslit-ha
  DS9=velmapsha
  xpaset -p $DS9 fits $PWD/imslit-median.fits
#+end_src

Position of slits
#+begin_src sh :results silent :dir ../data/maps20 
  DS9=velmapsha
  xpaset -p $DS9 frame new
  xpaset -p $DS9 contour no
  xpaset -p $DS9 fits $PWD/turtle-slits-ha-040-020.fits[2]
  # xpaset -p $DS9 contour paste wcs red 1
#+end_src

Add isovel images

#+begin_src sh :results silent :dir ../data/maps20 
  DS9=velmapsha
  ranges='-120-100 -100-080 -080-060 -060-040 -040-020 -020+000 +000+020 +020+040 +040+060'
  for vrange in $ranges; do
      xpaset -p $DS9 frame new
      xpaset -p $DS9 contour no
      xpaset -p $DS9 fits $PWD/turtle-slits-ha${vrange}-multibin.fits
      xpaset -p $DS9 contour paste wcs red 1
      echo "fk5; text 16:44:28.9973 +23:47:38.458 # color=black text={$vrange}" | xpaset $DS9 regions
  done
#+end_src


**** [N II] 20 km/s
Use a dedicated DS9 instance
#+begin_src sh :results silent
  open -n -a SAOImageDS9 --args -title velmapsnii
#+end_src

Median image
#+begin_src sh :results silent :dir ../data/imslit-ha
  DS9=velmapsnii
  xpaset -p $DS9 frame new
  xpaset -p $DS9 fits $PWD/imslit-median.fits
#+end_src

Position of slits
#+begin_src sh :results silent :dir ../data/maps20 
  DS9=velmapsnii
  xpaset -p $DS9 frame new
  xpaset -p $DS9 contour no
  xpaset -p $DS9 fits $PWD/turtle-slits-nii-040-020.fits[2]
  # xpaset -p $DS9 contour paste wcs red 1
#+end_src

Add contours
#+begin_src sh :results silent
  DS9=velmapsnii
  xpaset -p $DS9 contour paste wcs red 1
#+end_src

#+begin_src sh :results silent :dir ../data/maps20 
  DS9=velmapsnii
  ranges='-120-100 -100-080 -080-060 -060-040 -040-020 -020+000 +000+020 +020+040 +040+060'
  for vrange in $ranges; do
      xpaset -p $DS9 frame new
      xpaset -p $DS9 contour no
      xpaset -p $DS9 fits $PWD/turtle-slits-nii${vrange}-multibin.fits
      xpaset -p $DS9 contour paste wcs red 1
      echo "fk5; text 16:44:28.9973 +23:47:38.458 # color=black text={$vrange}" | xpaset $DS9 regions
  done
#+end_src


** Utility functions
:PROPERTIES:
:header-args: :tangle ../scripts/turtle_utils.py
:ID:       60B2ED5C-7B49-4C33-9A59-EF1E7FBBDDDB
:END:

+ Mainly copied from the Owl Nebula's [[id:D65007F8-669F-441C-9FD5-3AEF8BEA4705][Utility functions]]
+ Do ~C-u C-u C-c C-v C-t~ to tangle all blocks into the module ~turtle_utils.py~ in the [[file:../scripts/]] folder

*** Imports
#+BEGIN_SRC python
import numpy as np
from astropy.wcs import WCS
from astropy.coordinates import SkyCoord
from astropy.wcs.utils import pixel_to_skycoord
from astropy import units as u
from astropy.modeling import models, fitting
from matplotlib import pyplot as plt
import seaborn as sns

VERBOSE = 0
#+END_SRC

*** Data paths
We assume that we are running in the top-level project folder file:../

#+begin_src python
  ORIG_DATA_ROOT = "../Papers/LL-Objects/NGC6210"

  def get_orig_folder(temporada):
      if "2015" in temporada:
          return ORIG_DATA_ROOT + "/Temporada2015"
      else:
          return  ORIG_DATA_ROOT + "/Varias-temporadas"


#+end_src

*** Synthetic slit from reference image: slit_profile()
+ Copied from [[id:28077E60-1BFE-4AD4-8DDE-5C292C252564][Construct the synthetic slit from the reference image]]
+ This uses nearest pixel algorithm - no interpolation at all
+ Slit pixels outside of the image are set to NaN 
#+BEGIN_SRC python
  def slit_profile(ra, dec, image, wcs):
      """
      Find the image intensity for a list of positions (ra and dec)
      """
      xi, yj = wcs.all_world2pix(ra, dec, 0)
      # Find nearest integer pixel
      ii, jj = np.floor(xi + 0.5).astype(int), np.floor(yj + 0.5).astype(int)
      if VERBOSE > 0:
          print(ra[::100], dec[::100])
          print(ii[::100], jj[::100])
      ny, nx = image.shape
      return np.array([image[j, i]
                       if (0 < i < nx and 0 < j < ny)
                       else np.nan
                       for i, j in list(zip(ii, jj))])


#+END_SRC


*** World coords from slit pixels: find_slit_coords()
+ This is based on the Owl Nebula version ([[id:4D50A4AB-80B1-4872-899F-8637EC758AB3][World coords from slit pixels]]) but with the following changes:
  1. ~wa~ applies to the PV image, and ~ij~ applies to the im+slit
     - In previous versions, ~saxis~ had been used for both (with opposite sense)
     - The sense is opposite to previously:
       - ~wa~ is the wavelength axis
       - ~ij~ is the CCD axis perpendicular to slit
  2. Check for case where on-chip binning is not specified in header (needed for 2003 data)
#+begin_src python
  def find_slit_coords(db, hdr, shdr):
      """Find the coordinates of all the pixels along a spectrograph slit

      Input arguments are a dict-like 'db' of hand-measured values (must
      contain 'wa', 'ij', islit' and 'shift') and a FITS headers 'hdr' from
      the image+slit exposure and 'shdr' from a spectrum exposure

      Returns a dict of 'ds' (slit pixel scale), 'PA' (slit position
      angle), 'RA' (array of RA values in degrees along slit), 'Dec'
      (array of Dec values in degrees along slit)

      """

      # Decide on axis order for both spectrum and image. Note that
      # values of 'wa' and 'ij' give the axis that is perpendicular to
      # the slit length (wavelength or position, respectively). Hence we
      # subtract from 3 to get the slit length axis
      jstring_i = str(3 - db['ij'])  # which image (I+S) axis lies along slit
      jstring_s = str(3 - db['wa'])  # which spec (pv) axis lies along slit

      dRA_arcsec = hdr['CD1_'+jstring_i]*3600*np.cos(np.radians(hdr['CRVAL2']))
      dDEC_arcsec = hdr['CD2_'+jstring_i]*3600
      ds = np.hypot(dRA_arcsec, dDEC_arcsec)
      PA = np.degrees(np.arctan2(dRA_arcsec, dDEC_arcsec)) % 360.0

      # Deal with parameters that depend on orientation of the PV image
      if jstring_s == '1':
          # PV slit has spatial axis horizontal in IMAGE coords
          ns = shdr['NAXIS1']
          # Mezcal has used two different ways of specifying on-chip binning
          try:
              # Older way
              spec_binning = shdr['CBIN']
          except KeyError:
              try:
                  # Newer way
                  spec_binning = shdr['CCDXBIN']
              except KeyError:
                  # And the very old data don't have it at all
                  spec_binning = 1
      elif jstring_s == '2':
          # PV slit has spatial axis vertical in IMAGE coords
          ns = shdr['NAXIS2']
          try:
              spec_binning = shdr['RBIN']
          except KeyError:
              try:
                  spec_binning = shdr['CCDYBIN']
              except KeyError:
                  spec_binning = 1
      else:
          raise ValueError('PV slit axis (3 - wa) must be 1 or 2')

      # Pixel coords of each slit pixel on image (in 0-based convention)
      # Deal with parameters that depend on orientation of the I+S image
      if jstring_i == '1':
          # Slit is horizontal in IMAGE coords
          iarr = np.arange(ns) - float(db['shift'])
          jarr = np.ones(ns)*float(db['islit'])
          # Mezcal has used two different ways of specifying on-chip binning
          try:
              # Older way
              image_binning = hdr['CBIN']
          except KeyError:
              try:
                  # Newer way
                  image_binning = hdr['CCDXBIN']
              except KeyError:
                  # And the very old data don't have it at all
                  image_binning = 1
          # correct for difference in binning between the image+slit and the spectrum
          iarr *= spec_binning/image_binning
      elif jstring_i == '2':
          # Slit is vertical in IMAGE coords
          iarr = np.ones(ns)*float(db['islit'])
          jarr = np.arange(ns) - float(db['shift'])
          try:
              image_binning = hdr['RBIN']
          except KeyError:
              try:
                  image_binning = hdr['CCDYBIN']
              except KeyError:
                  image_binning = 1
          jarr *= spec_binning/image_binning
      else:
          raise ValueError('I+S slit axis (3 - ij) must be 1 or 2')

      if db['s'] < 0:
          # Slit pixel axis has opposite sense in I+S and PV
          iarr = iarr[::-1]
          jarr = jarr[::-1]

      print('iarr =', iarr[::100], 'jarr =', jarr[::100])
      # Also correct the nominal slit plate scale
      ds *= spec_binning/image_binning

      # Convert to world coords, using the native frame
      w = WCS(hdr)
      observed_frame = w.wcs.radesys.lower()
      # Note it is vital to ensure the pix2world transformation returns
      # values in the order (RA, Dec), even if the image+slit may have
      # Dec first
      coords = SkyCoord(*w.all_pix2world(iarr, jarr, 0, ra_dec_order=True),
                        unit=(u.deg, u.deg), frame=observed_frame)
      print('coords =', coords[::100])
      print('Binning along slit: image =', image_binning, 'spectrum =', spec_binning)
      # Make sure to return the coords in the ICRS frame
      return {'ds': ds, 'PA': PA,
              'RA': coords.icrs.ra.value,
              'Dec': coords.icrs.dec.value}


#+end_src



*** Tidy up the PV image

+ Remove sky and extraneous border pixels

#+begin_src python
  def subtract_sky_and_trim(data, db, trim=3, margin=10):
      """Assume that pixels within `trim` of edge might be bad, and use
      average sky within margin of edge in spatial direction to define
      the bg
      """
      # convert axis notation from FITS to python convention
      wav_axis = 2 - db["wa"]
      if wav_axis == 0:
          bg = 0.5*(data[:, trim:margin] +
                    data[:, -margin:-trim]).mean(axis=1, keepdims=True)
      else:
          bg = 0.5*(data[trim:margin, :] +
                    data[-margin:-trim, :]).mean(axis=0, keepdims=True)
      # Remove sky background
      newdata = data - bg
      # And only then can we clean up the trim zone
      newdata[:trim, :] = 0.0
      newdata[-trim:, :] = 0.0
      newdata[:, :trim] = 0.0
      newdata[:, -trim:] = 0.0
      return newdata
#+end_src

*** Extract profile along PV slit
+ Add extra continuum since the filter is roughly twice as wide as can fit in the PV spectrum, for which we need:
  - ~bandwidth~ full filter width in angstrom
  - ~linewavs~ list of rest wavelengths of the lines so we know what to avoid
+ [ ] Also should deal with saturated pixels

#+begin_src python
  from astropy.constants import c



  def extract_full_profile_from_pv(spec_hdu, wavaxis, bandwidth, linedict):
      assert(wavaxis in [1, 2]) # wavaxis is in FITS convention
      w = WCS(spec_hdu.header)
      if wavaxis == 1:
          nwav = spec_hdu.header['NAXIS1']
          im = spec_hdu.data[:, :]
          wavs, _ = w.all_pix2world(np.arange(nwav), [0], 0)
      else:
          nwav = spec_hdu.header['NAXIS2']
          im = spec_hdu.data[:, :].T
          _, wavs = w.all_pix2world([0], np.arange(nwav), 0)

      # im should have wavelength as last axis (python convention)
      assert(nwav == im.shape[-1])
      full_profile = im.sum(axis=-1)

      if bandwidth is not None:
          wavmask = np.ones((nwav,)).astype(bool)
          # remove from continuum mask +/- 150 km/s around each line
          for lineid, wav0 in linedict.items():
              vels = 3e5*(wavs - wav0)/wav0
              wavmask = wavmask & (np.abs(vels) > 150.0)

          # broadcast to 2 dimensions
          imwts = np.ones_like(im)*wavmask[None, :]
          av_cont_profile = np.average(im, weights=imwts, axis=-1)
          # find how much extra continuum to add
          dwav = abs(wavs[1] - wavs[0])
          pv_bw = abs(wavs[-1] - wavs[0])
          missing_cont_profile = av_cont_profile*(bandwidth - pv_bw)/dwav
          # Add to the profile summed over the PV bandwidth
          full_profile += missing_cont_profile
      return full_profile


  def extract_slit_profile_from_imslit(data, db, slit_width=1):
      print(db["islit"])
      i1, i2 = int(db["islit"]) - slit_width, int(db["islit"]) + slit_width
      if db["ij"] == 1:
          return data[:, i1:i2].sum(axis=1)
      elif db["ij"] == 2:
          return data[i1:i2, :].sum(axis=0 )
      else:
          raise ValueError("ij must be 1 or 2")


#+end_src


*** Extract spectra for individual lines
+ These are heavily based on the Owl versions, but with changes due swapping ~saxis~ for ~wa~
#+begin_src python
  def extract_profile(data, wcs, wavrest, db, dw=7.0):
      """We don't use this any more"""
      data, bgdata = remove_bg_and_regularize(data, wcs, wavrest, db)
      # pixel limits for line extraction
      lineslice = wavs2slice([wavrest-dw/2, wavrest+dw/2], wcs, db)
      return data[:, lineslice].sum(axis=1), bgdata.sum(axis=1)


  def wavs2slice(wavs, wcs, db):
      """Convert a wavelength interval `wavs` (length-2 sequence) to a slice of the relevant axis`"""
      assert len(wavs) == 2
      isT = db['wa'] == 2
      if isT:
          _, xpixels = wcs.all_world2pix([0, 0], wavs, 0)
      else:
          xpixels, _ = wcs.all_world2pix(wavs, [0, 0], 0)
      print('Wav:', wavs, 'Pixel:', xpixels)
      i1, i2 = np.maximum(0, (xpixels+0.5).astype(int))
      return slice(min(i1, i2), max(i1, i2))


  def extract_line_and_regularize(data, wcs, wavrest, db,
                                  dw=10.0, dwbg_in=7.0, dwbg_out=10.0):
      '''
      Transpose data if necessary, and then subtract off the continuum
      (blue and red of line, inner width `dwbg_in`, outer width
      `dwbg_out`) and restrict to window (width `dw`) around line
      center.  Returns cont-subtracted PV array (2d), cont array (2d),
      and wavs array (1d)
      '''
      isT = db['wa'] == 2
      # Make sure array axis order is (position, wavelength)
      if isT:
          data = data.T
          nwav = wcs.pixel_shape[1]
          _, wavs = wcs.all_pix2world([0], np.arange(nwav), 0)
      else:
          nwav = wcs.pixel_shape[0]
          wavs, _ = wcs.all_pix2world(np.arange(nwav), [0], 0)

      # pixel limits for blue, red bg extraction
      bslice = wavs2slice([wavrest-dwbg_out/2, wavrest-dwbg_in/2], wcs, db)
      rslice = wavs2slice([wavrest+dwbg_in/2, wavrest+dwbg_out/2], wcs, db)
      # extract backgrounds on blue and red sides
      bgblu = np.nanmean(data[:, bslice], axis=1)
      bgred = np.nanmean(data[:, rslice], axis=1)
      # take weighted average, accounting for cases where the bg region
      # does not fit in the image
      weight_blu = data[:, bslice].size
      weight_red = data[:, rslice].size
      print('Background weights:', weight_blu, weight_red)
      if weight_blu and weight_red:
          bg = (bgblu*weight_blu + bgred*weight_red)/(weight_blu + weight_red)
      elif weight_blu:
          bg = bgblu
      elif weight_red:
          bg = bgred
      else:
          raise ValueError("No valid red or blue BG found")
    

      # pixel limits for entire window
      wslice = wavs2slice([wavrest-dw/2, wavrest+dw/2], wcs, db)
      # restrict to just this window
      data = data[:, wslice]
      # and actually subtract the continuum
      bgdata = np.zeros_like(data)
      bgdata += bg[:, None]

      return data - bgdata, bgdata, wavs[wslice]
#+end_src

#+RESULTS:
: None

*** Make WCS for the PV images
#+BEGIN_SRC python
  def make_slit_wcs(db, slit_coords, wavs, j0):

      #
      # First, wavelength axis, which is easy
      #
      dwav = wavs[1] - wavs[0]
      wav0 = wavs[0]
      wavpix0 = 1

      #
      # Second, find the displacement scale and ref point from the slit_coords
      #
      # The slit_coords should already be in ICRS frame
      c = SkyCoord(slit_coords['RA'], slit_coords['Dec'], unit=u.deg)
      # Find vector of separations between adjacent pixels
      seps = c[:-1].separation(c[1:])
      # Ditto for the position angles
      PAs = c[:-1].position_angle(c[1:])
      # Check that they are all the same as the first one
      assert(np.allclose(seps/seps[0], 1.0))
      # assert(np.allclose(PAs/PAs[0], 1.0, rtol=1.e-4))
      # Then use the first one as the slit pixel size and PA
      ds, PA, PA_deg = seps[0].deg, PAs.mean().rad, PAs.mean().deg
      # And for the reference values too
      RA0, Dec0 = c[0].ra.deg, c[0].dec.deg

      #
      # Now make a new shiny output WCS, constructed from scratch
      #
      w = WCS(naxis=3)

      # Make use of all the values that we calculated above
      w.wcs.crpix = [wavpix0, 1, 1]
      w.wcs.cdelt = [dwav, ds, ds]
      w.wcs.crval = [wav0, RA0, Dec0]
      # PC order is i_j = [[1_1, 1_2, 1_3], [2_1, 2_2, 2_3], [3_1, 3_2, 3_3]]
      w.wcs.pc = [[1.0, 0.0, 0.0],
                  [0.0, np.sin(PA), -np.cos(PA)],
                  [0.0, np.cos(PA), np.sin(PA)]]

      #
      # Finally add in auxillary info
      #
      w.wcs.radesys = 'ICRS'
      w.wcs.ctype = ['AWAV', 'RA---TAN', 'DEC--TAN']
      w.wcs.specsys = 'TOPOCENT'
      w.wcs.cunit = [u.Angstrom, u.deg, u.deg]
      w.wcs.name = 'TopoWav'
      w.wcs.cname = ['Observed air wavelength', 'Right Ascension', 'Declination']

      # Check the new pixel values
      npix = len(slit_coords['RA'])
      check_coords = pixel_to_skycoord(np.arange(npix), [0]*npix, w, 0)
      # These should be the same as the ICRS coords in slit_coords
      print('New coords:', check_coords[::100])
      print('Displacements in arcsec:', check_coords.separation(c).arcsec[::100])
      # 15 Sep 2015: They seem to be equal to within about 1e-2 arcsec

      #
      # And a simple version with slit offsets in arcsec
      #
      w2 = WCS(naxis=2)
      w2.wcs.crpix = [wavpix0, j0+1]
      w2.wcs.cdelt = [dwav, ds]
      w2.wcs.crval = [wav0, 0.0]
      w2.wcs.ctype = ['LINEAR', 'LINEAR']

      return w, w2
#+END_SRC
*** Fit Chebyshev polynomial
#+begin_src python
  def fit_cheb(x, y, npoly=3, mask=None):
      """Fits a Chebyshev poly to y(x) and returns fitted y-values"""
      fitter = fitting.LinearLSQFitter()
      p_init = models.Chebyshev1D(npoly, domain=[x.min(), x.max()])
      if mask is None:
          mask = np.ones_like(x).astype(bool)
      p = fitter(p_init, x[mask], y[mask])
      if VERBOSE > 0:
          print(p)
      return p(x)


#+end_src

*** Plot utilities
#+begin_src python
  def make_three_plots(spec, calib, prefix,
                       slit_points=None, niirat=None, neighbors=None, db=None, sdb=None, linelabel="H$\alpha$"):
      assert spec.shape == calib.shape
      fig, axes = plt.subplots(3, 1)

      if slit_points is None:
          ypix = np.arange(len(calib))
          xlabel = "Slit pixel"
          xlim = None
      else:
          ypix = slit_points
          xlabel = "Slit position, arcsec"
          xlim = -80, 80

      xlim = xlim or (ypix.min(), ypix.max())

      # vmax = np.percentile(calib, 95) + 2*calib.std()
      vmax = 20.0
      vmin = -0.01
      ratio = spec/calib

      alpha = 0.8

      # First, plot two profiles against each other to check for zero-point offsets
      # axes[0].plot(calib, spec/ratio_fit, '.', alpha=alpha)
      axes[0].plot(calib, spec, '.', alpha=alpha)
      axes[0].plot([vmin, vmax], [vmin, vmax], '-', alpha=alpha)
      axes[0].set_xlim(vmin, vmax)
      axes[0].set_ylim(vmin, vmax)
      axes[0].set_xlabel('Calibration Image')
      axes[0].set_ylabel('Uncorrected Integrated Spectrum')
      axes[0].set_xscale('symlog', linthreshx=0.01)
      axes[0].set_yscale('symlog', linthreshy=0.01)

      # Second, plot each against slit pixel to check spatial offset
      axes[1].plot(ypix, spec, alpha=alpha, lw=1,
                   label='Integrated Spectrum')
      axes[2].plot(ypix, spec/np.nanmax(calib), alpha=alpha, lw=1,
                   label='Integrated Spectrum')
      axes[1].plot(ypix, calib, alpha=alpha, label='Calibration Image')
      axes[2].plot(ypix, calib/np.nanmax(calib), alpha=alpha, label='Calibration Image')
      if neighbors is not None:
          for nb, calib_nb in neighbors.items():
              lw = 0.5 + 0.1*nb
              label = f"Slit $\Delta x = {nb:+1d}$"
              axes[1].plot(ypix, calib_nb,
                           alpha=0.3*alpha, lw=lw, color="k", label=label)
              axes[2].plot(ypix, calib_nb/np.nanmax(calib_nb),
                           alpha=0.3*alpha, lw=lw, color="k", label=label)
      # axes[1].plot(ypix, spec/ratio_fit, alpha=alpha, lw=1.0,
      #              label='Corrected Integrated Spectrum')
      axes[1].set_xlim(*xlim)
      axes[1].set_ylim(vmin, vmax)
      axes[1].legend(fontsize='xx-small', loc='upper right')
      axes[1].set_xlabel(xlabel)
      axes[1].set_ylabel('Profile (absolute log scale)')
      axes[1].set_yscale('symlog', linthreshy=0.01)

      # # Third, plot ratio to look for spatial trends
      # axes[2].plot(ypix, ratio, alpha=alpha)
      # axes[2].plot(ypix, ratio_fit, alpha=alpha)
      # if niirat is not None:
      #     axes[2].plot(ypix, niirat, 'b', lw=0.5, alpha=0.5)
      axes[2].set_xlim(-40, 40)
      axes[2].set_ylim(-0.05, 1.05)
      axes[2].set_xlabel(xlabel)
      # axes[2].set_ylabel('Ratio: Spec / Calib')
      axes[2].set_ylabel('Profile (relative linear scale)')

      info = ""
      if db is not None:
          # Add some info to the graphs
          info += fr"{linelabel} slit {db['id']:02d}" + "\n"
          info += f"PV: {db['spec']}" +"\n"
          info += f"I+S: {db['imslit']}" + "\n"
          info += f"Date: {db['run']}, t = {db['t']} s" + "\n"
      if sdb is not None:
          info += fr"Slit PA = ${sdb['PA']:.1f}^\circ$, ds = {sdb['ds']:.2f} arcsec" + "\n"
      if info:
          axes[0].text(0.95, 0.05, info,
                       fontsize="small",
                       ha="right", va="bottom", transform=axes[0].transAxes)
      fig.set_size_inches(5, 8)
      fig.tight_layout(pad=0.4, w_pad=0.5, h_pad=1.0)
      fig.savefig(prefix+'.png', dpi=300)
      plt.close(fig)

      return None


#+end_src

#+RESULTS:
: None

* Teresa's tables
** H alpha
So, she has 11 positions missing
*** 2015 Ha (11 positions)
| #       |      RA |     Dec | dataset | helio corr |  NX |  NY | xpixscale | jcenter | ufiddle | fluxfiddle | "True File"          |
|---------+---------+---------+---------+------------+-----+-----+-----------+---------+---------+------------+----------------------|
| east871 | -0.8712 | 22.0212 |       1 |     -20.54 | 300 | 373 |     0.351 |     219 |       0 |         20 | spec0116-ha-inv.fits |
| east612 | -0.7104 | 22.1004 |       1 |     -20.45 | 300 | 373 |     0.351 |     225 |       0 |         30 | spec0110-ha-inv.fits |
| east300 |    -0.3 | -7.5708 |       1 |     -20.41 | 300 | 373 |     0.352 |     145 |       0 |          1 | spec0031-ha-inv.fits |
| east148 |  -0.096 | -8.5932 |       1 |     -20.49 | 300 | 373 |     0.352 |     144 |       0 |          1 | spec0037-ha-inv.fits |
| west069 |  0.0696 | -7.1784 |       1 |     -20.55 | 300 | 373 |     0.352 |     150 |       0 |          1 | spec0043-ha-inv.fits |
| west300 |     0.3 | -6.6456 |       1 |     -20.59 | 300 | 373 |     0.352 |     150 |       0 |          1 | spec0049-ha-inv.fits |
| west492 |   0.492 | -7.1532 |       1 |     -20.63 | 300 | 373 |     0.352 |     144 |       0 |          1 | spec0057-ha-inv.fits |
| west528 |   0.528 | 22.9752 |       1 |     -20.47 | 300 | 373 |     0.351 |     224 |       0 |          1 | spec0173-ha-inv.fits |
| west684 |   0.684 | 22.0284 |       1 |     -20.65 | 300 | 373 |     0.351 |     220 |       0 |          1 | spec0124-ha-inv.fits |
| west873 |  0.8736 | 21.0384 |       1 |     -20.55 | 300 | 373 |     0.351 |     215 |       0 |          1 | spec0179-ha-inv.fits |
| west120 |  1.2024 | 21.5748 |       1 |      -20.6 | 300 | 373 |     0.351 |     220 |       0 |          1 | spec0186-ha-inv.fits |

+ Imported from file:~/Dropbox/Papers/LL-Objects/NGC6210/Temporada2015/SPMha/star-ha.csv
+ Constant columns removed:
  + lamrest :: 6562.8
  + lam0 :: 6557
  + lamscale :: 0.043752133
  + d vel :: 2

*** 1998 \to 2013 Ha (8 positions)
| #       |      RA |     Dec | dataset | helio corr |  NX |  NY | ypixscale | jcenter | ufiddle | fluxfiddle | "True File"                   |
|---------+---------+---------+---------+------------+-----+-----+-----------+---------+---------+------------+-------------------------------|
| east087 | -1.0968 |   -5.76 |       1 |      -3.23 | 300 | 101 |     0.624 |      55 |       0 |          1 | spec135-crop-ha.fits          |
| east040 | -0.6264 | -10.476 |       1 |       -2.9 | 300 | 101 |     0.625 |      55 |       0 |          1 | spec119-crop-ha.fits          |
| east015 |  -0.372 |  -9.612 |       1 |      -2.84 | 300 | 101 |     0.626 |      55 |       0 |          1 | spec116-crop-ha.fits          |
| west005 |  -0.168 |   -9.72 |       1 |      -2.79 | 300 | 101 |     0.625 |      55 |       0 |          1 | spec112-crop-ha.fits          |
| west027 |  0.0432 |  19.404 |       2 |       2.44 | 300 | 101 |     0.351 |     130 |       0 |          1 | spec112-2crop-ha-binning.fits |
| west053 |  0.3048 | -10.116 |       1 |      -2.97 | 300 | 101 |     0.625 |      55 |       0 |          1 | spec122-crop-ha.fits          |
| west084 |  0.6168 |  -9.612 |       1 |      -3.04 | 300 | 101 |     0.624 |      55 |       0 |          1 | spec125-crop-ha.fits          |
| west122 |  0.9936 |  -8.784 |       1 |      -3.17 | 300 | 101 |     0.623 |      55 |       0 |          1 | spec130-crop-ha.fits          |
